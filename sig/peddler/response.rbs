module Peddler
  class Response < SimpleDelegator
    extend Forwardable

    @parser: untyped

    def self.wrap: (HTTP::Response response, ?parser: untyped) -> Response

    attr_reader parser: untyped
    def initialize: (HTTP::Response http_response, ?parser: untyped) -> void

    def dig: (untyped, *untyped) -> untyped
    def parsable?: () -> bool
    def parse: () -> untyped
    def raise_for_status!: () -> void
    def status: () -> Integer
    def to_h: () -> Hash[String, untyped]

    private

    def raise: (*untyped) -> bot
  end
end
