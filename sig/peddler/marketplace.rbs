module Peddler
  MARKETPLACE_IDS: Hash[String, Hash[Symbol, String]]

  class Marketplace < Data
    def self.new: (?id: String?, ?country_code: String?, ?country_name: String?, ?selling_region: String?) -> Marketplace

    def self.all: () -> Array[Marketplace]
    def self.find: (String country_code) -> Marketplace

    def self.gb: () -> Marketplace
    def self.id: (String country_code) -> String
    def self.ids: (*String country_codes) -> Array[String]

    # Dynamically defined country methods
    def self.us: () -> Marketplace
    attr_reader country_code: String
    attr_reader country_name: String
    attr_reader id: String

    attr_reader selling_region: String

    def endpoint: () -> Endpoint

    alias to_s to_str
    def to_str: () -> String
  end
end
