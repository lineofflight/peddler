module Peddler
  module Types
    module AplusContent20201101
      class Decorator < Data
        def self.new: (?depth: Integer?, ?length: Integer?, ?offset: Integer?, ?type: String?) -> Peddler::Types::AplusContent20201101::Decorator
                    | (Integer?, Integer?, Integer?, String?) -> Peddler::Types::AplusContent20201101::Decorator

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::AplusContent20201101::Decorator

        attr_reader depth: Integer?
        attr_reader length: Integer?
        attr_reader offset: Integer?
        attr_reader type: String?

        def to_h: () -> { depth: Integer?, length: Integer?, offset: Integer?, type: String? }
      end
    end
  end
end
