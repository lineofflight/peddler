# This file is generated. Do not edit.

module Peddler
  module Types
    module CatalogItemsV0
      class Categories < Data
        def self.new: (?product_category_id: String?, ?product_category_name: String?, ?parent: Hash[untyped, untyped]?) -> Peddler::Types::CatalogItemsV0::Categories
                    | (String?, String?, Hash[untyped, untyped]?) -> Peddler::Types::CatalogItemsV0::Categories

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::CatalogItemsV0::Categories

        attr_reader product_category_id: String?
        attr_reader product_category_name: String?
        attr_reader parent: Hash[untyped, untyped]?

        def to_h: () -> { product_category_id: String?, product_category_name: String?, parent: Hash[untyped, untyped]? }
      end
    end
  end
end
