module Peddler
  module Types
    module VendorInvoicesV1
      class PaymentTerms < Data
        def self.new: (?discount_due_days: Float?, ?discount_percent: String?, ?net_due_days: Float?, ?type: String?) -> Peddler::Types::VendorInvoicesV1::PaymentTerms
                    | (Float?, String?, Float?, String?) -> Peddler::Types::VendorInvoicesV1::PaymentTerms

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::VendorInvoicesV1::PaymentTerms

        attr_reader discount_due_days: Float?
        attr_reader discount_percent: String?
        attr_reader net_due_days: Float?
        attr_reader type: String?

        def to_h: () -> { discount_due_days: Float?, discount_percent: String?, net_due_days: Float?, type: String? }
      end
    end
  end
end
