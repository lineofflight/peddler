# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module VendorInvoicesV1
      class ItemQuantity < Data
        def self.new: (amount: Integer?, unit_of_measure: String?, unit_size: Integer?, total_weight: Peddler::Types::VendorInvoicesV1::TotalWeight?) -> instance
                    | (Integer?, String?, Integer?, Peddler::Types::VendorInvoicesV1::TotalWeight?) -> instance

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> instance

        attr_reader amount: Integer?
        attr_reader unit_of_measure: String?
        attr_reader unit_size: Integer?
        attr_reader total_weight: Peddler::Types::VendorInvoicesV1::TotalWeight?

        def to_h: () -> { amount: Integer?, unit_of_measure: String?, unit_size: Integer?, total_weight: Peddler::Types::VendorInvoicesV1::TotalWeight? }
      end
    end
  end
end
