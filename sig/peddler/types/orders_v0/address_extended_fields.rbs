module Peddler
  module Types
    module OrdersV0
      class AddressExtendedFields < Data
        def self.new: (?complement: String?, ?neighborhood: String?, ?street_name: String?, ?street_number: String?) -> Peddler::Types::OrdersV0::AddressExtendedFields
                    | (String?, String?, String?, String?) -> Peddler::Types::OrdersV0::AddressExtendedFields

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::OrdersV0::AddressExtendedFields

        attr_reader complement: String?
        attr_reader neighborhood: String?
        attr_reader street_name: String?
        attr_reader street_number: String?

        def to_h: () -> { complement: String?, neighborhood: String?, street_name: String?, street_number: String? }
      end
    end
  end
end
