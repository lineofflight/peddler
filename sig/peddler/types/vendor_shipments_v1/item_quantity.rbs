# This file is generated. Do not edit.

module Peddler
  module Types
    module VendorShipmentsV1
      class ItemQuantity < Data
        def self.new: (amount: Integer?, unit_of_measure: String?, ?total_weight: Peddler::Types::VendorShipmentsV1::TotalWeight?, ?unit_size: Integer?) -> Peddler::Types::VendorShipmentsV1::ItemQuantity
                    | (Integer?, String?, Peddler::Types::VendorShipmentsV1::TotalWeight?, Integer?) -> Peddler::Types::VendorShipmentsV1::ItemQuantity

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::VendorShipmentsV1::ItemQuantity

        attr_reader amount: Integer?
        attr_reader unit_of_measure: String?
        attr_reader total_weight: Peddler::Types::VendorShipmentsV1::TotalWeight?
        attr_reader unit_size: Integer?

        def to_h: () -> { amount: Integer?, unit_of_measure: String?, total_weight: Peddler::Types::VendorShipmentsV1::TotalWeight?, unit_size: Integer? }
      end
    end
  end
end
