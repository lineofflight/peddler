# This file is generated. Do not edit.

module Peddler
  module Types
    module VendorShipmentsV1
      class ShipmentConfirmation < Data
        def self.new: (selling_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?, ship_from_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?, ship_to_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?, shipment_confirmation_date: String?, shipment_confirmation_type: String?, shipment_identifier: String?, shipped_items: Array[Peddler::Types::VendorShipmentsV1::Item]?, ?amazon_reference_number: String?, ?cartons: Array[Peddler::Types::VendorShipmentsV1::Carton]?, ?estimated_delivery_date: String?, ?import_details: Peddler::Types::VendorShipmentsV1::ImportDetails?, ?pallets: Array[Peddler::Types::VendorShipmentsV1::Pallet]?, ?shipment_measurements: Peddler::Types::VendorShipmentsV1::ShipmentMeasurements?, ?shipment_structure: String?, ?shipment_type: String?, ?shipped_date: String?, ?transportation_details: Peddler::Types::VendorShipmentsV1::TransportationDetailsForShipmentConfirmation?) -> Peddler::Types::VendorShipmentsV1::ShipmentConfirmation
                    | (Peddler::Types::VendorShipmentsV1::PartyIdentification?, Peddler::Types::VendorShipmentsV1::PartyIdentification?, Peddler::Types::VendorShipmentsV1::PartyIdentification?, String?, String?, String?, Array[Peddler::Types::VendorShipmentsV1::Item]?, String?, Array[Peddler::Types::VendorShipmentsV1::Carton]?, String?, Peddler::Types::VendorShipmentsV1::ImportDetails?, Array[Peddler::Types::VendorShipmentsV1::Pallet]?, Peddler::Types::VendorShipmentsV1::ShipmentMeasurements?, String?, String?, String?, Peddler::Types::VendorShipmentsV1::TransportationDetailsForShipmentConfirmation?) -> Peddler::Types::VendorShipmentsV1::ShipmentConfirmation

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::VendorShipmentsV1::ShipmentConfirmation

        attr_reader selling_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?
        attr_reader ship_from_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?
        attr_reader ship_to_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?
        attr_reader shipment_confirmation_date: String?
        attr_reader shipment_confirmation_type: String?
        attr_reader shipment_identifier: String?
        attr_reader shipped_items: Array[Peddler::Types::VendorShipmentsV1::Item]?
        attr_reader amazon_reference_number: String?
        attr_reader cartons: Array[Peddler::Types::VendorShipmentsV1::Carton]?
        attr_reader estimated_delivery_date: String?
        attr_reader import_details: Peddler::Types::VendorShipmentsV1::ImportDetails?
        attr_reader pallets: Array[Peddler::Types::VendorShipmentsV1::Pallet]?
        attr_reader shipment_measurements: Peddler::Types::VendorShipmentsV1::ShipmentMeasurements?
        attr_reader shipment_structure: String?
        attr_reader shipment_type: String?
        attr_reader shipped_date: String?
        attr_reader transportation_details: Peddler::Types::VendorShipmentsV1::TransportationDetailsForShipmentConfirmation?

        def to_h: () -> { selling_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?, ship_from_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?, ship_to_party: Peddler::Types::VendorShipmentsV1::PartyIdentification?, shipment_confirmation_date: String?, shipment_confirmation_type: String?, shipment_identifier: String?, shipped_items: Array[Peddler::Types::VendorShipmentsV1::Item]?, amazon_reference_number: String?, cartons: Array[Peddler::Types::VendorShipmentsV1::Carton]?, estimated_delivery_date: String?, import_details: Peddler::Types::VendorShipmentsV1::ImportDetails?, pallets: Array[Peddler::Types::VendorShipmentsV1::Pallet]?, shipment_measurements: Peddler::Types::VendorShipmentsV1::ShipmentMeasurements?, shipment_structure: String?, shipment_type: String?, shipped_date: String?, transportation_details: Peddler::Types::VendorShipmentsV1::TransportationDetailsForShipmentConfirmation? }
      end
    end
  end
end
