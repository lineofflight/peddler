module Peddler
  module Types
    module ShippingV2
      class AccessPoint < Data
        def self.new: (?access_point_id: String?, ?accessibility_attributes: Peddler::Types::ShippingV2::AccessibilityAttributes?, ?address: Peddler::Types::ShippingV2::Address?, ?assistance_type: String?, ?exception_operating_hours: Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?, ?name: String?, ?score: String?, ?standard_operating_hours: Hash[untyped, untyped]?, ?timezone: String?, ?type: String?) -> Peddler::Types::ShippingV2::AccessPoint
                    | (String?, Peddler::Types::ShippingV2::AccessibilityAttributes?, Peddler::Types::ShippingV2::Address?, String?, Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?, String?, String?, Hash[untyped, untyped]?, String?, String?) -> Peddler::Types::ShippingV2::AccessPoint

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::AccessPoint

        attr_reader access_point_id: String?
        attr_reader accessibility_attributes: Peddler::Types::ShippingV2::AccessibilityAttributes?
        attr_reader address: Peddler::Types::ShippingV2::Address?
        attr_reader assistance_type: String?
        attr_reader exception_operating_hours: Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?
        attr_reader name: String?
        attr_reader score: String?
        attr_reader standard_operating_hours: Hash[untyped, untyped]?
        attr_reader timezone: String?
        attr_reader type: String?

        def to_h: () -> { access_point_id: String?, accessibility_attributes: Peddler::Types::ShippingV2::AccessibilityAttributes?, address: Peddler::Types::ShippingV2::Address?, assistance_type: String?, exception_operating_hours: Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?, name: String?, score: String?, standard_operating_hours: Hash[untyped, untyped]?, timezone: String?, type: String? }
      end
    end
  end
end
