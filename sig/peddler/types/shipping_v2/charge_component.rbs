# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ShippingV2
      class ChargeComponent < Data
        def self.new: (?amount: Peddler::Types::Money?, ?charge_type: String?) -> Peddler::Types::ShippingV2::ChargeComponent
                    | (Peddler::Types::Money?, String?) -> Peddler::Types::ShippingV2::ChargeComponent

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ShippingV2::ChargeComponent

        attr_reader amount: Peddler::Types::Money?
        attr_reader charge_type: String?

        def to_h: () -> { amount: Peddler::Types::Money?, charge_type: String? }
      end
    end
  end
end
