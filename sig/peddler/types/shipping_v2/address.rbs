module Peddler
  module Types
    module ShippingV2
      class Address < Data
        def self.new: (address_line1: String?, city: String?, country_code: String?, name: String?, postal_code: String?, state_or_region: String?, ?address_line2: String?, ?address_line3: String?, ?company_name: String?, ?email: String?, ?geocode: Peddler::Types::ShippingV2::Geocode?, ?phone_number: String?) -> Peddler::Types::ShippingV2::Address
                    | (String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Peddler::Types::ShippingV2::Geocode?, String?) -> Peddler::Types::ShippingV2::Address

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Address

        attr_reader address_line1: String?

        attr_reader address_line2: String?
        attr_reader address_line3: String?
        attr_reader city: String?

        attr_reader company_name: String?
        attr_reader country_code: String?

        attr_reader email: String?
        attr_reader geocode: Peddler::Types::ShippingV2::Geocode?
        attr_reader name: String?

        attr_reader phone_number: String?
        attr_reader postal_code: String?
        attr_reader state_or_region: String?

        def to_h: () -> { address_line1: String?, city: String?, country_code: String?, name: String?, postal_code: String?, state_or_region: String?, address_line2: String?, address_line3: String?, company_name: String?, email: String?, geocode: Peddler::Types::ShippingV2::Geocode?, phone_number: String? }
      end
    end
  end
end
