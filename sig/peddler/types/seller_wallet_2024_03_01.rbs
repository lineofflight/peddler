module Peddler
  module Types
    module SellerWallet20240301
      class AccountHolderAddress < Data
        def self.new: (address_line1: String?, city: String?, country_code: String?, postal_code: String?, state: String?, ?address_line2: String?, ?country: String?) -> Peddler::Types::SellerWallet20240301::AccountHolderAddress
                    | (String?, String?, String?, String?, String?, String?, String?) -> Peddler::Types::SellerWallet20240301::AccountHolderAddress

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::AccountHolderAddress

        attr_reader address_line1: String?

        attr_reader address_line2: String?
        attr_reader city: String?

        attr_reader country: String?
        attr_reader country_code: String?
        attr_reader postal_code: String?
        attr_reader state: String?

        def to_h: () -> { address_line1: String?, city: String?, country_code: String?, postal_code: String?, state: String?, address_line2: String?, country: String? }
      end

      class Balance < Data
        def self.new: (account_id: String?, balance_amount: Float?, balance_currency: String?, last_update_date: String?, ?balance_type: String?) -> Peddler::Types::SellerWallet20240301::Balance
                    | (String?, Float?, String?, String?, String?) -> Peddler::Types::SellerWallet20240301::Balance

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::Balance

        attr_reader account_id: String?
        attr_reader balance_amount: Float?
        attr_reader balance_currency: String?

        attr_reader balance_type: String?
        attr_reader last_update_date: String?

        def to_h: () -> { account_id: String?, balance_amount: Float?, balance_currency: String?, last_update_date: String?, balance_type: String? }
      end

      class BalanceListing < Data
        def self.new: (?balances: Array[Peddler::Types::SellerWallet20240301::Balance]?) -> Peddler::Types::SellerWallet20240301::BalanceListing
                    | (Array[Peddler::Types::SellerWallet20240301::Balance]?) -> Peddler::Types::SellerWallet20240301::BalanceListing

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::BalanceListing

        attr_reader balances: Array[Peddler::Types::SellerWallet20240301::Balance]?

        def to_h: () -> { balances: Array[Peddler::Types::SellerWallet20240301::Balance]? }
      end

      class BankAccount < Data
        def self.new: (account_country_code: String?, account_currency: String?, bank_account_number_format: String?, bank_account_number_tail: String?, bank_account_ownership_type: String?, bank_number_format: String?, routing_number: String?, ?account_holder_name: String?, ?account_id: String?, ?bank_account_holder_status: String?, ?bank_name: String?) -> Peddler::Types::SellerWallet20240301::BankAccount
                    | (String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?) -> Peddler::Types::SellerWallet20240301::BankAccount

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::BankAccount

        attr_reader account_country_code: String?
        attr_reader account_currency: String?

        attr_reader account_holder_name: String?
        attr_reader account_id: String?
        attr_reader bank_account_holder_status: String?
        attr_reader bank_account_number_format: String?
        attr_reader bank_account_number_tail: String?
        attr_reader bank_account_ownership_type: String?

        attr_reader bank_name: String?
        attr_reader bank_number_format: String?
        attr_reader routing_number: String?

        def to_h: () -> { account_country_code: String?, account_currency: String?, bank_account_number_format: String?, bank_account_number_tail: String?, bank_account_ownership_type: String?, bank_number_format: String?, routing_number: String?, account_holder_name: String?, account_id: String?, bank_account_holder_status: String?, bank_name: String? }
      end

      class BankAccountListing < Data
        def self.new: (accounts: Array[Peddler::Types::SellerWallet20240301::BankAccount]?) -> Peddler::Types::SellerWallet20240301::BankAccountListing
                    | (Array[Peddler::Types::SellerWallet20240301::BankAccount]?) -> Peddler::Types::SellerWallet20240301::BankAccountListing

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::BankAccountListing

        attr_reader accounts: Array[Peddler::Types::SellerWallet20240301::BankAccount]?

        def to_h: () -> { accounts: Array[Peddler::Types::SellerWallet20240301::BankAccount]? }
      end

      class CreateTransactionResponse < Data
        def self.new: (call_back_url: String?, transaction: Peddler::Types::SellerWallet20240301::Transaction?) -> Peddler::Types::SellerWallet20240301::CreateTransactionResponse
                    | (String?, Peddler::Types::SellerWallet20240301::Transaction?) -> Peddler::Types::SellerWallet20240301::CreateTransactionResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::CreateTransactionResponse

        attr_reader call_back_url: String?
        attr_reader transaction: Peddler::Types::SellerWallet20240301::Transaction?

        def to_h: () -> { call_back_url: String?, transaction: Peddler::Types::SellerWallet20240301::Transaction? }
      end

      class DeleteTransferSchedule < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::Types::SellerWallet20240301::DeleteTransferSchedule
                    | (String?, String?, String?) -> Peddler::Types::SellerWallet20240301::DeleteTransferSchedule

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::DeleteTransferSchedule

        attr_reader code: String?

        attr_reader details: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class Error < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::Types::SellerWallet20240301::Error
                    | (String?, String?, String?) -> Peddler::Types::SellerWallet20240301::Error

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::Error

        attr_reader code: String?

        attr_reader details: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class ErrorList < Data
        def self.new: (errors: Array[Peddler::Types::SellerWallet20240301::Error]?) -> Peddler::Types::SellerWallet20240301::ErrorList
                    | (Array[Peddler::Types::SellerWallet20240301::Error]?) -> Peddler::Types::SellerWallet20240301::ErrorList

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::ErrorList

        attr_reader errors: Array[Peddler::Types::SellerWallet20240301::Error]?

        def to_h: () -> { errors: Array[Peddler::Types::SellerWallet20240301::Error]? }
      end

      class Fee < Data
        def self.new: (fee_amount: Peddler::Types::Money?, fee_id: String?, fee_rate_value: String?, fee_type: String?) -> Peddler::Types::SellerWallet20240301::Fee
                    | (Peddler::Types::Money?, String?, String?, String?) -> Peddler::Types::SellerWallet20240301::Fee

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::Fee

        attr_reader fee_amount: Peddler::Types::Money?
        attr_reader fee_id: String?
        attr_reader fee_rate_value: String?
        attr_reader fee_type: String?

        def to_h: () -> { fee_amount: Peddler::Types::Money?, fee_id: String?, fee_rate_value: String?, fee_type: String? }
      end

      class FxRateDetails < Data
        def self.new: (base_rate: Float?, effective_fx_rate: Float?, fx_rate_id: String?, rate_direction: String?) -> Peddler::Types::SellerWallet20240301::FxRateDetails
                    | (Float?, Float?, String?, String?) -> Peddler::Types::SellerWallet20240301::FxRateDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::FxRateDetails

        attr_reader base_rate: Float?
        attr_reader effective_fx_rate: Float?
        attr_reader fx_rate_id: String?
        attr_reader rate_direction: String?

        def to_h: () -> { base_rate: Float?, effective_fx_rate: Float?, fx_rate_id: String?, rate_direction: String? }
      end

      class PaymentPreference < Data
        def self.new: (payment_preference_payment_type: String?, value: Float?) -> Peddler::Types::SellerWallet20240301::PaymentPreference
                    | (String?, Float?) -> Peddler::Types::SellerWallet20240301::PaymentPreference

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::PaymentPreference

        attr_reader payment_preference_payment_type: String?
        attr_reader value: Float?

        def to_h: () -> { payment_preference_payment_type: String?, value: Float? }
      end

      class ScheduleExpression < Data
        def self.new: (schedule_expression_type: String?, ?recurring_frequency: String?) -> Peddler::Types::SellerWallet20240301::ScheduleExpression
                    | (String?, String?) -> Peddler::Types::SellerWallet20240301::ScheduleExpression

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::ScheduleExpression

        attr_reader recurring_frequency: String?
        attr_reader schedule_expression_type: String?

        def to_h: () -> { schedule_expression_type: String?, recurring_frequency: String? }
      end

      class Transaction < Data
        def self.new: (last_update_date: String?, transaction_description: String?, transaction_destination_account: Peddler::Types::SellerWallet20240301::TransactionAccount?, transaction_id: String?, transaction_request_amount: Peddler::Types::Money?, transaction_request_date: String?, transaction_requester_source: String?, transaction_source_account: Peddler::Types::SellerWallet20240301::TransactionAccount?, transaction_status: String?, transaction_type: String?, transfer_rate_details: Peddler::Types::SellerWallet20240301::TransferRatePreview?, ?expected_completion_date: String?, ?requester_name: String?, ?transaction_actual_completion_date: String?, ?transaction_failure_reason: String?, ?transaction_final_amount: Peddler::Types::Money?) -> Peddler::Types::SellerWallet20240301::Transaction
                    | (String?, String?, Peddler::Types::SellerWallet20240301::TransactionAccount?, String?, Peddler::Types::Money?, String?, String?, Peddler::Types::SellerWallet20240301::TransactionAccount?, String?, String?, Peddler::Types::SellerWallet20240301::TransferRatePreview?, String?, String?, String?, String?, Peddler::Types::Money?) -> Peddler::Types::SellerWallet20240301::Transaction

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::Transaction

        attr_reader expected_completion_date: String?
        attr_reader last_update_date: String?

        attr_reader requester_name: String?
        attr_reader transaction_actual_completion_date: String?
        attr_reader transaction_description: String?
        attr_reader transaction_destination_account: Peddler::Types::SellerWallet20240301::TransactionAccount?

        attr_reader transaction_failure_reason: String?
        attr_reader transaction_final_amount: Peddler::Types::Money?
        attr_reader transaction_id: String?
        attr_reader transaction_request_amount: Peddler::Types::Money?
        attr_reader transaction_request_date: String?
        attr_reader transaction_requester_source: String?
        attr_reader transaction_source_account: Peddler::Types::SellerWallet20240301::TransactionAccount?
        attr_reader transaction_status: String?
        attr_reader transaction_type: String?
        attr_reader transfer_rate_details: Peddler::Types::SellerWallet20240301::TransferRatePreview?

        def to_h: () -> { last_update_date: String?, transaction_description: String?, transaction_destination_account: Peddler::Types::SellerWallet20240301::TransactionAccount?, transaction_id: String?, transaction_request_amount: Peddler::Types::Money?, transaction_request_date: String?, transaction_requester_source: String?, transaction_source_account: Peddler::Types::SellerWallet20240301::TransactionAccount?, transaction_status: String?, transaction_type: String?, transfer_rate_details: Peddler::Types::SellerWallet20240301::TransferRatePreview?, expected_completion_date: String?, requester_name: String?, transaction_actual_completion_date: String?, transaction_failure_reason: String?, transaction_final_amount: Peddler::Types::Money? }
      end

      class TransactionAccount < Data
        def self.new: (bank_account_currency: String?, bank_account_number_format: String?, bank_name: String?, ?account_id: String?, ?bank_account_country_code: String?, ?bank_account_holder_name: String?, ?bank_account_number_tail: String?) -> Peddler::Types::SellerWallet20240301::TransactionAccount
                    | (String?, String?, String?, String?, String?, String?, String?) -> Peddler::Types::SellerWallet20240301::TransactionAccount

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransactionAccount

        attr_reader account_id: String?
        attr_reader bank_account_country_code: String?
        attr_reader bank_account_currency: String?

        attr_reader bank_account_holder_name: String?
        attr_reader bank_account_number_format: String?

        attr_reader bank_account_number_tail: String?
        attr_reader bank_name: String?

        def to_h: () -> { bank_account_currency: String?, bank_account_number_format: String?, bank_name: String?, account_id: String?, bank_account_country_code: String?, bank_account_holder_name: String?, bank_account_number_tail: String? }
      end

      class TransactionInitiationRequest < Data
        def self.new: (destination_transaction_instrument: Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?, request_time: String?, source_account_id: String?, source_amount: Peddler::Types::Money?, ?customer_payment_reference: String?, ?destination_account_holder_address: Peddler::Types::SellerWallet20240301::AccountHolderAddress?, ?destination_account_id: String?, ?transaction_description: String?, ?transfer_rate_details: Peddler::Types::SellerWallet20240301::TransferRatePreview?) -> Peddler::Types::SellerWallet20240301::TransactionInitiationRequest
                    | (Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?, String?, String?, Peddler::Types::Money?, String?, Peddler::Types::SellerWallet20240301::AccountHolderAddress?, String?, String?, Peddler::Types::SellerWallet20240301::TransferRatePreview?) -> Peddler::Types::SellerWallet20240301::TransactionInitiationRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransactionInitiationRequest

        attr_reader customer_payment_reference: String?
        attr_reader destination_account_holder_address: Peddler::Types::SellerWallet20240301::AccountHolderAddress?
        attr_reader destination_account_id: String?
        attr_reader destination_transaction_instrument: Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?
        attr_reader request_time: String?
        attr_reader source_account_id: String?
        attr_reader source_amount: Peddler::Types::Money?

        attr_reader transaction_description: String?
        attr_reader transfer_rate_details: Peddler::Types::SellerWallet20240301::TransferRatePreview?

        def to_h: () -> { destination_transaction_instrument: Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?, request_time: String?, source_account_id: String?, source_amount: Peddler::Types::Money?, customer_payment_reference: String?, destination_account_holder_address: Peddler::Types::SellerWallet20240301::AccountHolderAddress?, destination_account_id: String?, transaction_description: String?, transfer_rate_details: Peddler::Types::SellerWallet20240301::TransferRatePreview? }
      end

      class TransactionInstrumentDetails < Data
        def self.new: (account_holder_name: String?, bank_account: Peddler::Types::SellerWallet20240301::BankAccount?, bank_account_number: String?) -> Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails
                    | (String?, Peddler::Types::SellerWallet20240301::BankAccount?, String?) -> Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails

        attr_reader account_holder_name: String?
        attr_reader bank_account: Peddler::Types::SellerWallet20240301::BankAccount?
        attr_reader bank_account_number: String?

        def to_h: () -> { account_holder_name: String?, bank_account: Peddler::Types::SellerWallet20240301::BankAccount?, bank_account_number: String? }
      end

      class TransactionListing < Data
        def self.new: (transactions: Array[Peddler::Types::SellerWallet20240301::Transaction]?, ?next_page_token: String?) -> Peddler::Types::SellerWallet20240301::TransactionListing
                    | (Array[Peddler::Types::SellerWallet20240301::Transaction]?, String?) -> Peddler::Types::SellerWallet20240301::TransactionListing

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransactionListing

        attr_reader next_page_token: String?
        attr_reader transactions: Array[Peddler::Types::SellerWallet20240301::Transaction]?

        def to_h: () -> { transactions: Array[Peddler::Types::SellerWallet20240301::Transaction]?, next_page_token: String? }
      end

      class TransferRatePreview < Data
        def self.new: (base_amount: Peddler::Types::Money?, fees: Array[Peddler::Types::SellerWallet20240301::Fee]?, fx_rate_details: Peddler::Types::SellerWallet20240301::FxRateDetails?, transfer_amount: Peddler::Types::Money?) -> Peddler::Types::SellerWallet20240301::TransferRatePreview
                    | (Peddler::Types::Money?, Array[Peddler::Types::SellerWallet20240301::Fee]?, Peddler::Types::SellerWallet20240301::FxRateDetails?, Peddler::Types::Money?) -> Peddler::Types::SellerWallet20240301::TransferRatePreview

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransferRatePreview

        attr_reader base_amount: Peddler::Types::Money?
        attr_reader fees: Array[Peddler::Types::SellerWallet20240301::Fee]?
        attr_reader fx_rate_details: Peddler::Types::SellerWallet20240301::FxRateDetails?
        attr_reader transfer_amount: Peddler::Types::Money?

        def to_h: () -> { base_amount: Peddler::Types::Money?, fees: Array[Peddler::Types::SellerWallet20240301::Fee]?, fx_rate_details: Peddler::Types::SellerWallet20240301::FxRateDetails?, transfer_amount: Peddler::Types::Money? }
      end

      class TransferSchedule < Data
        def self.new: (transaction_destination_account: Peddler::Types::SellerWallet20240301::TransactionAccount?, transaction_type: String?, transfer_schedule_failures: Array[Peddler::Types::SellerWallet20240301::TransferScheduleFailures]?, transfer_schedule_id: String?, transfer_schedule_information: Peddler::Types::SellerWallet20240301::TransferScheduleInformation?, transfer_schedule_status: String?, ?payment_preference: Peddler::Types::SellerWallet20240301::PaymentPreference?, ?transaction_source_account: Peddler::Types::SellerWallet20240301::TransactionAccount?) -> Peddler::Types::SellerWallet20240301::TransferSchedule
                    | (Peddler::Types::SellerWallet20240301::TransactionAccount?, String?, Array[Peddler::Types::SellerWallet20240301::TransferScheduleFailures]?, String?, Peddler::Types::SellerWallet20240301::TransferScheduleInformation?, String?, Peddler::Types::SellerWallet20240301::PaymentPreference?, Peddler::Types::SellerWallet20240301::TransactionAccount?) -> Peddler::Types::SellerWallet20240301::TransferSchedule

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransferSchedule

        attr_reader payment_preference: Peddler::Types::SellerWallet20240301::PaymentPreference?
        attr_reader transaction_destination_account: Peddler::Types::SellerWallet20240301::TransactionAccount?

        attr_reader transaction_source_account: Peddler::Types::SellerWallet20240301::TransactionAccount?
        attr_reader transaction_type: String?
        attr_reader transfer_schedule_failures: Array[Peddler::Types::SellerWallet20240301::TransferScheduleFailures]?
        attr_reader transfer_schedule_id: String?
        attr_reader transfer_schedule_information: Peddler::Types::SellerWallet20240301::TransferScheduleInformation?
        attr_reader transfer_schedule_status: String?

        def to_h: () -> { transaction_destination_account: Peddler::Types::SellerWallet20240301::TransactionAccount?, transaction_type: String?, transfer_schedule_failures: Array[Peddler::Types::SellerWallet20240301::TransferScheduleFailures]?, transfer_schedule_id: String?, transfer_schedule_information: Peddler::Types::SellerWallet20240301::TransferScheduleInformation?, transfer_schedule_status: String?, payment_preference: Peddler::Types::SellerWallet20240301::PaymentPreference?, transaction_source_account: Peddler::Types::SellerWallet20240301::TransactionAccount? }
      end

      class TransferScheduleFailures < Data
        def self.new: (transfer_schedule_failure_date: String?, transfer_schedule_failure_reason: String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleFailures
                    | (String?, String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleFailures

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransferScheduleFailures

        attr_reader transfer_schedule_failure_date: String?
        attr_reader transfer_schedule_failure_reason: String?

        def to_h: () -> { transfer_schedule_failure_date: String?, transfer_schedule_failure_reason: String? }
      end

      class TransferScheduleInformation < Data
        def self.new: (?schedule_end_date: String?, ?schedule_expression: Peddler::Types::SellerWallet20240301::ScheduleExpression?, ?schedule_start_date: String?, ?schedule_type: String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleInformation
                    | (String?, Peddler::Types::SellerWallet20240301::ScheduleExpression?, String?, String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleInformation

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransferScheduleInformation

        attr_reader schedule_end_date: String?
        attr_reader schedule_expression: Peddler::Types::SellerWallet20240301::ScheduleExpression?
        attr_reader schedule_start_date: String?
        attr_reader schedule_type: String?

        def to_h: () -> { schedule_end_date: String?, schedule_expression: Peddler::Types::SellerWallet20240301::ScheduleExpression?, schedule_start_date: String?, schedule_type: String? }
      end

      class TransferScheduleListing < Data
        def self.new: (transfer_schedules: Array[Peddler::Types::SellerWallet20240301::TransferSchedule]?, ?next_page_token: String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleListing
                    | (Array[Peddler::Types::SellerWallet20240301::TransferSchedule]?, String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleListing

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransferScheduleListing

        attr_reader next_page_token: String?
        attr_reader transfer_schedules: Array[Peddler::Types::SellerWallet20240301::TransferSchedule]?

        def to_h: () -> { transfer_schedules: Array[Peddler::Types::SellerWallet20240301::TransferSchedule]?, next_page_token: String? }
      end

      class TransferScheduleRequest < Data
        def self.new: (destination_account_id: String?, destination_transaction_instrument: Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?, payment_preference: Peddler::Types::SellerWallet20240301::PaymentPreference?, source_account_id: String?, source_currency_code: String?, transaction_type: String?, transfer_schedule_information: Peddler::Types::SellerWallet20240301::TransferScheduleInformation?, ?transfer_schedule_status: String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleRequest
                    | (String?, Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?, Peddler::Types::SellerWallet20240301::PaymentPreference?, String?, String?, String?, Peddler::Types::SellerWallet20240301::TransferScheduleInformation?, String?) -> Peddler::Types::SellerWallet20240301::TransferScheduleRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellerWallet20240301::TransferScheduleRequest

        attr_reader destination_account_id: String?
        attr_reader destination_transaction_instrument: Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?
        attr_reader payment_preference: Peddler::Types::SellerWallet20240301::PaymentPreference?
        attr_reader source_account_id: String?
        attr_reader source_currency_code: String?
        attr_reader transaction_type: String?
        attr_reader transfer_schedule_information: Peddler::Types::SellerWallet20240301::TransferScheduleInformation?
        attr_reader transfer_schedule_status: String?

        def to_h: () -> { destination_account_id: String?, destination_transaction_instrument: Peddler::Types::SellerWallet20240301::TransactionInstrumentDetails?, payment_preference: Peddler::Types::SellerWallet20240301::PaymentPreference?, source_account_id: String?, source_currency_code: String?, transaction_type: String?, transfer_schedule_information: Peddler::Types::SellerWallet20240301::TransferScheduleInformation?, transfer_schedule_status: String? }
      end
    end
  end
end
