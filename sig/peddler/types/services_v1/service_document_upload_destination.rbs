module Peddler
  module Types
    module ServicesV1
      class ServiceDocumentUploadDestination < Data
        def self.new: (encryption_details: Peddler::Types::ServicesV1::EncryptionDetails?, upload_destination_id: String?, url: String?, ?headers: Hash[untyped, untyped]?) -> Peddler::Types::ServicesV1::ServiceDocumentUploadDestination
                    | (Peddler::Types::ServicesV1::EncryptionDetails?, String?, String?, Hash[untyped, untyped]?) -> Peddler::Types::ServicesV1::ServiceDocumentUploadDestination

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ServicesV1::ServiceDocumentUploadDestination

        attr_reader encryption_details: Peddler::Types::ServicesV1::EncryptionDetails?

        attr_reader headers: Hash[untyped, untyped]?
        attr_reader upload_destination_id: String?
        attr_reader url: String?

        def to_h: () -> { encryption_details: Peddler::Types::ServicesV1::EncryptionDetails?, upload_destination_id: String?, url: String?, headers: Hash[untyped, untyped]? }
      end
    end
  end
end
