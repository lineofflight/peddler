# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ServicesV1
      class FixedSlotCapacityQuery < Data
        def self.new: (capacity_types: Array[untyped]?, slot_duration: Float?, start_date_time: String?, end_date_time: String?) -> Peddler::Types::ServicesV1::FixedSlotCapacityQuery
                    | (Array[untyped]?, Float?, String?, String?) -> Peddler::Types::ServicesV1::FixedSlotCapacityQuery

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ServicesV1::FixedSlotCapacityQuery

        attr_reader capacity_types: Array[untyped]?
        attr_reader slot_duration: Float?
        attr_reader start_date_time: String?
        attr_reader end_date_time: String?

        def to_h: () -> { capacity_types: Array[untyped]?, slot_duration: Float?, start_date_time: String?, end_date_time: String? }
      end
    end
  end
end
