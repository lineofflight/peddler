# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ServicesV1
      class FixedSlotCapacity < Data
        def self.new: (resource_id: String?, slot_duration: Float?, capacities: Array[Peddler::Types::ServicesV1::FixedSlot]?, next_page_token: String?) -> Peddler::Types::ServicesV1::FixedSlotCapacity
                    | (String?, Float?, Array[Peddler::Types::ServicesV1::FixedSlot]?, String?) -> Peddler::Types::ServicesV1::FixedSlotCapacity

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ServicesV1::FixedSlotCapacity

        attr_reader resource_id: String?
        attr_reader slot_duration: Float?
        attr_reader capacities: Array[Peddler::Types::ServicesV1::FixedSlot]?
        attr_reader next_page_token: String?

        def to_h: () -> { resource_id: String?, slot_duration: Float?, capacities: Array[Peddler::Types::ServicesV1::FixedSlot]?, next_page_token: String? }
      end
    end
  end
end
