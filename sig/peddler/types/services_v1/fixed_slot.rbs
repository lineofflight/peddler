module Peddler
  module Types
    module ServicesV1
      class FixedSlot < Data
        def self.new: (?available_capacity: Integer?, ?encumbered_capacity: Integer?, ?reserved_capacity: Integer?, ?scheduled_capacity: Integer?, ?start_date_time: String?) -> Peddler::Types::ServicesV1::FixedSlot
                    | (Integer?, Integer?, Integer?, Integer?, String?) -> Peddler::Types::ServicesV1::FixedSlot

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ServicesV1::FixedSlot

        attr_reader available_capacity: Integer?
        attr_reader encumbered_capacity: Integer?
        attr_reader reserved_capacity: Integer?
        attr_reader scheduled_capacity: Integer?
        attr_reader start_date_time: String?

        def to_h: () -> { available_capacity: Integer?, encumbered_capacity: Integer?, reserved_capacity: Integer?, scheduled_capacity: Integer?, start_date_time: String? }
      end
    end
  end
end
