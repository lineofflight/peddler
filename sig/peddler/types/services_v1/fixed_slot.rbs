# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ServicesV1
      class FixedSlot < Data
        def self.new: (start_date_time: String?, scheduled_capacity: Integer?, available_capacity: Integer?, encumbered_capacity: Integer?, reserved_capacity: Integer?) -> instance
                    | (String?, Integer?, Integer?, Integer?, Integer?) -> instance

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> instance

        attr_reader start_date_time: String?
        attr_reader scheduled_capacity: Integer?
        attr_reader available_capacity: Integer?
        attr_reader encumbered_capacity: Integer?
        attr_reader reserved_capacity: Integer?

        def to_h: () -> { start_date_time: String?, scheduled_capacity: Integer?, available_capacity: Integer?, encumbered_capacity: Integer?, reserved_capacity: Integer? }
      end
    end
  end
end
