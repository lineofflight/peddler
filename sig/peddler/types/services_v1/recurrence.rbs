module Peddler
  module Types
    module ServicesV1
      class Recurrence < Data
        def self.new: (end_time: String?, ?days_of_month: Array[Integer]?, ?days_of_week: Array[untyped]?) -> Peddler::Types::ServicesV1::Recurrence
                    | (String?, Array[Integer]?, Array[untyped]?) -> Peddler::Types::ServicesV1::Recurrence

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ServicesV1::Recurrence

        attr_reader days_of_month: Array[Integer]?
        attr_reader days_of_week: Array[untyped]?
        attr_reader end_time: String?

        def to_h: () -> { end_time: String?, days_of_month: Array[Integer]?, days_of_week: Array[untyped]? }
      end
    end
  end
end
