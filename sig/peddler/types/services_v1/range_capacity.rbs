# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ServicesV1
      class RangeCapacity < Data
        def self.new: (?capacity_type: String?, ?slots: Array[Peddler::Types::ServicesV1::RangeSlot]?) -> Peddler::Types::ServicesV1::RangeCapacity
                    | (String?, Array[Peddler::Types::ServicesV1::RangeSlot]?) -> Peddler::Types::ServicesV1::RangeCapacity

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ServicesV1::RangeCapacity

        attr_reader capacity_type: String?
        attr_reader slots: Array[Peddler::Types::ServicesV1::RangeSlot]?

        def to_h: () -> { capacity_type: String?, slots: Array[Peddler::Types::ServicesV1::RangeSlot]? }
      end
    end
  end
end
