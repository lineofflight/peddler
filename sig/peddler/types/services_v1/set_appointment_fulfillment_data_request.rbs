module Peddler
  module Types
    module ServicesV1
      class SetAppointmentFulfillmentDataRequest < Data
        def self.new: (?appointment_resources: Array[Peddler::Types::ServicesV1::AppointmentResource]?, ?estimated_arrival_time: Peddler::Types::ServicesV1::DateTimeRange?, ?fulfillment_documents: Array[Peddler::Types::ServicesV1::FulfillmentDocument]?, ?fulfillment_time: Peddler::Types::ServicesV1::FulfillmentTime?) -> Peddler::Types::ServicesV1::SetAppointmentFulfillmentDataRequest
                    | (Array[Peddler::Types::ServicesV1::AppointmentResource]?, Peddler::Types::ServicesV1::DateTimeRange?, Array[Peddler::Types::ServicesV1::FulfillmentDocument]?, Peddler::Types::ServicesV1::FulfillmentTime?) -> Peddler::Types::ServicesV1::SetAppointmentFulfillmentDataRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ServicesV1::SetAppointmentFulfillmentDataRequest

        attr_reader appointment_resources: Array[Peddler::Types::ServicesV1::AppointmentResource]?
        attr_reader estimated_arrival_time: Peddler::Types::ServicesV1::DateTimeRange?
        attr_reader fulfillment_documents: Array[Peddler::Types::ServicesV1::FulfillmentDocument]?
        attr_reader fulfillment_time: Peddler::Types::ServicesV1::FulfillmentTime?

        def to_h: () -> { appointment_resources: Array[Peddler::Types::ServicesV1::AppointmentResource]?, estimated_arrival_time: Peddler::Types::ServicesV1::DateTimeRange?, fulfillment_documents: Array[Peddler::Types::ServicesV1::FulfillmentDocument]?, fulfillment_time: Peddler::Types::ServicesV1::FulfillmentTime? }
      end
    end
  end
end
