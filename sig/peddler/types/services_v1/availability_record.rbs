# This file is generated. Do not edit.

module Peddler
  module Types
    module ServicesV1
      class AvailabilityRecord < Data
        def self.new: (end_time: String?, start_time: String?, ?capacity: Integer?, ?recurrence: Peddler::Types::ServicesV1::Recurrence?) -> Peddler::Types::ServicesV1::AvailabilityRecord
                    | (String?, String?, Integer?, Peddler::Types::ServicesV1::Recurrence?) -> Peddler::Types::ServicesV1::AvailabilityRecord

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ServicesV1::AvailabilityRecord

        attr_reader end_time: String?
        attr_reader start_time: String?
        attr_reader capacity: Integer?
        attr_reader recurrence: Peddler::Types::ServicesV1::Recurrence?

        def to_h: () -> { end_time: String?, start_time: String?, capacity: Integer?, recurrence: Peddler::Types::ServicesV1::Recurrence? }
      end
    end
  end
end
