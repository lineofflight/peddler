module Peddler
  module Types
    module ServicesV1
      class RangeSlot < Data
        def self.new: (?capacity: Integer?, ?end_date_time: String?, ?start_date_time: String?) -> Peddler::Types::ServicesV1::RangeSlot
                    | (Integer?, String?, String?) -> Peddler::Types::ServicesV1::RangeSlot

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ServicesV1::RangeSlot

        attr_reader capacity: Integer?
        attr_reader end_date_time: String?
        attr_reader start_date_time: String?

        def to_h: () -> { capacity: Integer?, end_date_time: String?, start_date_time: String? }
      end
    end
  end
end
