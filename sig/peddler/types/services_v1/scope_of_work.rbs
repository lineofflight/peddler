# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ServicesV1
      class ScopeOfWork < Data
        def self.new: (asin: String?, title: String?, quantity: Integer?, required_skills: Array[String]?) -> Peddler::Types::ServicesV1::ScopeOfWork
                    | (String?, String?, Integer?, Array[String]?) -> Peddler::Types::ServicesV1::ScopeOfWork

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ServicesV1::ScopeOfWork

        attr_reader asin: String?
        attr_reader title: String?
        attr_reader quantity: Integer?
        attr_reader required_skills: Array[String]?

        def to_h: () -> { asin: String?, title: String?, quantity: Integer?, required_skills: Array[String]? }
      end
    end
  end
end
