module Peddler
  module Types
    module ServicesV1
      class AssignAppointmentResourcesResponse < Data
        def self.new: (?errors: Array[Peddler::Types::ServicesV1::Error]?, ?payload: Hash[untyped, untyped]?) -> Peddler::Types::ServicesV1::AssignAppointmentResourcesResponse
                    | (Array[Peddler::Types::ServicesV1::Error]?, Hash[untyped, untyped]?) -> Peddler::Types::ServicesV1::AssignAppointmentResourcesResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ServicesV1::AssignAppointmentResourcesResponse

        attr_reader errors: Array[Peddler::Types::ServicesV1::Error]?
        attr_reader payload: Hash[untyped, untyped]?

        def to_h: () -> { errors: Array[Peddler::Types::ServicesV1::Error]?, payload: Hash[untyped, untyped]? }
      end
    end
  end
end
