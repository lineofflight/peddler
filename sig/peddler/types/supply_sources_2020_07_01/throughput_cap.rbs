module Peddler
  module Types
    module SupplySources20200701
      class ThroughputCap < Data
        def self.new: (?time_unit: String?, ?value: Integer?) -> Peddler::Types::SupplySources20200701::ThroughputCap
                    | (String?, Integer?) -> Peddler::Types::SupplySources20200701::ThroughputCap

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SupplySources20200701::ThroughputCap

        attr_reader time_unit: String?
        attr_reader value: Integer?

        def to_h: () -> { time_unit: String?, value: Integer? }
      end
    end
  end
end
