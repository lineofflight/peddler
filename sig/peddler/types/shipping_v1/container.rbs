module Peddler
  module Types
    module ShippingV1
      class Container < Data
        def self.new: (container_reference_id: String?, dimensions: Peddler::Types::ShippingV1::Dimensions?, items: Array[Peddler::Types::ShippingV1::ContainerItem]?, value: Peddler::Types::Money?, weight: Peddler::Types::ShippingV1::Weight?, ?container_type: String?) -> Peddler::Types::ShippingV1::Container
                    | (String?, Peddler::Types::ShippingV1::Dimensions?, Array[Peddler::Types::ShippingV1::ContainerItem]?, Peddler::Types::Money?, Peddler::Types::ShippingV1::Weight?, String?) -> Peddler::Types::ShippingV1::Container

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV1::Container

        attr_reader container_reference_id: String?

        attr_reader container_type: String?
        attr_reader dimensions: Peddler::Types::ShippingV1::Dimensions?
        attr_reader items: Array[Peddler::Types::ShippingV1::ContainerItem]?
        attr_reader value: Peddler::Types::Money?
        attr_reader weight: Peddler::Types::ShippingV1::Weight?

        def to_h: () -> { container_reference_id: String?, dimensions: Peddler::Types::ShippingV1::Dimensions?, items: Array[Peddler::Types::ShippingV1::ContainerItem]?, value: Peddler::Types::Money?, weight: Peddler::Types::ShippingV1::Weight?, container_type: String? }
      end
    end
  end
end
