module Peddler
  module Types
    module ShippingV1
      class PurchaseShipmentRequest < Data
        def self.new: (client_reference_id: String?, containers: Array[Peddler::Types::ShippingV1::Container]?, label_specification: Peddler::Types::ShippingV1::LabelSpecification?, service_type: String?, ship_from: Peddler::Types::ShippingV1::Address?, ship_to: Peddler::Types::ShippingV1::Address?, ?ship_date: String?) -> Peddler::Types::ShippingV1::PurchaseShipmentRequest
                    | (String?, Array[Peddler::Types::ShippingV1::Container]?, Peddler::Types::ShippingV1::LabelSpecification?, String?, Peddler::Types::ShippingV1::Address?, Peddler::Types::ShippingV1::Address?, String?) -> Peddler::Types::ShippingV1::PurchaseShipmentRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV1::PurchaseShipmentRequest

        attr_reader client_reference_id: String?
        attr_reader containers: Array[Peddler::Types::ShippingV1::Container]?
        attr_reader label_specification: Peddler::Types::ShippingV1::LabelSpecification?
        attr_reader service_type: String?

        attr_reader ship_date: String?
        attr_reader ship_from: Peddler::Types::ShippingV1::Address?
        attr_reader ship_to: Peddler::Types::ShippingV1::Address?

        def to_h: () -> { client_reference_id: String?, containers: Array[Peddler::Types::ShippingV1::Container]?, label_specification: Peddler::Types::ShippingV1::LabelSpecification?, service_type: String?, ship_from: Peddler::Types::ShippingV1::Address?, ship_to: Peddler::Types::ShippingV1::Address?, ship_date: String? }
      end
    end
  end
end
