module Peddler
  module Types
    module DataKiosk20231115
      class CreateQueryResponse < Data
        def self.new: (query_id: String?) -> Peddler::Types::DataKiosk20231115::CreateQueryResponse
                    | (String?) -> Peddler::Types::DataKiosk20231115::CreateQueryResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::DataKiosk20231115::CreateQueryResponse

        attr_reader query_id: String?

        def to_h: () -> { query_id: String? }
      end

      class CreateQuerySpecification < Data
        def self.new: (query: String?, ?pagination_token: String?) -> Peddler::Types::DataKiosk20231115::CreateQuerySpecification
                    | (String?, String?) -> Peddler::Types::DataKiosk20231115::CreateQuerySpecification

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::DataKiosk20231115::CreateQuerySpecification

        attr_reader pagination_token: String?
        attr_reader query: String?

        def to_h: () -> { query: String?, pagination_token: String? }
      end

      class Error < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::Types::DataKiosk20231115::Error
                    | (String?, String?, String?) -> Peddler::Types::DataKiosk20231115::Error

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::DataKiosk20231115::Error

        attr_reader code: String?

        attr_reader details: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class ErrorList < Data
        def self.new: (errors: Array[Peddler::Types::DataKiosk20231115::Error]?) -> Peddler::Types::DataKiosk20231115::ErrorList
                    | (Array[Peddler::Types::DataKiosk20231115::Error]?) -> Peddler::Types::DataKiosk20231115::ErrorList

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::DataKiosk20231115::ErrorList

        attr_reader errors: Array[Peddler::Types::DataKiosk20231115::Error]?

        def to_h: () -> { errors: Array[Peddler::Types::DataKiosk20231115::Error]? }
      end

      class GetDocumentResponse < Data
        def self.new: (document_id: String?, document_url: String?) -> Peddler::Types::DataKiosk20231115::GetDocumentResponse
                    | (String?, String?) -> Peddler::Types::DataKiosk20231115::GetDocumentResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::DataKiosk20231115::GetDocumentResponse

        attr_reader document_id: String?
        attr_reader document_url: String?

        def to_h: () -> { document_id: String?, document_url: String? }
      end

      class GetQueriesResponse < Data
        def self.new: (queries: Array[Peddler::Types::DataKiosk20231115::Query]?, ?pagination: Hash[untyped, untyped]?) -> Peddler::Types::DataKiosk20231115::GetQueriesResponse
                    | (Array[Peddler::Types::DataKiosk20231115::Query]?, Hash[untyped, untyped]?) -> Peddler::Types::DataKiosk20231115::GetQueriesResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::DataKiosk20231115::GetQueriesResponse

        attr_reader pagination: Hash[untyped, untyped]?
        attr_reader queries: Array[Peddler::Types::DataKiosk20231115::Query]?

        def to_h: () -> { queries: Array[Peddler::Types::DataKiosk20231115::Query]?, pagination: Hash[untyped, untyped]? }
      end

      class Query < Data
        def self.new: (created_time: String?, processing_status: String?, query: String?, query_id: String?, ?data_document_id: String?, ?error_document_id: String?, ?pagination: Hash[untyped, untyped]?, ?processing_end_time: String?, ?processing_start_time: String?) -> Peddler::Types::DataKiosk20231115::Query
                    | (String?, String?, String?, String?, String?, String?, Hash[untyped, untyped]?, String?, String?) -> Peddler::Types::DataKiosk20231115::Query

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::DataKiosk20231115::Query

        attr_reader created_time: String?

        attr_reader data_document_id: String?
        attr_reader error_document_id: String?
        attr_reader pagination: Hash[untyped, untyped]?
        attr_reader processing_end_time: String?
        attr_reader processing_start_time: String?
        attr_reader processing_status: String?
        attr_reader query: String?
        attr_reader query_id: String?

        def to_h: () -> { created_time: String?, processing_status: String?, query: String?, query_id: String?, data_document_id: String?, error_document_id: String?, pagination: Hash[untyped, untyped]?, processing_end_time: String?, processing_start_time: String? }
      end

      class QueryList < Array[Query]
        def self.parse: (Array[untyped]) -> QueryList
      end
    end
  end
end
