module Peddler
  module Types
    module MerchantFulfillmentV0
      class AvailableDeliveryExperienceOption < Data
        def self.new: (charge: Peddler::Types::Money?, delivery_experience_option: String?) -> Peddler::Types::MerchantFulfillmentV0::AvailableDeliveryExperienceOption
                    | (Peddler::Types::Money?, String?) -> Peddler::Types::MerchantFulfillmentV0::AvailableDeliveryExperienceOption

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::MerchantFulfillmentV0::AvailableDeliveryExperienceOption

        attr_reader charge: Peddler::Types::Money?
        attr_reader delivery_experience_option: String?

        def to_h: () -> { charge: Peddler::Types::Money?, delivery_experience_option: String? }
      end
    end
  end
end
