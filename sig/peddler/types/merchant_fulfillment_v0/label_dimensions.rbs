# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module MerchantFulfillmentV0
      class LabelDimensions < Data
        def self.new: (length: Float?, width: Float?, unit: String?) -> Peddler::Types::MerchantFulfillmentV0::LabelDimensions
                    | (Float?, Float?, String?) -> Peddler::Types::MerchantFulfillmentV0::LabelDimensions

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::MerchantFulfillmentV0::LabelDimensions

        attr_reader length: Float?
        attr_reader width: Float?
        attr_reader unit: String?

        def to_h: () -> { length: Float?, width: Float?, unit: String? }
      end
    end
  end
end
