module Peddler
  module Types
    module MerchantFulfillmentV0
      class Benefits < Data
        def self.new: (?excluded_benefits: Array[Peddler::Types::MerchantFulfillmentV0::ExcludedBenefit]?, ?included_benefits: Array[String]?) -> Peddler::Types::MerchantFulfillmentV0::Benefits
                    | (Array[Peddler::Types::MerchantFulfillmentV0::ExcludedBenefit]?, Array[String]?) -> Peddler::Types::MerchantFulfillmentV0::Benefits

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::MerchantFulfillmentV0::Benefits

        attr_reader excluded_benefits: Array[Peddler::Types::MerchantFulfillmentV0::ExcludedBenefit]?
        attr_reader included_benefits: Array[String]?

        def to_h: () -> { excluded_benefits: Array[Peddler::Types::MerchantFulfillmentV0::ExcludedBenefit]?, included_benefits: Array[String]? }
      end
    end
  end
end
