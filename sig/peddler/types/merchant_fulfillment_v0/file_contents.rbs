module Peddler
  module Types
    module MerchantFulfillmentV0
      class FileContents < Data
        def self.new: (checksum: String?, contents: String?, file_type: String?) -> Peddler::Types::MerchantFulfillmentV0::FileContents
                    | (String?, String?, String?) -> Peddler::Types::MerchantFulfillmentV0::FileContents

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::MerchantFulfillmentV0::FileContents

        attr_reader checksum: String?
        attr_reader contents: String?
        attr_reader file_type: String?

        def to_h: () -> { checksum: String?, contents: String?, file_type: String? }
      end
    end
  end
end
