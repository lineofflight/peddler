module Peddler
  module Types
    module SellersV1
      class Account < Data
        def self.new: (business_type: String?, marketplace_participation_list: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?, selling_plan: String?, ?business: Peddler::Types::SellersV1::Business?, ?primary_contact: Peddler::Types::SellersV1::PrimaryContact?) -> Peddler::Types::SellersV1::Account
                    | (String?, Array[Peddler::Types::SellersV1::MarketplaceParticipation]?, String?, Peddler::Types::SellersV1::Business?, Peddler::Types::SellersV1::PrimaryContact?) -> Peddler::Types::SellersV1::Account

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellersV1::Account

        attr_reader business: Peddler::Types::SellersV1::Business?
        attr_reader business_type: String?
        attr_reader marketplace_participation_list: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?

        attr_reader primary_contact: Peddler::Types::SellersV1::PrimaryContact?
        attr_reader selling_plan: String?

        def to_h: () -> { business_type: String?, marketplace_participation_list: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?, selling_plan: String?, business: Peddler::Types::SellersV1::Business?, primary_contact: Peddler::Types::SellersV1::PrimaryContact? }
      end
    end
  end
end
