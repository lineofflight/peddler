module Peddler
  module Types
    module SellersV1
      class GetMarketplaceParticipationsResponse < Data
        def self.new: (?errors: Array[Peddler::Types::SellersV1::Error]?, ?payload: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?) -> Peddler::Types::SellersV1::GetMarketplaceParticipationsResponse
                    | (Array[Peddler::Types::SellersV1::Error]?, Array[Peddler::Types::SellersV1::MarketplaceParticipation]?) -> Peddler::Types::SellersV1::GetMarketplaceParticipationsResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::SellersV1::GetMarketplaceParticipationsResponse

        attr_reader errors: Array[Peddler::Types::SellersV1::Error]?
        attr_reader payload: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?

        def to_h: () -> { errors: Array[Peddler::Types::SellersV1::Error]?, payload: Array[Peddler::Types::SellersV1::MarketplaceParticipation]? }
      end
    end
  end
end
