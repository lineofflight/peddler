# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module SellersV1
      class GetMarketplaceParticipationsResponse < Data
        def self.new: (payload: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?, errors: Array[Peddler::Types::SellersV1::Error]?) -> instance
                    | (Array[Peddler::Types::SellersV1::MarketplaceParticipation]?, Array[Peddler::Types::SellersV1::Error]?) -> instance

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> instance

        attr_reader payload: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?
        attr_reader errors: Array[Peddler::Types::SellersV1::Error]?

        def to_h: () -> { payload: Array[Peddler::Types::SellersV1::MarketplaceParticipation]?, errors: Array[Peddler::Types::SellersV1::Error]? }
      end
    end
  end
end
