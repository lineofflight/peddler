module Peddler
  module Types
    module VendorDirectFulfillmentTransactions20211228
      class Error < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::Error
                    | (String?, String?, String?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::Error

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::Error

        attr_reader code: String?

        attr_reader details: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class ErrorList < Data
        def self.new: (errors: Array[Peddler::Types::VendorDirectFulfillmentTransactions20211228::Error]?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::ErrorList
                    | (Array[Peddler::Types::VendorDirectFulfillmentTransactions20211228::Error]?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::ErrorList

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::ErrorList

        attr_reader errors: Array[Peddler::Types::VendorDirectFulfillmentTransactions20211228::Error]?

        def to_h: () -> { errors: Array[Peddler::Types::VendorDirectFulfillmentTransactions20211228::Error]? }
      end

      class Transaction < Data
        def self.new: (status: String?, transaction_id: String?, ?errors: Peddler::Types::VendorDirectFulfillmentTransactions20211228::ErrorList?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::Transaction
                    | (String?, String?, Peddler::Types::VendorDirectFulfillmentTransactions20211228::ErrorList?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::Transaction

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::Transaction

        attr_reader errors: Peddler::Types::VendorDirectFulfillmentTransactions20211228::ErrorList?
        attr_reader status: String?
        attr_reader transaction_id: String?

        def to_h: () -> { status: String?, transaction_id: String?, errors: Peddler::Types::VendorDirectFulfillmentTransactions20211228::ErrorList? }
      end

      class TransactionStatus < Data
        def self.new: (?transaction_status: Peddler::Types::VendorDirectFulfillmentTransactions20211228::Transaction?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::TransactionStatus
                    | (Peddler::Types::VendorDirectFulfillmentTransactions20211228::Transaction?) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::TransactionStatus

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::VendorDirectFulfillmentTransactions20211228::TransactionStatus

        attr_reader transaction_status: Peddler::Types::VendorDirectFulfillmentTransactions20211228::Transaction?

        def to_h: () -> { transaction_status: Peddler::Types::VendorDirectFulfillmentTransactions20211228::Transaction? }
      end
    end
  end
end
