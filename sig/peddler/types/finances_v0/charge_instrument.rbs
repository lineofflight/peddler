module Peddler
  module Types
    module FinancesV0
      class ChargeInstrument < Data
        def self.new: (?amount: Peddler::Types::Money?, ?description: String?, ?tail: String?) -> Peddler::Types::FinancesV0::ChargeInstrument
                    | (Peddler::Types::Money?, String?, String?) -> Peddler::Types::FinancesV0::ChargeInstrument

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::FinancesV0::ChargeInstrument

        attr_reader amount: Peddler::Types::Money?
        attr_reader description: String?
        attr_reader tail: String?

        def to_h: () -> { amount: Peddler::Types::Money?, description: String?, tail: String? }
      end
    end
  end
end
