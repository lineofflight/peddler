# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module FinancesV0
      class AffordabilityExpenseEvent < Data
        def self.new: (amazon_order_id: String?, posted_date: String?, marketplace_id: String?, transaction_type: String?, base_expense: Peddler::Types::Money?, tax_type_cgst: Peddler::Types::Money?, tax_type_sgst: Peddler::Types::Money?, tax_type_igst: Peddler::Types::Money?, total_expense: Peddler::Types::Money?) -> Peddler::Types::FinancesV0::AffordabilityExpenseEvent
                    | (String?, String?, String?, String?, Peddler::Types::Money?, Peddler::Types::Money?, Peddler::Types::Money?, Peddler::Types::Money?, Peddler::Types::Money?) -> Peddler::Types::FinancesV0::AffordabilityExpenseEvent

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::FinancesV0::AffordabilityExpenseEvent

        attr_reader amazon_order_id: String?
        attr_reader posted_date: String?
        attr_reader marketplace_id: String?
        attr_reader transaction_type: String?
        attr_reader base_expense: Peddler::Types::Money?
        attr_reader tax_type_cgst: Peddler::Types::Money?
        attr_reader tax_type_sgst: Peddler::Types::Money?
        attr_reader tax_type_igst: Peddler::Types::Money?
        attr_reader total_expense: Peddler::Types::Money?

        def to_h: () -> { amazon_order_id: String?, posted_date: String?, marketplace_id: String?, transaction_type: String?, base_expense: Peddler::Types::Money?, tax_type_cgst: Peddler::Types::Money?, tax_type_sgst: Peddler::Types::Money?, tax_type_igst: Peddler::Types::Money?, total_expense: Peddler::Types::Money? }
      end
    end
  end
end
