module Peddler
  module Types
    module FinancesV0
      class SellerReviewEnrollmentPaymentEvent < Data
        def self.new: (?charge_component: Peddler::Types::FinancesV0::ChargeComponent?, ?enrollment_id: String?, ?fee_component: Peddler::Types::FinancesV0::FeeComponent?, ?parent_asin: String?, ?posted_date: String?, ?total_amount: Peddler::Types::Money?) -> Peddler::Types::FinancesV0::SellerReviewEnrollmentPaymentEvent
                    | (Peddler::Types::FinancesV0::ChargeComponent?, String?, Peddler::Types::FinancesV0::FeeComponent?, String?, String?, Peddler::Types::Money?) -> Peddler::Types::FinancesV0::SellerReviewEnrollmentPaymentEvent

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::FinancesV0::SellerReviewEnrollmentPaymentEvent

        attr_reader charge_component: Peddler::Types::FinancesV0::ChargeComponent?
        attr_reader enrollment_id: String?
        attr_reader fee_component: Peddler::Types::FinancesV0::FeeComponent?
        attr_reader parent_asin: String?
        attr_reader posted_date: String?
        attr_reader total_amount: Peddler::Types::Money?

        def to_h: () -> { charge_component: Peddler::Types::FinancesV0::ChargeComponent?, enrollment_id: String?, fee_component: Peddler::Types::FinancesV0::FeeComponent?, parent_asin: String?, posted_date: String?, total_amount: Peddler::Types::Money? }
      end
    end
  end
end
