module Peddler
  module Types
    module FinancesV0
      class SolutionProviderCreditEvent < Data
        def self.new: (?marketplace_country_code: String?, ?marketplace_id: String?, ?provider_id: String?, ?provider_store_name: String?, ?provider_transaction_type: String?, ?seller_id: String?, ?seller_order_id: String?, ?seller_store_name: String?, ?transaction_amount: Peddler::Types::Money?, ?transaction_creation_date: String?) -> Peddler::Types::FinancesV0::SolutionProviderCreditEvent
                    | (String?, String?, String?, String?, String?, String?, String?, String?, Peddler::Types::Money?, String?) -> Peddler::Types::FinancesV0::SolutionProviderCreditEvent

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::FinancesV0::SolutionProviderCreditEvent

        attr_reader marketplace_country_code: String?
        attr_reader marketplace_id: String?
        attr_reader provider_id: String?
        attr_reader provider_store_name: String?
        attr_reader provider_transaction_type: String?
        attr_reader seller_id: String?
        attr_reader seller_order_id: String?
        attr_reader seller_store_name: String?
        attr_reader transaction_amount: Peddler::Types::Money?
        attr_reader transaction_creation_date: String?

        def to_h: () -> { marketplace_country_code: String?, marketplace_id: String?, provider_id: String?, provider_store_name: String?, provider_transaction_type: String?, seller_id: String?, seller_order_id: String?, seller_store_name: String?, transaction_amount: Peddler::Types::Money?, transaction_creation_date: String? }
      end
    end
  end
end
