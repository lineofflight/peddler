module Peddler
  module Types
    module FinancesV0
      class AdhocDisbursementEvent < Data
        def self.new: (?posted_date: String?, ?transaction_amount: Peddler::Types::Money?, ?transaction_id: String?, ?transaction_type: String?) -> Peddler::Types::FinancesV0::AdhocDisbursementEvent
                    | (String?, Peddler::Types::Money?, String?, String?) -> Peddler::Types::FinancesV0::AdhocDisbursementEvent

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::FinancesV0::AdhocDisbursementEvent

        attr_reader posted_date: String?
        attr_reader transaction_amount: Peddler::Types::Money?
        attr_reader transaction_id: String?
        attr_reader transaction_type: String?

        def to_h: () -> { posted_date: String?, transaction_amount: Peddler::Types::Money?, transaction_id: String?, transaction_type: String? }
      end
    end
  end
end
