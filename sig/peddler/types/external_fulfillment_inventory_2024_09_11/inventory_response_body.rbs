module Peddler
  module Types
    module ExternalFulfillmentInventory20240911
      class InventoryResponseBody < Data
        def self.new: (?actionable_errors: Array[Peddler::Types::ExternalFulfillmentInventory20240911::ActionableError]?, ?client_sequence_number: Integer?, ?location_id: String?, ?marketplace_attributes: Peddler::Types::ExternalFulfillmentInventory20240911::MarketplaceAttributes?, ?reserved_quantity: Integer?, ?sellable_quantity: Integer?, ?sku_id: String?) -> Peddler::Types::ExternalFulfillmentInventory20240911::InventoryResponseBody
                    | (Array[Peddler::Types::ExternalFulfillmentInventory20240911::ActionableError]?, Integer?, String?, Peddler::Types::ExternalFulfillmentInventory20240911::MarketplaceAttributes?, Integer?, Integer?, String?) -> Peddler::Types::ExternalFulfillmentInventory20240911::InventoryResponseBody

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ExternalFulfillmentInventory20240911::InventoryResponseBody

        attr_reader actionable_errors: Array[Peddler::Types::ExternalFulfillmentInventory20240911::ActionableError]?
        attr_reader client_sequence_number: Integer?
        attr_reader location_id: String?
        attr_reader marketplace_attributes: Peddler::Types::ExternalFulfillmentInventory20240911::MarketplaceAttributes?
        attr_reader reserved_quantity: Integer?
        attr_reader sellable_quantity: Integer?
        attr_reader sku_id: String?

        def to_h: () -> { actionable_errors: Array[Peddler::Types::ExternalFulfillmentInventory20240911::ActionableError]?, client_sequence_number: Integer?, location_id: String?, marketplace_attributes: Peddler::Types::ExternalFulfillmentInventory20240911::MarketplaceAttributes?, reserved_quantity: Integer?, sellable_quantity: Integer?, sku_id: String? }
      end
    end
  end
end
