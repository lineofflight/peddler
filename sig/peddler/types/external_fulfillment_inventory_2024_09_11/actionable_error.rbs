# This file is generated. Do not edit.

module Peddler
  module Types
    module ExternalFulfillmentInventory20240911
      class ActionableError < Data
        def self.new: (?error_sub_type: String?, ?error_type: String?) -> Peddler::Types::ExternalFulfillmentInventory20240911::ActionableError
                    | (String?, String?) -> Peddler::Types::ExternalFulfillmentInventory20240911::ActionableError

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ExternalFulfillmentInventory20240911::ActionableError

        attr_reader error_sub_type: String?
        attr_reader error_type: String?

        def to_h: () -> { error_sub_type: String?, error_type: String? }
      end
    end
  end
end
