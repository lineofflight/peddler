# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ProductPricingV0
      class Points < Data
        def self.new: (?points_number: Integer?, ?points_monetary_value: Peddler::Types::Money?) -> Peddler::Types::ProductPricingV0::Points
                    | (Integer?, Peddler::Types::Money?) -> Peddler::Types::ProductPricingV0::Points

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::ProductPricingV0::Points

        attr_reader points_number: Integer?
        attr_reader points_monetary_value: Peddler::Types::Money?

        def to_h: () -> { points_number: Integer?, points_monetary_value: Peddler::Types::Money? }
      end
    end
  end
end
