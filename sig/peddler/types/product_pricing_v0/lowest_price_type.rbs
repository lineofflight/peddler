# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module ProductPricingV0
      class LowestPriceType < Data
        def self.new: (condition: String?, fulfillment_channel: String?, offer_type: String?, quantity_tier: Integer?, quantity_discount_type: String?, landed_price: Peddler::Types::Money?, listing_price: Peddler::Types::Money?, shipping: Peddler::Types::Money?, points: Peddler::Types::ProductPricingV0::Points?) -> instance
                    | (String?, String?, String?, Integer?, String?, Peddler::Types::Money?, Peddler::Types::Money?, Peddler::Types::Money?, Peddler::Types::ProductPricingV0::Points?) -> instance

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> instance

        attr_reader condition: String?
        attr_reader fulfillment_channel: String?
        attr_reader offer_type: String?
        attr_reader quantity_tier: Integer?
        attr_reader quantity_discount_type: String?
        attr_reader landed_price: Peddler::Types::Money?
        attr_reader listing_price: Peddler::Types::Money?
        attr_reader shipping: Peddler::Types::Money?
        attr_reader points: Peddler::Types::ProductPricingV0::Points?

        def to_h: () -> { condition: String?, fulfillment_channel: String?, offer_type: String?, quantity_tier: Integer?, quantity_discount_type: String?, landed_price: Peddler::Types::Money?, listing_price: Peddler::Types::Money?, shipping: Peddler::Types::Money?, points: Peddler::Types::ProductPricingV0::Points? }
      end
    end
  end
end
