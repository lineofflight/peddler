module Peddler
  module Types
    module ProductPricingV0
      class QuantityDiscountPriceType < Data
        def self.new: (listing_price: Peddler::Types::Money?, quantity_discount_type: String?, quantity_tier: Integer?) -> Peddler::Types::ProductPricingV0::QuantityDiscountPriceType
                    | (Peddler::Types::Money?, String?, Integer?) -> Peddler::Types::ProductPricingV0::QuantityDiscountPriceType

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ProductPricingV0::QuantityDiscountPriceType

        attr_reader listing_price: Peddler::Types::Money?
        attr_reader quantity_discount_type: String?
        attr_reader quantity_tier: Integer?

        def to_h: () -> { listing_price: Peddler::Types::Money?, quantity_discount_type: String?, quantity_tier: Integer? }
      end
    end
  end
end
