module Peddler
  module Types
    module ProductPricingV0
      class ShipsFromType < Data
        def self.new: (?country: String?, ?state: String?) -> Peddler::Types::ProductPricingV0::ShipsFromType
                    | (String?, String?) -> Peddler::Types::ProductPricingV0::ShipsFromType

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ProductPricingV0::ShipsFromType

        attr_reader country: String?
        attr_reader state: String?

        def to_h: () -> { country: String?, state: String? }
      end
    end
  end
end
