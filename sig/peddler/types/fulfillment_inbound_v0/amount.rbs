module Peddler
  module Types
    module FulfillmentInboundV0
      class Amount < Data
        def self.new: (currency_code: String?, value: Float?) -> Peddler::Types::FulfillmentInboundV0::Amount
                    | (String?, Float?) -> Peddler::Types::FulfillmentInboundV0::Amount

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::FulfillmentInboundV0::Amount

        attr_reader currency_code: String?
        attr_reader value: Float?

        def to_h: () -> { currency_code: String?, value: Float? }
      end
    end
  end
end
