# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module VendorDirectFulfillmentPaymentsV1
      class ItemQuantity < Data
        def self.new: (amount: Integer?, unit_of_measure: String?) -> Peddler::Types::VendorDirectFulfillmentPaymentsV1::ItemQuantity
                    | (Integer?, String?) -> Peddler::Types::VendorDirectFulfillmentPaymentsV1::ItemQuantity

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::VendorDirectFulfillmentPaymentsV1::ItemQuantity

        attr_reader amount: Integer?
        attr_reader unit_of_measure: String?

        def to_h: () -> { amount: Integer?, unit_of_measure: String? }
      end
    end
  end
end
