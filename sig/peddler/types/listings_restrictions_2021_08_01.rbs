module Peddler
  module Types
    module ListingsRestrictions20210801
      class Error < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::Types::ListingsRestrictions20210801::Error
                    | (String?, String?, String?) -> Peddler::Types::ListingsRestrictions20210801::Error

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ListingsRestrictions20210801::Error

        attr_reader code: String?

        attr_reader details: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class ErrorList < Array[Error]
        def self.parse: (Array[untyped]) -> ErrorList
      end

      class Link < Data
        def self.new: (resource: String?, verb: String?, ?title: String?, ?type: String?) -> Peddler::Types::ListingsRestrictions20210801::Link
                    | (String?, String?, String?, String?) -> Peddler::Types::ListingsRestrictions20210801::Link

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ListingsRestrictions20210801::Link

        attr_reader resource: String?

        attr_reader title: String?
        attr_reader type: String?
        attr_reader verb: String?

        def to_h: () -> { resource: String?, verb: String?, title: String?, type: String? }
      end

      class Reason < Data
        def self.new: (message: String?, ?links: Array[Peddler::Types::ListingsRestrictions20210801::Link]?, ?reason_code: String?) -> Peddler::Types::ListingsRestrictions20210801::Reason
                    | (String?, Array[Peddler::Types::ListingsRestrictions20210801::Link]?, String?) -> Peddler::Types::ListingsRestrictions20210801::Reason

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ListingsRestrictions20210801::Reason

        attr_reader links: Array[Peddler::Types::ListingsRestrictions20210801::Link]?
        attr_reader message: String?

        attr_reader reason_code: String?

        def to_h: () -> { message: String?, links: Array[Peddler::Types::ListingsRestrictions20210801::Link]?, reason_code: String? }
      end

      class Restriction < Data
        def self.new: (marketplace_id: String?, ?condition_type: String?, ?reasons: Array[Peddler::Types::ListingsRestrictions20210801::Reason]?) -> Peddler::Types::ListingsRestrictions20210801::Restriction
                    | (String?, String?, Array[Peddler::Types::ListingsRestrictions20210801::Reason]?) -> Peddler::Types::ListingsRestrictions20210801::Restriction

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ListingsRestrictions20210801::Restriction

        attr_reader condition_type: String?
        attr_reader marketplace_id: String?

        attr_reader reasons: Array[Peddler::Types::ListingsRestrictions20210801::Reason]?

        def to_h: () -> { marketplace_id: String?, condition_type: String?, reasons: Array[Peddler::Types::ListingsRestrictions20210801::Reason]? }
      end

      class RestrictionList < Data
        def self.new: (restrictions: Array[Peddler::Types::ListingsRestrictions20210801::Restriction]?) -> Peddler::Types::ListingsRestrictions20210801::RestrictionList
                    | (Array[Peddler::Types::ListingsRestrictions20210801::Restriction]?) -> Peddler::Types::ListingsRestrictions20210801::RestrictionList

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ListingsRestrictions20210801::RestrictionList

        attr_reader restrictions: Array[Peddler::Types::ListingsRestrictions20210801::Restriction]?

        def to_h: () -> { restrictions: Array[Peddler::Types::ListingsRestrictions20210801::Restriction]? }
      end
    end
  end
end
