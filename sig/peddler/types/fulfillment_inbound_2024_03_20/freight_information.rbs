# This file is generated. Edit template if necessary.

module Peddler
  module Types
    module FulfillmentInbound20240320
      class FreightInformation < Data
        def self.new: (declared_value: Peddler::Types::Money?, freight_class: String?) -> Peddler::Types::FulfillmentInbound20240320::FreightInformation
                    | (Peddler::Types::Money?, String?) -> Peddler::Types::FulfillmentInbound20240320::FreightInformation

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::FulfillmentInbound20240320::FreightInformation

        attr_reader declared_value: Peddler::Types::Money?
        attr_reader freight_class: String?

        def to_h: () -> { declared_value: Peddler::Types::Money?, freight_class: String? }
      end
    end
  end
end
