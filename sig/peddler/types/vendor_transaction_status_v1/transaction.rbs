# This file is generated. Do not edit.

module Peddler
  module Types
    module VendorTransactionStatusV1
      class Transaction < Data
        def self.new: (status: String?, transaction_id: String?, ?errors: Array[Peddler::Types::VendorTransactionStatusV1::Error]?) -> Peddler::Types::VendorTransactionStatusV1::Transaction
                    | (String?, String?, Array[Peddler::Types::VendorTransactionStatusV1::Error]?) -> Peddler::Types::VendorTransactionStatusV1::Transaction

        def self.parse: (?(Hash[String | Symbol, untyped]), **untyped) -> Peddler::Types::VendorTransactionStatusV1::Transaction

        attr_reader status: String?
        attr_reader transaction_id: String?
        attr_reader errors: Array[Peddler::Types::VendorTransactionStatusV1::Error]?

        def to_h: () -> { status: String?, transaction_id: String?, errors: Array[Peddler::Types::VendorTransactionStatusV1::Error]? }
      end
    end
  end
end
