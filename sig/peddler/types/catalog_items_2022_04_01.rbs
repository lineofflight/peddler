module Peddler
  module Types
    module CatalogItems20220401
      class BrandRefinement < Data
        def self.new: (brand_name: String?, number_of_results: Integer?) -> Peddler::Types::CatalogItems20220401::BrandRefinement
                    | (String?, Integer?) -> Peddler::Types::CatalogItems20220401::BrandRefinement

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::BrandRefinement

        attr_reader brand_name: String?
        attr_reader number_of_results: Integer?

        def to_h: () -> { brand_name: String?, number_of_results: Integer? }
      end

      class ClassificationRefinement < Data
        def self.new: (classification_id: String?, display_name: String?, number_of_results: Integer?) -> Peddler::Types::CatalogItems20220401::ClassificationRefinement
                    | (String?, String?, Integer?) -> Peddler::Types::CatalogItems20220401::ClassificationRefinement

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ClassificationRefinement

        attr_reader classification_id: String?
        attr_reader display_name: String?
        attr_reader number_of_results: Integer?

        def to_h: () -> { classification_id: String?, display_name: String?, number_of_results: Integer? }
      end

      class Dimension < Data
        def self.new: (?unit: String?, ?value: Float?) -> Peddler::Types::CatalogItems20220401::Dimension
                    | (String?, Float?) -> Peddler::Types::CatalogItems20220401::Dimension

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::Dimension

        attr_reader unit: String?
        attr_reader value: Float?

        def to_h: () -> { unit: String?, value: Float? }
      end

      class Dimensions < Data
        def self.new: (?height: Peddler::Types::CatalogItems20220401::Dimension?, ?length: Peddler::Types::CatalogItems20220401::Dimension?, ?weight: Peddler::Types::CatalogItems20220401::Dimension?, ?width: Peddler::Types::CatalogItems20220401::Dimension?) -> Peddler::Types::CatalogItems20220401::Dimensions
                    | (Peddler::Types::CatalogItems20220401::Dimension?, Peddler::Types::CatalogItems20220401::Dimension?, Peddler::Types::CatalogItems20220401::Dimension?, Peddler::Types::CatalogItems20220401::Dimension?) -> Peddler::Types::CatalogItems20220401::Dimensions

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::Dimensions

        attr_reader height: Peddler::Types::CatalogItems20220401::Dimension?
        attr_reader length: Peddler::Types::CatalogItems20220401::Dimension?
        attr_reader weight: Peddler::Types::CatalogItems20220401::Dimension?
        attr_reader width: Peddler::Types::CatalogItems20220401::Dimension?

        def to_h: () -> { height: Peddler::Types::CatalogItems20220401::Dimension?, length: Peddler::Types::CatalogItems20220401::Dimension?, weight: Peddler::Types::CatalogItems20220401::Dimension?, width: Peddler::Types::CatalogItems20220401::Dimension? }
      end

      class Error < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::Types::CatalogItems20220401::Error
                    | (String?, String?, String?) -> Peddler::Types::CatalogItems20220401::Error

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::Error

        attr_reader code: String?

        attr_reader details: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class ErrorList < Data
        def self.new: (errors: Array[Peddler::Types::CatalogItems20220401::Error]?) -> Peddler::Types::CatalogItems20220401::ErrorList
                    | (Array[Peddler::Types::CatalogItems20220401::Error]?) -> Peddler::Types::CatalogItems20220401::ErrorList

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ErrorList

        attr_reader errors: Array[Peddler::Types::CatalogItems20220401::Error]?

        def to_h: () -> { errors: Array[Peddler::Types::CatalogItems20220401::Error]? }
      end

      class Item < Data
        def self.new: (asin: String?, ?attributes: Hash[untyped, untyped]?, ?classifications: Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassificationsByMarketplace]?, ?dimensions: Array[Peddler::Types::CatalogItems20220401::ItemDimensionsByMarketplace]?, ?identifiers: Array[Peddler::Types::CatalogItems20220401::ItemIdentifiersByMarketplace]?, ?images: Array[Peddler::Types::CatalogItems20220401::ItemImagesByMarketplace]?, ?product_types: Array[Peddler::Types::CatalogItems20220401::ItemProductTypeByMarketplace]?, ?relationships: Array[Peddler::Types::CatalogItems20220401::ItemRelationshipsByMarketplace]?, ?sales_ranks: Array[Peddler::Types::CatalogItems20220401::ItemSalesRanksByMarketplace]?, ?summaries: Array[Peddler::Types::CatalogItems20220401::ItemSummaryByMarketplace]?, ?vendor_details: Array[Peddler::Types::CatalogItems20220401::ItemVendorDetailsByMarketplace]?) -> Peddler::Types::CatalogItems20220401::Item
                    | (String?, Hash[untyped, untyped]?, Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassificationsByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemDimensionsByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemIdentifiersByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemImagesByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemProductTypeByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemRelationshipsByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemSalesRanksByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemSummaryByMarketplace]?, Array[Peddler::Types::CatalogItems20220401::ItemVendorDetailsByMarketplace]?) -> Peddler::Types::CatalogItems20220401::Item

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::Item

        attr_reader asin: String?
        attr_reader attributes: Hash[untyped, untyped]?
        attr_reader classifications: Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassificationsByMarketplace]?
        attr_reader dimensions: Array[Peddler::Types::CatalogItems20220401::ItemDimensionsByMarketplace]?
        attr_reader identifiers: Array[Peddler::Types::CatalogItems20220401::ItemIdentifiersByMarketplace]?
        attr_reader images: Array[Peddler::Types::CatalogItems20220401::ItemImagesByMarketplace]?
        attr_reader product_types: Array[Peddler::Types::CatalogItems20220401::ItemProductTypeByMarketplace]?
        attr_reader relationships: Array[Peddler::Types::CatalogItems20220401::ItemRelationshipsByMarketplace]?
        attr_reader sales_ranks: Array[Peddler::Types::CatalogItems20220401::ItemSalesRanksByMarketplace]?
        attr_reader summaries: Array[Peddler::Types::CatalogItems20220401::ItemSummaryByMarketplace]?
        attr_reader vendor_details: Array[Peddler::Types::CatalogItems20220401::ItemVendorDetailsByMarketplace]?

        def to_h: () -> { asin: String?, attributes: Hash[untyped, untyped]?, classifications: Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassificationsByMarketplace]?, dimensions: Array[Peddler::Types::CatalogItems20220401::ItemDimensionsByMarketplace]?, identifiers: Array[Peddler::Types::CatalogItems20220401::ItemIdentifiersByMarketplace]?, images: Array[Peddler::Types::CatalogItems20220401::ItemImagesByMarketplace]?, product_types: Array[Peddler::Types::CatalogItems20220401::ItemProductTypeByMarketplace]?, relationships: Array[Peddler::Types::CatalogItems20220401::ItemRelationshipsByMarketplace]?, sales_ranks: Array[Peddler::Types::CatalogItems20220401::ItemSalesRanksByMarketplace]?, summaries: Array[Peddler::Types::CatalogItems20220401::ItemSummaryByMarketplace]?, vendor_details: Array[Peddler::Types::CatalogItems20220401::ItemVendorDetailsByMarketplace]? }
      end

      class ItemBrowseClassification < Data
        type parse_data = { ?classification_id: untyped, ?display_name: untyped, ?parent: Peddler::Types::CatalogItems20220401::ItemBrowseClassification | parse_data }
        def self.new: (classification_id: String?, display_name: String?, ?parent: Peddler::Types::CatalogItems20220401::ItemBrowseClassification?) -> Peddler::Types::CatalogItems20220401::ItemBrowseClassification
                    | (String?, String?, Peddler::Types::CatalogItems20220401::ItemBrowseClassification?) -> Peddler::Types::CatalogItems20220401::ItemBrowseClassification

        def self.parse: (?parse_data data) -> Peddler::Types::CatalogItems20220401::ItemBrowseClassification
                      | (?Hash[String, untyped] data) -> Peddler::Types::CatalogItems20220401::ItemBrowseClassification

        attr_reader classification_id: String?
        attr_reader display_name: String?
        attr_reader parent: Peddler::Types::CatalogItems20220401::ItemBrowseClassification?

        def to_h: () -> { classification_id: String?, display_name: String?, parent: Peddler::Types::CatalogItems20220401::ItemBrowseClassification? }
      end

      class ItemBrowseClassifications < Array[ItemBrowseClassificationsByMarketplace]
        def self.parse: (Array[untyped]) -> ItemBrowseClassifications
      end

      class ItemBrowseClassificationsByMarketplace < Data
        def self.new: (marketplace_id: String?, ?classifications: Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassification]?) -> Peddler::Types::CatalogItems20220401::ItemBrowseClassificationsByMarketplace
                    | (String?, Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassification]?) -> Peddler::Types::CatalogItems20220401::ItemBrowseClassificationsByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemBrowseClassificationsByMarketplace

        attr_reader classifications: Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassification]?
        attr_reader marketplace_id: String?

        def to_h: () -> { marketplace_id: String?, classifications: Array[Peddler::Types::CatalogItems20220401::ItemBrowseClassification]? }
      end

      class ItemClassificationSalesRank < Data
        def self.new: (classification_id: String?, rank: Integer?, title: String?, ?link: String?) -> Peddler::Types::CatalogItems20220401::ItemClassificationSalesRank
                    | (String?, Integer?, String?, String?) -> Peddler::Types::CatalogItems20220401::ItemClassificationSalesRank

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemClassificationSalesRank

        attr_reader classification_id: String?

        attr_reader link: String?
        attr_reader rank: Integer?
        attr_reader title: String?

        def to_h: () -> { classification_id: String?, rank: Integer?, title: String?, link: String? }
      end

      class ItemContributor < Data
        def self.new: (role: Peddler::Types::CatalogItems20220401::ItemContributorRole?, value: String?) -> Peddler::Types::CatalogItems20220401::ItemContributor
                    | (Peddler::Types::CatalogItems20220401::ItemContributorRole?, String?) -> Peddler::Types::CatalogItems20220401::ItemContributor

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemContributor

        attr_reader role: Peddler::Types::CatalogItems20220401::ItemContributorRole?
        attr_reader value: String?

        def to_h: () -> { role: Peddler::Types::CatalogItems20220401::ItemContributorRole?, value: String? }
      end

      class ItemContributorRole < Data
        def self.new: (value: String?, ?display_name: String?) -> Peddler::Types::CatalogItems20220401::ItemContributorRole
                    | (String?, String?) -> Peddler::Types::CatalogItems20220401::ItemContributorRole

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemContributorRole

        attr_reader display_name: String?
        attr_reader value: String?

        def to_h: () -> { value: String?, display_name: String? }
      end

      class ItemDimensions < Array[ItemDimensionsByMarketplace]
        def self.parse: (Array[untyped]) -> ItemDimensions
      end

      class ItemDimensionsByMarketplace < Data
        def self.new: (marketplace_id: String?, ?item: Peddler::Types::CatalogItems20220401::Dimensions?, ?package: Peddler::Types::CatalogItems20220401::Dimensions?) -> Peddler::Types::CatalogItems20220401::ItemDimensionsByMarketplace
                    | (String?, Peddler::Types::CatalogItems20220401::Dimensions?, Peddler::Types::CatalogItems20220401::Dimensions?) -> Peddler::Types::CatalogItems20220401::ItemDimensionsByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemDimensionsByMarketplace

        attr_reader item: Peddler::Types::CatalogItems20220401::Dimensions?
        attr_reader marketplace_id: String?

        attr_reader package: Peddler::Types::CatalogItems20220401::Dimensions?

        def to_h: () -> { marketplace_id: String?, item: Peddler::Types::CatalogItems20220401::Dimensions?, package: Peddler::Types::CatalogItems20220401::Dimensions? }
      end

      class ItemDisplayGroupSalesRank < Data
        def self.new: (rank: Integer?, title: String?, website_display_group: String?, ?link: String?) -> Peddler::Types::CatalogItems20220401::ItemDisplayGroupSalesRank
                    | (Integer?, String?, String?, String?) -> Peddler::Types::CatalogItems20220401::ItemDisplayGroupSalesRank

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemDisplayGroupSalesRank

        attr_reader link: String?
        attr_reader rank: Integer?
        attr_reader title: String?
        attr_reader website_display_group: String?

        def to_h: () -> { rank: Integer?, title: String?, website_display_group: String?, link: String? }
      end

      class ItemIdentifier < Data
        def self.new: (identifier: String?, identifier_type: String?) -> Peddler::Types::CatalogItems20220401::ItemIdentifier
                    | (String?, String?) -> Peddler::Types::CatalogItems20220401::ItemIdentifier

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemIdentifier

        attr_reader identifier: String?
        attr_reader identifier_type: String?

        def to_h: () -> { identifier: String?, identifier_type: String? }
      end

      class ItemIdentifiers < Array[ItemIdentifiersByMarketplace]
        def self.parse: (Array[untyped]) -> ItemIdentifiers
      end

      class ItemIdentifiersByMarketplace < Data
        def self.new: (identifiers: Array[Peddler::Types::CatalogItems20220401::ItemIdentifier]?, marketplace_id: String?) -> Peddler::Types::CatalogItems20220401::ItemIdentifiersByMarketplace
                    | (Array[Peddler::Types::CatalogItems20220401::ItemIdentifier]?, String?) -> Peddler::Types::CatalogItems20220401::ItemIdentifiersByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemIdentifiersByMarketplace

        attr_reader identifiers: Array[Peddler::Types::CatalogItems20220401::ItemIdentifier]?
        attr_reader marketplace_id: String?

        def to_h: () -> { identifiers: Array[Peddler::Types::CatalogItems20220401::ItemIdentifier]?, marketplace_id: String? }
      end

      class ItemImage < Data
        def self.new: (height: Integer?, link: String?, variant: String?, width: Integer?) -> Peddler::Types::CatalogItems20220401::ItemImage
                    | (Integer?, String?, String?, Integer?) -> Peddler::Types::CatalogItems20220401::ItemImage

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemImage

        attr_reader height: Integer?
        attr_reader link: String?
        attr_reader variant: String?
        attr_reader width: Integer?

        def to_h: () -> { height: Integer?, link: String?, variant: String?, width: Integer? }
      end

      class ItemImages < Array[ItemImagesByMarketplace]
        def self.parse: (Array[untyped]) -> ItemImages
      end

      class ItemImagesByMarketplace < Data
        def self.new: (images: Array[Peddler::Types::CatalogItems20220401::ItemImage]?, marketplace_id: String?) -> Peddler::Types::CatalogItems20220401::ItemImagesByMarketplace
                    | (Array[Peddler::Types::CatalogItems20220401::ItemImage]?, String?) -> Peddler::Types::CatalogItems20220401::ItemImagesByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemImagesByMarketplace

        attr_reader images: Array[Peddler::Types::CatalogItems20220401::ItemImage]?
        attr_reader marketplace_id: String?

        def to_h: () -> { images: Array[Peddler::Types::CatalogItems20220401::ItemImage]?, marketplace_id: String? }
      end

      class ItemProductTypeByMarketplace < Data
        def self.new: (?marketplace_id: String?, ?product_type: String?) -> Peddler::Types::CatalogItems20220401::ItemProductTypeByMarketplace
                    | (String?, String?) -> Peddler::Types::CatalogItems20220401::ItemProductTypeByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemProductTypeByMarketplace

        attr_reader marketplace_id: String?
        attr_reader product_type: String?

        def to_h: () -> { marketplace_id: String?, product_type: String? }
      end

      class ItemProductTypes < Array[ItemProductTypeByMarketplace]
        def self.parse: (Array[untyped]) -> ItemProductTypes
      end

      class ItemRelationship < Data
        def self.new: (type: String?, ?child_asins: Array[String]?, ?parent_asins: Array[String]?, ?variation_theme: Peddler::Types::CatalogItems20220401::ItemVariationTheme?) -> Peddler::Types::CatalogItems20220401::ItemRelationship
                    | (String?, Array[String]?, Array[String]?, Peddler::Types::CatalogItems20220401::ItemVariationTheme?) -> Peddler::Types::CatalogItems20220401::ItemRelationship

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemRelationship

        attr_reader child_asins: Array[String]?
        attr_reader parent_asins: Array[String]?
        attr_reader type: String?

        attr_reader variation_theme: Peddler::Types::CatalogItems20220401::ItemVariationTheme?

        def to_h: () -> { type: String?, child_asins: Array[String]?, parent_asins: Array[String]?, variation_theme: Peddler::Types::CatalogItems20220401::ItemVariationTheme? }
      end

      class ItemRelationships < Array[ItemRelationshipsByMarketplace]
        def self.parse: (Array[untyped]) -> ItemRelationships
      end

      class ItemRelationshipsByMarketplace < Data
        def self.new: (marketplace_id: String?, relationships: Array[Peddler::Types::CatalogItems20220401::ItemRelationship]?) -> Peddler::Types::CatalogItems20220401::ItemRelationshipsByMarketplace
                    | (String?, Array[Peddler::Types::CatalogItems20220401::ItemRelationship]?) -> Peddler::Types::CatalogItems20220401::ItemRelationshipsByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemRelationshipsByMarketplace

        attr_reader marketplace_id: String?
        attr_reader relationships: Array[Peddler::Types::CatalogItems20220401::ItemRelationship]?

        def to_h: () -> { marketplace_id: String?, relationships: Array[Peddler::Types::CatalogItems20220401::ItemRelationship]? }
      end

      class ItemSalesRanks < Array[ItemSalesRanksByMarketplace]
        def self.parse: (Array[untyped]) -> ItemSalesRanks
      end

      class ItemSalesRanksByMarketplace < Data
        def self.new: (marketplace_id: String?, ?classification_ranks: Array[Peddler::Types::CatalogItems20220401::ItemClassificationSalesRank]?, ?display_group_ranks: Array[Peddler::Types::CatalogItems20220401::ItemDisplayGroupSalesRank]?) -> Peddler::Types::CatalogItems20220401::ItemSalesRanksByMarketplace
                    | (String?, Array[Peddler::Types::CatalogItems20220401::ItemClassificationSalesRank]?, Array[Peddler::Types::CatalogItems20220401::ItemDisplayGroupSalesRank]?) -> Peddler::Types::CatalogItems20220401::ItemSalesRanksByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemSalesRanksByMarketplace

        attr_reader classification_ranks: Array[Peddler::Types::CatalogItems20220401::ItemClassificationSalesRank]?
        attr_reader display_group_ranks: Array[Peddler::Types::CatalogItems20220401::ItemDisplayGroupSalesRank]?
        attr_reader marketplace_id: String?

        def to_h: () -> { marketplace_id: String?, classification_ranks: Array[Peddler::Types::CatalogItems20220401::ItemClassificationSalesRank]?, display_group_ranks: Array[Peddler::Types::CatalogItems20220401::ItemDisplayGroupSalesRank]? }
      end

      class ItemSearchResults < Data
        def self.new: (items: Array[Peddler::Types::CatalogItems20220401::Item]?, number_of_results: Integer?, ?pagination: Peddler::Types::CatalogItems20220401::Pagination?, ?refinements: Peddler::Types::CatalogItems20220401::Refinements?) -> Peddler::Types::CatalogItems20220401::ItemSearchResults
                    | (Array[Peddler::Types::CatalogItems20220401::Item]?, Integer?, Peddler::Types::CatalogItems20220401::Pagination?, Peddler::Types::CatalogItems20220401::Refinements?) -> Peddler::Types::CatalogItems20220401::ItemSearchResults

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemSearchResults

        attr_reader items: Array[Peddler::Types::CatalogItems20220401::Item]?
        attr_reader number_of_results: Integer?
        attr_reader pagination: Peddler::Types::CatalogItems20220401::Pagination?
        attr_reader refinements: Peddler::Types::CatalogItems20220401::Refinements?

        def to_h: () -> { items: Array[Peddler::Types::CatalogItems20220401::Item]?, number_of_results: Integer?, pagination: Peddler::Types::CatalogItems20220401::Pagination?, refinements: Peddler::Types::CatalogItems20220401::Refinements? }
      end

      class ItemSummaries < Array[ItemSummaryByMarketplace]
        def self.parse: (Array[untyped]) -> ItemSummaries
      end

      class ItemSummaryByMarketplace < Data
        def self.new: (marketplace_id: String?, ?adult_product: bool?, ?autographed: bool?, ?brand: String?, ?browse_classification: Peddler::Types::CatalogItems20220401::ItemBrowseClassification?, ?color: String?, ?contributors: Array[Peddler::Types::CatalogItems20220401::ItemContributor]?, ?item_classification: String?, ?item_name: String?, ?manufacturer: String?, ?memorabilia: bool?, ?model_number: String?, ?package_quantity: Integer?, ?part_number: String?, ?release_date: String?, ?size: String?, ?style: String?, ?trade_in_eligible: bool?, ?website_display_group: String?, ?website_display_group_name: String?) -> Peddler::Types::CatalogItems20220401::ItemSummaryByMarketplace
                    | (String?, bool?, bool?, String?, Peddler::Types::CatalogItems20220401::ItemBrowseClassification?, String?, Array[Peddler::Types::CatalogItems20220401::ItemContributor]?, String?, String?, String?, bool?, String?, Integer?, String?, String?, String?, String?, bool?, String?, String?) -> Peddler::Types::CatalogItems20220401::ItemSummaryByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemSummaryByMarketplace

        attr_reader adult_product: bool?
        attr_reader autographed: bool?
        attr_reader brand: String?
        attr_reader browse_classification: Peddler::Types::CatalogItems20220401::ItemBrowseClassification?
        attr_reader color: String?
        attr_reader contributors: Array[Peddler::Types::CatalogItems20220401::ItemContributor]?
        attr_reader item_classification: String?
        attr_reader item_name: String?
        attr_reader manufacturer: String?
        attr_reader marketplace_id: String?

        attr_reader memorabilia: bool?
        attr_reader model_number: String?
        attr_reader package_quantity: Integer?
        attr_reader part_number: String?
        attr_reader release_date: String?
        attr_reader size: String?
        attr_reader style: String?
        attr_reader trade_in_eligible: bool?
        attr_reader website_display_group: String?
        attr_reader website_display_group_name: String?

        def adult_product?: () -> bool
        def autographed?: () -> bool
        def memorabilia?: () -> bool

        def to_h: () -> { marketplace_id: String?, adult_product: bool?, autographed: bool?, brand: String?, browse_classification: Peddler::Types::CatalogItems20220401::ItemBrowseClassification?, color: String?, contributors: Array[Peddler::Types::CatalogItems20220401::ItemContributor]?, item_classification: String?, item_name: String?, manufacturer: String?, memorabilia: bool?, model_number: String?, package_quantity: Integer?, part_number: String?, release_date: String?, size: String?, style: String?, trade_in_eligible: bool?, website_display_group: String?, website_display_group_name: String? }
        def trade_in_eligible?: () -> bool
      end

      class ItemVariationTheme < Data
        def self.new: (?attributes: Array[String]?, ?theme: String?) -> Peddler::Types::CatalogItems20220401::ItemVariationTheme
                    | (Array[String]?, String?) -> Peddler::Types::CatalogItems20220401::ItemVariationTheme

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemVariationTheme

        attr_reader attributes: Array[String]?
        attr_reader theme: String?

        def to_h: () -> { attributes: Array[String]?, theme: String? }
      end

      class ItemVendorDetails < Array[ItemVendorDetailsByMarketplace]
        def self.parse: (Array[untyped]) -> ItemVendorDetails
      end

      class ItemVendorDetailsByMarketplace < Data
        def self.new: (marketplace_id: String?, ?brand_code: String?, ?manufacturer_code: String?, ?manufacturer_code_parent: String?, ?product_category: Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?, ?product_group: String?, ?product_subcategory: Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?, ?replenishment_category: String?) -> Peddler::Types::CatalogItems20220401::ItemVendorDetailsByMarketplace
                    | (String?, String?, String?, String?, Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?, String?, Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?, String?) -> Peddler::Types::CatalogItems20220401::ItemVendorDetailsByMarketplace

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemVendorDetailsByMarketplace

        attr_reader brand_code: String?
        attr_reader manufacturer_code: String?
        attr_reader manufacturer_code_parent: String?
        attr_reader marketplace_id: String?

        attr_reader product_category: Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?
        attr_reader product_group: String?
        attr_reader product_subcategory: Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?
        attr_reader replenishment_category: String?

        def to_h: () -> { marketplace_id: String?, brand_code: String?, manufacturer_code: String?, manufacturer_code_parent: String?, product_category: Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?, product_group: String?, product_subcategory: Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory?, replenishment_category: String? }
      end

      class ItemVendorDetailsCategory < Data
        def self.new: (?display_name: String?, ?value: String?) -> Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory
                    | (String?, String?) -> Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::ItemVendorDetailsCategory

        attr_reader display_name: String?
        attr_reader value: String?

        def to_h: () -> { display_name: String?, value: String? }
      end

      class Pagination < Data
        def self.new: (?next_token: String?, ?previous_token: String?) -> Peddler::Types::CatalogItems20220401::Pagination
                    | (String?, String?) -> Peddler::Types::CatalogItems20220401::Pagination

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::Pagination

        attr_reader next_token: String?
        attr_reader previous_token: String?

        def to_h: () -> { next_token: String?, previous_token: String? }
      end

      class Refinements < Data
        def self.new: (brands: Array[Peddler::Types::CatalogItems20220401::BrandRefinement]?, classifications: Array[Peddler::Types::CatalogItems20220401::ClassificationRefinement]?) -> Peddler::Types::CatalogItems20220401::Refinements
                    | (Array[Peddler::Types::CatalogItems20220401::BrandRefinement]?, Array[Peddler::Types::CatalogItems20220401::ClassificationRefinement]?) -> Peddler::Types::CatalogItems20220401::Refinements

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::CatalogItems20220401::Refinements

        attr_reader brands: Array[Peddler::Types::CatalogItems20220401::BrandRefinement]?
        attr_reader classifications: Array[Peddler::Types::CatalogItems20220401::ClassificationRefinement]?

        def to_h: () -> { brands: Array[Peddler::Types::CatalogItems20220401::BrandRefinement]?, classifications: Array[Peddler::Types::CatalogItems20220401::ClassificationRefinement]? }
      end
    end
  end
end
