module Peddler
  module Types
    module ExternalFulfillmentShipments20240911
      class Address < Data
        def self.new: (postal_code: String?, ?address_line1: String?, ?address_line2: String?, ?address_line3: String?, ?address_type: String?, ?city: String?, ?copy_emails: Array[String]?, ?country_code: String?, ?district: String?, ?email: String?, ?municipality: String?, ?name: String?, ?phone_number: String?, ?state: String?) -> Peddler::Types::ExternalFulfillmentShipments20240911::Address
                    | (String?, String?, String?, String?, String?, String?, Array[String]?, String?, String?, String?, String?, String?, String?, String?) -> Peddler::Types::ExternalFulfillmentShipments20240911::Address

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ExternalFulfillmentShipments20240911::Address

        attr_reader address_line1: String?
        attr_reader address_line2: String?
        attr_reader address_line3: String?
        attr_reader address_type: String?
        attr_reader city: String?
        attr_reader copy_emails: Array[String]?
        attr_reader country_code: String?
        attr_reader district: String?
        attr_reader email: String?
        attr_reader municipality: String?
        attr_reader name: String?
        attr_reader phone_number: String?
        attr_reader postal_code: String?

        attr_reader state: String?

        def to_h: () -> { postal_code: String?, address_line1: String?, address_line2: String?, address_line3: String?, address_type: String?, city: String?, copy_emails: Array[String]?, country_code: String?, district: String?, email: String?, municipality: String?, name: String?, phone_number: String?, state: String? }
      end
    end
  end
end
