module Peddler
  module Types
    module ShippingV2
      class AccessPoint < Data
        def self.new: (?access_point_id: String?, ?accessibility_attributes: Peddler::Types::ShippingV2::AccessibilityAttributes?, ?address: Peddler::Types::ShippingV2::Address?, ?assistance_type: String?, ?exception_operating_hours: Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?, ?name: String?, ?score: String?, ?standard_operating_hours: Hash[untyped, untyped]?, ?timezone: String?, ?type: String?) -> Peddler::Types::ShippingV2::AccessPoint
                    | (String?, Peddler::Types::ShippingV2::AccessibilityAttributes?, Peddler::Types::ShippingV2::Address?, String?, Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?, String?, String?, Hash[untyped, untyped]?, String?, String?) -> Peddler::Types::ShippingV2::AccessPoint

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::AccessPoint

        attr_reader access_point_id: String?
        attr_reader accessibility_attributes: Peddler::Types::ShippingV2::AccessibilityAttributes?
        attr_reader address: Peddler::Types::ShippingV2::Address?
        attr_reader assistance_type: String?
        attr_reader exception_operating_hours: Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?
        attr_reader name: String?
        attr_reader score: String?
        attr_reader standard_operating_hours: Hash[untyped, untyped]?
        attr_reader timezone: String?
        attr_reader type: String?

        def to_h: () -> { access_point_id: String?, accessibility_attributes: Peddler::Types::ShippingV2::AccessibilityAttributes?, address: Peddler::Types::ShippingV2::Address?, assistance_type: String?, exception_operating_hours: Array[Peddler::Types::ShippingV2::ExceptionOperatingHours]?, name: String?, score: String?, standard_operating_hours: Hash[untyped, untyped]?, timezone: String?, type: String? }
      end

      class AccessPointDetails < Data
        def self.new: (?access_point_id: String?) -> Peddler::Types::ShippingV2::AccessPointDetails
                    | (String?) -> Peddler::Types::ShippingV2::AccessPointDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::AccessPointDetails

        attr_reader access_point_id: String?

        def to_h: () -> { access_point_id: String? }
      end

      class AccessPointList < Array[AccessPoint]
        def self.parse: (Array[untyped]) -> AccessPointList
      end

      class AccessibilityAttributes < Data
        def self.new: (?distance: String?, ?drive_time: Integer?) -> Peddler::Types::ShippingV2::AccessibilityAttributes
                    | (String?, Integer?) -> Peddler::Types::ShippingV2::AccessibilityAttributes

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::AccessibilityAttributes

        attr_reader distance: String?
        attr_reader drive_time: Integer?

        def to_h: () -> { distance: String?, drive_time: Integer? }
      end

      class ActiveAccount < Data
        def self.new: (?account_id: String?, ?carrier_id: String?) -> Peddler::Types::ShippingV2::ActiveAccount
                    | (String?, String?) -> Peddler::Types::ShippingV2::ActiveAccount

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ActiveAccount

        attr_reader account_id: String?
        attr_reader carrier_id: String?

        def to_h: () -> { account_id: String?, carrier_id: String? }
      end

      class ActiveAccounts < Array[ActiveAccount]
        def self.parse: (Array[untyped]) -> ActiveAccounts
      end

      class Address < Data
        def self.new: (address_line1: String?, city: String?, country_code: String?, name: String?, postal_code: String?, state_or_region: String?, ?address_line2: String?, ?address_line3: String?, ?company_name: String?, ?email: String?, ?geocode: Peddler::Types::ShippingV2::Geocode?, ?phone_number: String?) -> Peddler::Types::ShippingV2::Address
                    | (String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Peddler::Types::ShippingV2::Geocode?, String?) -> Peddler::Types::ShippingV2::Address

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Address

        attr_reader address_line1: String?

        attr_reader address_line2: String?
        attr_reader address_line3: String?
        attr_reader city: String?

        attr_reader company_name: String?
        attr_reader country_code: String?

        attr_reader email: String?
        attr_reader geocode: Peddler::Types::ShippingV2::Geocode?
        attr_reader name: String?

        attr_reader phone_number: String?
        attr_reader postal_code: String?
        attr_reader state_or_region: String?

        def to_h: () -> { address_line1: String?, city: String?, country_code: String?, name: String?, postal_code: String?, state_or_region: String?, address_line2: String?, address_line3: String?, company_name: String?, email: String?, geocode: Peddler::Types::ShippingV2::Geocode?, phone_number: String? }
      end

      class AmazonOrderDetails < Data
        def self.new: (order_id: String?) -> Peddler::Types::ShippingV2::AmazonOrderDetails
                    | (String?) -> Peddler::Types::ShippingV2::AmazonOrderDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::AmazonOrderDetails

        attr_reader order_id: String?

        def to_h: () -> { order_id: String? }
      end

      class AmazonShipmentDetails < Data
        def self.new: (shipment_id: String?) -> Peddler::Types::ShippingV2::AmazonShipmentDetails
                    | (String?) -> Peddler::Types::ShippingV2::AmazonShipmentDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::AmazonShipmentDetails

        attr_reader shipment_id: String?

        def to_h: () -> { shipment_id: String? }
      end

      class AvailableValueAddedServiceGroup < Data
        def self.new: (group_description: String?, group_id: String?, required: bool?, ?value_added_services: Array[Peddler::Types::ShippingV2::ValueAddedService]?) -> Peddler::Types::ShippingV2::AvailableValueAddedServiceGroup
                    | (String?, String?, bool?, Array[Peddler::Types::ShippingV2::ValueAddedService]?) -> Peddler::Types::ShippingV2::AvailableValueAddedServiceGroup

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::AvailableValueAddedServiceGroup

        attr_reader group_description: String?
        attr_reader group_id: String?
        attr_reader required: bool?
        attr_reader value_added_services: Array[Peddler::Types::ShippingV2::ValueAddedService]?

        def required?: () -> bool
        def to_h: () -> { group_description: String?, group_id: String?, required: bool?, value_added_services: Array[Peddler::Types::ShippingV2::ValueAddedService]? }
      end

      class AvailableValueAddedServiceGroupList < Array[AvailableValueAddedServiceGroup]
        def self.parse: (Array[untyped]) -> AvailableValueAddedServiceGroupList
      end

      class Benefits < Data
        def self.new: (excluded_benefits: Array[Peddler::Types::ShippingV2::ExcludedBenefit]?, included_benefits: Array[String]?) -> Peddler::Types::ShippingV2::Benefits
                    | (Array[Peddler::Types::ShippingV2::ExcludedBenefit]?, Array[String]?) -> Peddler::Types::ShippingV2::Benefits

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Benefits

        attr_reader excluded_benefits: Array[Peddler::Types::ShippingV2::ExcludedBenefit]?
        attr_reader included_benefits: Array[String]?

        def to_h: () -> { excluded_benefits: Array[Peddler::Types::ShippingV2::ExcludedBenefit]?, included_benefits: Array[String]? }
      end

      class CancelShipmentResponse < Data
        def self.new: (?payload: Hash[untyped, untyped]?) -> Peddler::Types::ShippingV2::CancelShipmentResponse
                    | (Hash[untyped, untyped]?) -> Peddler::Types::ShippingV2::CancelShipmentResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CancelShipmentResponse

        attr_reader payload: Hash[untyped, untyped]?

        def to_h: () -> { payload: Hash[untyped, untyped]? }
      end

      class Carrier < Data
        def self.new: (id: String?, name: String?) -> Peddler::Types::ShippingV2::Carrier
                    | (String?, String?) -> Peddler::Types::ShippingV2::Carrier

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Carrier

        attr_reader id: String?
        attr_reader name: String?

        def to_h: () -> { id: String?, name: String? }
      end

      class CarrierAccount < Data
        def self.new: (carrier_account_id: String?, carrier_id: String?) -> Peddler::Types::ShippingV2::CarrierAccount
                    | (String?, String?) -> Peddler::Types::ShippingV2::CarrierAccount

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CarrierAccount

        attr_reader carrier_account_id: String?
        attr_reader carrier_id: String?

        def to_h: () -> { carrier_account_id: String?, carrier_id: String? }
      end

      class CarrierAccountAttribute < Data
        def self.new: (?attribute_name: String?, ?property_group: String?, ?value: String?) -> Peddler::Types::ShippingV2::CarrierAccountAttribute
                    | (String?, String?, String?) -> Peddler::Types::ShippingV2::CarrierAccountAttribute

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CarrierAccountAttribute

        attr_reader attribute_name: String?
        attr_reader property_group: String?
        attr_reader value: String?

        def to_h: () -> { attribute_name: String?, property_group: String?, value: String? }
      end

      class CarrierAccountAttributes < Array[CarrierAccountAttribute]
        def self.parse: (Array[untyped]) -> CarrierAccountAttributes
      end

      class CarrierAccountInput < Data
        def self.new: (?description_localization_key: String?, ?group_name: String?, ?input_type: String?, ?confidential: bool?, ?hidden: bool?, ?mandatory: bool?, ?name: String?, ?validation_metadata: Array[Peddler::Types::ShippingV2::ValidationMetadata]?) -> Peddler::Types::ShippingV2::CarrierAccountInput
                    | (String?, String?, String?, bool?, bool?, bool?, String?, Array[Peddler::Types::ShippingV2::ValidationMetadata]?) -> Peddler::Types::ShippingV2::CarrierAccountInput

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CarrierAccountInput

        attr_reader confidential: bool?
        attr_reader description_localization_key: String?
        attr_reader group_name: String?

        attr_reader hidden: bool?
        attr_reader input_type: String?

        attr_reader mandatory: bool?
        attr_reader name: String?
        attr_reader validation_metadata: Array[Peddler::Types::ShippingV2::ValidationMetadata]?

        def confidential?: () -> bool
        def hidden?: () -> bool
        def mandatory?: () -> bool
        def to_h: () -> { description_localization_key: String?, group_name: String?, input_type: String?, confidential: bool?, hidden: bool?, mandatory: bool?, name: String?, validation_metadata: Array[Peddler::Types::ShippingV2::ValidationMetadata]? }
      end

      class CarrierAccountInputsList < Array[CarrierAccountInput]
        def self.parse: (Array[untyped]) -> CarrierAccountInputsList
      end

      class CarrierAccounts < Array[CarrierAccount]
        def self.parse: (Array[untyped]) -> CarrierAccounts
      end

      class ChannelDetails < Data
        def self.new: (channel_type: String?, ?amazon_order_details: Peddler::Types::ShippingV2::AmazonOrderDetails?, ?amazon_shipment_details: Peddler::Types::ShippingV2::AmazonShipmentDetails?) -> Peddler::Types::ShippingV2::ChannelDetails
                    | (String?, Peddler::Types::ShippingV2::AmazonOrderDetails?, Peddler::Types::ShippingV2::AmazonShipmentDetails?) -> Peddler::Types::ShippingV2::ChannelDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ChannelDetails

        attr_reader amazon_order_details: Peddler::Types::ShippingV2::AmazonOrderDetails?
        attr_reader amazon_shipment_details: Peddler::Types::ShippingV2::AmazonShipmentDetails?
        attr_reader channel_type: String?

        def to_h: () -> { channel_type: String?, amazon_order_details: Peddler::Types::ShippingV2::AmazonOrderDetails?, amazon_shipment_details: Peddler::Types::ShippingV2::AmazonShipmentDetails? }
      end

      class ChargeComponent < Data
        def self.new: (?amount: Peddler::Types::Money?, ?charge_type: String?) -> Peddler::Types::ShippingV2::ChargeComponent
                    | (Peddler::Types::Money?, String?) -> Peddler::Types::ShippingV2::ChargeComponent

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ChargeComponent

        attr_reader amount: Peddler::Types::Money?
        attr_reader charge_type: String?

        def to_h: () -> { amount: Peddler::Types::Money?, charge_type: String? }
      end

      class ChargeList < Array[ChargeComponent]
        def self.parse: (Array[untyped]) -> ChargeList
      end

      class ClaimProofURLs < Array[untyped]
        def self.parse: (Array[untyped]) -> ClaimProofURLs
      end

      class ClientReferenceDetail < Data
        def self.new: (client_reference_id: String?, client_reference_type: String?) -> Peddler::Types::ShippingV2::ClientReferenceDetail
                    | (String?, String?) -> Peddler::Types::ShippingV2::ClientReferenceDetail

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ClientReferenceDetail

        attr_reader client_reference_id: String?
        attr_reader client_reference_type: String?

        def to_h: () -> { client_reference_id: String?, client_reference_type: String? }
      end

      class ClientReferenceDetails < Array[ClientReferenceDetail]
        def self.parse: (Array[untyped]) -> ClientReferenceDetails
      end

      class CollectOnDelivery < Data
        def self.new: (amount: Peddler::Types::Money?) -> Peddler::Types::ShippingV2::CollectOnDelivery
                    | (Peddler::Types::Money?) -> Peddler::Types::ShippingV2::CollectOnDelivery

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CollectOnDelivery

        attr_reader amount: Peddler::Types::Money?

        def to_h: () -> { amount: Peddler::Types::Money? }
      end

      class CollectionFormsHistoryRecord < Data
        def self.new: (?carrier_name: String?, ?collection_form_id: String?, ?creation_date: String?, ?generation_status: String?, ?ship_from_address: Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::CollectionFormsHistoryRecord
                    | (String?, String?, String?, String?, Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::CollectionFormsHistoryRecord

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CollectionFormsHistoryRecord

        attr_reader carrier_name: String?
        attr_reader collection_form_id: String?
        attr_reader creation_date: String?
        attr_reader generation_status: String?
        attr_reader ship_from_address: Peddler::Types::ShippingV2::Address?

        def to_h: () -> { carrier_name: String?, collection_form_id: String?, creation_date: String?, generation_status: String?, ship_from_address: Peddler::Types::ShippingV2::Address? }
      end

      class CollectionFormsHistoryRecordList < Array[CollectionFormsHistoryRecord]
        def self.parse: (Array[untyped]) -> CollectionFormsHistoryRecordList
      end

      class CollectionsFormDocument < Data
        def self.new: (?base64_encoded_content: String?, ?document_format: String?) -> Peddler::Types::ShippingV2::CollectionsFormDocument
                    | (String?, String?) -> Peddler::Types::ShippingV2::CollectionsFormDocument

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CollectionsFormDocument

        attr_reader base64_encoded_content: String?
        attr_reader document_format: String?

        def to_h: () -> { base64_encoded_content: String?, document_format: String? }
      end

      class CreateClaimRequest < Data
        def self.new: (claim_reason: String?, settlement_type: String?, tracking_id: String?, ?declared_value: Peddler::Types::Money?, ?replacement_package_sent: bool?, ?proofs: Array[String]?) -> Peddler::Types::ShippingV2::CreateClaimRequest
                    | (String?, String?, String?, Peddler::Types::Money?, bool?, Array[String]?) -> Peddler::Types::ShippingV2::CreateClaimRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CreateClaimRequest

        attr_reader claim_reason: String?

        attr_reader declared_value: Peddler::Types::Money?

        attr_reader proofs: Array[String]?
        attr_reader replacement_package_sent: bool?
        attr_reader settlement_type: String?
        attr_reader tracking_id: String?

        def replacement_package_sent?: () -> bool
        def to_h: () -> { claim_reason: String?, settlement_type: String?, tracking_id: String?, declared_value: Peddler::Types::Money?, replacement_package_sent: bool?, proofs: Array[String]? }
      end

      class CreateClaimResponse < Data
        def self.new: (?claim_id: String?) -> Peddler::Types::ShippingV2::CreateClaimResponse
                    | (String?) -> Peddler::Types::ShippingV2::CreateClaimResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::CreateClaimResponse

        attr_reader claim_id: String?

        def to_h: () -> { claim_id: String? }
      end

      class DangerousGoodsDetails < Data
        def self.new: (?packing_group: String?, ?packing_instruction: String?, ?transportation_regulatory_class: String?, ?united_nations_regulatory_id: String?) -> Peddler::Types::ShippingV2::DangerousGoodsDetails
                    | (String?, String?, String?, String?) -> Peddler::Types::ShippingV2::DangerousGoodsDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::DangerousGoodsDetails

        attr_reader packing_group: String?
        attr_reader packing_instruction: String?
        attr_reader transportation_regulatory_class: String?
        attr_reader united_nations_regulatory_id: String?

        def to_h: () -> { packing_group: String?, packing_instruction: String?, transportation_regulatory_class: String?, united_nations_regulatory_id: String? }
      end

      class DateRange < Data
        def self.new: (?end_date: String?, ?start_date: String?) -> Peddler::Types::ShippingV2::DateRange
                    | (String?, String?) -> Peddler::Types::ShippingV2::DateRange

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::DateRange

        attr_reader end_date: String?
        attr_reader start_date: String?

        def to_h: () -> { end_date: String?, start_date: String? }
      end

      class Dimensions < Data
        def self.new: (height: Float?, length: Float?, unit: String?, width: Float?) -> Peddler::Types::ShippingV2::Dimensions
                    | (Float?, Float?, String?, Float?) -> Peddler::Types::ShippingV2::Dimensions

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Dimensions

        attr_reader height: Float?
        attr_reader length: Float?
        attr_reader unit: String?
        attr_reader width: Float?

        def to_h: () -> { height: Float?, length: Float?, unit: String?, width: Float? }
      end

      class DirectFulfillmentItemIdentifiers < Data
        def self.new: (line_item_id: String?, ?piece_number: String?) -> Peddler::Types::ShippingV2::DirectFulfillmentItemIdentifiers
                    | (String?, String?) -> Peddler::Types::ShippingV2::DirectFulfillmentItemIdentifiers

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::DirectFulfillmentItemIdentifiers

        attr_reader line_item_id: String?
        attr_reader piece_number: String?

        def to_h: () -> { line_item_id: String?, piece_number: String? }
      end

      class DirectPurchaseRequest < Data
        def self.new: (channel_details: Peddler::Types::ShippingV2::ChannelDetails?, ?label_specifications: Peddler::Types::ShippingV2::RequestedDocumentSpecification?, ?packages: Array[Peddler::Types::ShippingV2::Package]?, ?return_to: Peddler::Types::ShippingV2::Address?, ?ship_from: Peddler::Types::ShippingV2::Address?, ?ship_to: Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::DirectPurchaseRequest
                    | (Peddler::Types::ShippingV2::ChannelDetails?, Peddler::Types::ShippingV2::RequestedDocumentSpecification?, Array[Peddler::Types::ShippingV2::Package]?, Peddler::Types::ShippingV2::Address?, Peddler::Types::ShippingV2::Address?, Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::DirectPurchaseRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::DirectPurchaseRequest

        attr_reader channel_details: Peddler::Types::ShippingV2::ChannelDetails?
        attr_reader label_specifications: Peddler::Types::ShippingV2::RequestedDocumentSpecification?
        attr_reader packages: Array[Peddler::Types::ShippingV2::Package]?
        attr_reader return_to: Peddler::Types::ShippingV2::Address?
        attr_reader ship_from: Peddler::Types::ShippingV2::Address?
        attr_reader ship_to: Peddler::Types::ShippingV2::Address?

        def to_h: () -> { channel_details: Peddler::Types::ShippingV2::ChannelDetails?, label_specifications: Peddler::Types::ShippingV2::RequestedDocumentSpecification?, packages: Array[Peddler::Types::ShippingV2::Package]?, return_to: Peddler::Types::ShippingV2::Address?, ship_from: Peddler::Types::ShippingV2::Address?, ship_to: Peddler::Types::ShippingV2::Address? }
      end

      class DirectPurchaseResponse < Data
        def self.new: (?payload: Peddler::Types::ShippingV2::DirectPurchaseResult?) -> Peddler::Types::ShippingV2::DirectPurchaseResponse
                    | (Peddler::Types::ShippingV2::DirectPurchaseResult?) -> Peddler::Types::ShippingV2::DirectPurchaseResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::DirectPurchaseResponse

        attr_reader payload: Peddler::Types::ShippingV2::DirectPurchaseResult?

        def to_h: () -> { payload: Peddler::Types::ShippingV2::DirectPurchaseResult? }
      end

      class DirectPurchaseResult < Data
        def self.new: (shipment_id: String?, ?package_document_detail_list: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?) -> Peddler::Types::ShippingV2::DirectPurchaseResult
                    | (String?, Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?) -> Peddler::Types::ShippingV2::DirectPurchaseResult

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::DirectPurchaseResult

        attr_reader package_document_detail_list: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?
        attr_reader shipment_id: String?

        def to_h: () -> { shipment_id: String?, package_document_detail_list: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]? }
      end

      class DocumentSize < Data
        def self.new: (length: Float?, unit: String?, width: Float?) -> Peddler::Types::ShippingV2::DocumentSize
                    | (Float?, String?, Float?) -> Peddler::Types::ShippingV2::DocumentSize

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::DocumentSize

        attr_reader length: Float?
        attr_reader unit: String?
        attr_reader width: Float?

        def to_h: () -> { length: Float?, unit: String?, width: Float? }
      end

      class Error < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::Types::ShippingV2::Error
                    | (String?, String?, String?) -> Peddler::Types::ShippingV2::Error

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Error

        attr_reader code: String?

        attr_reader details: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class ErrorList < Data
        def self.new: (errors: Array[Peddler::Types::ShippingV2::Error]?) -> Peddler::Types::ShippingV2::ErrorList
                    | (Array[Peddler::Types::ShippingV2::Error]?) -> Peddler::Types::ShippingV2::ErrorList

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ErrorList

        attr_reader errors: Array[Peddler::Types::ShippingV2::Error]?

        def to_h: () -> { errors: Array[Peddler::Types::ShippingV2::Error]? }
      end

      class Event < Data
        def self.new: (event_code: String?, event_time: String?, ?location: Peddler::Types::ShippingV2::Location?, ?shipment_type: String?) -> Peddler::Types::ShippingV2::Event
                    | (String?, String?, Peddler::Types::ShippingV2::Location?, String?) -> Peddler::Types::ShippingV2::Event

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Event

        attr_reader event_code: String?
        attr_reader event_time: String?
        attr_reader location: Peddler::Types::ShippingV2::Location?
        attr_reader shipment_type: String?

        def to_h: () -> { event_code: String?, event_time: String?, location: Peddler::Types::ShippingV2::Location?, shipment_type: String? }
      end

      class ExceptionOperatingHours < Data
        def self.new: (?date_range: Peddler::Types::ShippingV2::DateRange?, ?operating_hours: Peddler::Types::ShippingV2::OperatingHours?) -> Peddler::Types::ShippingV2::ExceptionOperatingHours
                    | (Peddler::Types::ShippingV2::DateRange?, Peddler::Types::ShippingV2::OperatingHours?) -> Peddler::Types::ShippingV2::ExceptionOperatingHours

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ExceptionOperatingHours

        attr_reader date_range: Peddler::Types::ShippingV2::DateRange?
        attr_reader operating_hours: Peddler::Types::ShippingV2::OperatingHours?

        def to_h: () -> { date_range: Peddler::Types::ShippingV2::DateRange?, operating_hours: Peddler::Types::ShippingV2::OperatingHours? }
      end

      class ExcludedBenefit < Data
        def self.new: (benefit: String?, ?reason_codes: Array[String]?) -> Peddler::Types::ShippingV2::ExcludedBenefit
                    | (String?, Array[String]?) -> Peddler::Types::ShippingV2::ExcludedBenefit

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ExcludedBenefit

        attr_reader benefit: String?
        attr_reader reason_codes: Array[String]?

        def to_h: () -> { benefit: String?, reason_codes: Array[String]? }
      end

      class ExcludedBenefitReasonCodes < Array[untyped]
        def self.parse: (Array[untyped]) -> ExcludedBenefitReasonCodes
      end

      class ExcludedBenefits < Array[ExcludedBenefit]
        def self.parse: (Array[untyped]) -> ExcludedBenefits
      end

      class GenerateCollectionFormRequest < Data
        def self.new: (carrier_id: String?, ?client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, ?ship_from_address: Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::GenerateCollectionFormRequest
                    | (String?, Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::GenerateCollectionFormRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GenerateCollectionFormRequest

        attr_reader carrier_id: String?
        attr_reader client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?
        attr_reader ship_from_address: Peddler::Types::ShippingV2::Address?

        def to_h: () -> { carrier_id: String?, client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, ship_from_address: Peddler::Types::ShippingV2::Address? }
      end

      class GenerateCollectionFormResponse < Data
        def self.new: (?collections_form_document: Peddler::Types::ShippingV2::CollectionsFormDocument?) -> Peddler::Types::ShippingV2::GenerateCollectionFormResponse
                    | (Peddler::Types::ShippingV2::CollectionsFormDocument?) -> Peddler::Types::ShippingV2::GenerateCollectionFormResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GenerateCollectionFormResponse

        attr_reader collections_form_document: Peddler::Types::ShippingV2::CollectionsFormDocument?

        def to_h: () -> { collections_form_document: Peddler::Types::ShippingV2::CollectionsFormDocument? }
      end

      class Geocode < Data
        def self.new: (?latitude: String?, ?longitude: String?) -> Peddler::Types::ShippingV2::Geocode
                    | (String?, String?) -> Peddler::Types::ShippingV2::Geocode

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Geocode

        attr_reader latitude: String?
        attr_reader longitude: String?

        def to_h: () -> { latitude: String?, longitude: String? }
      end

      class GetAccessPointsResponse < Data
        def self.new: (?payload: Peddler::Types::ShippingV2::GetAccessPointsResult?) -> Peddler::Types::ShippingV2::GetAccessPointsResponse
                    | (Peddler::Types::ShippingV2::GetAccessPointsResult?) -> Peddler::Types::ShippingV2::GetAccessPointsResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetAccessPointsResponse

        attr_reader payload: Peddler::Types::ShippingV2::GetAccessPointsResult?

        def to_h: () -> { payload: Peddler::Types::ShippingV2::GetAccessPointsResult? }
      end

      class GetAccessPointsResult < Data
        def self.new: (access_points_map: Hash[untyped, untyped]?) -> Peddler::Types::ShippingV2::GetAccessPointsResult
                    | (Hash[untyped, untyped]?) -> Peddler::Types::ShippingV2::GetAccessPointsResult

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetAccessPointsResult

        attr_reader access_points_map: Hash[untyped, untyped]?

        def to_h: () -> { access_points_map: Hash[untyped, untyped]? }
      end

      class GetAdditionalInputsResponse < Data
        def self.new: (?payload: Hash[untyped, untyped]?) -> Peddler::Types::ShippingV2::GetAdditionalInputsResponse
                    | (Hash[untyped, untyped]?) -> Peddler::Types::ShippingV2::GetAdditionalInputsResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetAdditionalInputsResponse

        attr_reader payload: Hash[untyped, untyped]?

        def to_h: () -> { payload: Hash[untyped, untyped]? }
      end

      class GetCarrierAccountFormInputsResponse < Data
        def self.new: (?linkable_carriers_list: Array[Peddler::Types::ShippingV2::LinkableCarrier]?) -> Peddler::Types::ShippingV2::GetCarrierAccountFormInputsResponse
                    | (Array[Peddler::Types::ShippingV2::LinkableCarrier]?) -> Peddler::Types::ShippingV2::GetCarrierAccountFormInputsResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetCarrierAccountFormInputsResponse

        attr_reader linkable_carriers_list: Array[Peddler::Types::ShippingV2::LinkableCarrier]?

        def to_h: () -> { linkable_carriers_list: Array[Peddler::Types::ShippingV2::LinkableCarrier]? }
      end

      class GetCarrierAccountsRequest < Data
        def self.new: (?client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?) -> Peddler::Types::ShippingV2::GetCarrierAccountsRequest
                    | (Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?) -> Peddler::Types::ShippingV2::GetCarrierAccountsRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetCarrierAccountsRequest

        attr_reader client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?

        def to_h: () -> { client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]? }
      end

      class GetCarrierAccountsResponse < Data
        def self.new: (active_accounts: Array[Peddler::Types::ShippingV2::ActiveAccount]?) -> Peddler::Types::ShippingV2::GetCarrierAccountsResponse
                    | (Array[Peddler::Types::ShippingV2::ActiveAccount]?) -> Peddler::Types::ShippingV2::GetCarrierAccountsResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetCarrierAccountsResponse

        attr_reader active_accounts: Array[Peddler::Types::ShippingV2::ActiveAccount]?

        def to_h: () -> { active_accounts: Array[Peddler::Types::ShippingV2::ActiveAccount]? }
      end

      class GetCollectionFormHistoryRequest < Data
        def self.new: (?carrier_id: String?, ?client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, ?date_range: Peddler::Types::ShippingV2::DateRange?, ?max_results: Integer?, ?ship_from_address: Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::GetCollectionFormHistoryRequest
                    | (String?, Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, Peddler::Types::ShippingV2::DateRange?, Integer?, Peddler::Types::ShippingV2::Address?) -> Peddler::Types::ShippingV2::GetCollectionFormHistoryRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetCollectionFormHistoryRequest

        attr_reader carrier_id: String?
        attr_reader client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?
        attr_reader date_range: Peddler::Types::ShippingV2::DateRange?
        attr_reader max_results: Integer?
        attr_reader ship_from_address: Peddler::Types::ShippingV2::Address?

        def to_h: () -> { carrier_id: String?, client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, date_range: Peddler::Types::ShippingV2::DateRange?, max_results: Integer?, ship_from_address: Peddler::Types::ShippingV2::Address? }
      end

      class GetCollectionFormHistoryResponse < Data
        def self.new: (?collection_forms_history_record_list: Array[Peddler::Types::ShippingV2::CollectionFormsHistoryRecord]?, ?last_refreshed_date: String?) -> Peddler::Types::ShippingV2::GetCollectionFormHistoryResponse
                    | (Array[Peddler::Types::ShippingV2::CollectionFormsHistoryRecord]?, String?) -> Peddler::Types::ShippingV2::GetCollectionFormHistoryResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetCollectionFormHistoryResponse

        attr_reader collection_forms_history_record_list: Array[Peddler::Types::ShippingV2::CollectionFormsHistoryRecord]?
        attr_reader last_refreshed_date: String?

        def to_h: () -> { collection_forms_history_record_list: Array[Peddler::Types::ShippingV2::CollectionFormsHistoryRecord]?, last_refreshed_date: String? }
      end

      class GetCollectionFormResponse < Data
        def self.new: (?collections_form_document: Peddler::Types::ShippingV2::CollectionsFormDocument?) -> Peddler::Types::ShippingV2::GetCollectionFormResponse
                    | (Peddler::Types::ShippingV2::CollectionsFormDocument?) -> Peddler::Types::ShippingV2::GetCollectionFormResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetCollectionFormResponse

        attr_reader collections_form_document: Peddler::Types::ShippingV2::CollectionsFormDocument?

        def to_h: () -> { collections_form_document: Peddler::Types::ShippingV2::CollectionsFormDocument? }
      end

      class GetRatesRequest < Data
        def self.new: (channel_details: Peddler::Types::ShippingV2::ChannelDetails?, packages: Array[Peddler::Types::ShippingV2::Package]?, ship_from: Peddler::Types::ShippingV2::Address?, ?carrier_accounts: Array[Peddler::Types::ShippingV2::CarrierAccount]?, ?client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, ?destination_access_point_details: Peddler::Types::ShippingV2::AccessPointDetails?, ?return_to: Peddler::Types::ShippingV2::Address?, ?ship_date: String?, ?ship_to: Peddler::Types::ShippingV2::Address?, ?shipment_type: String?, ?shipper_instruction: Peddler::Types::ShippingV2::ShipperInstruction?, ?tax_details: Array[Peddler::Types::ShippingV2::TaxDetail]?, ?value_added_services: Peddler::Types::ShippingV2::ValueAddedServiceDetails?) -> Peddler::Types::ShippingV2::GetRatesRequest
                    | (Peddler::Types::ShippingV2::ChannelDetails?, Array[Peddler::Types::ShippingV2::Package]?, Peddler::Types::ShippingV2::Address?, Array[Peddler::Types::ShippingV2::CarrierAccount]?, Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, Peddler::Types::ShippingV2::AccessPointDetails?, Peddler::Types::ShippingV2::Address?, String?, Peddler::Types::ShippingV2::Address?, String?, Peddler::Types::ShippingV2::ShipperInstruction?, Array[Peddler::Types::ShippingV2::TaxDetail]?, Peddler::Types::ShippingV2::ValueAddedServiceDetails?) -> Peddler::Types::ShippingV2::GetRatesRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetRatesRequest

        attr_reader carrier_accounts: Array[Peddler::Types::ShippingV2::CarrierAccount]?
        attr_reader channel_details: Peddler::Types::ShippingV2::ChannelDetails?

        attr_reader client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?
        attr_reader destination_access_point_details: Peddler::Types::ShippingV2::AccessPointDetails?
        attr_reader packages: Array[Peddler::Types::ShippingV2::Package]?

        attr_reader return_to: Peddler::Types::ShippingV2::Address?
        attr_reader ship_date: String?
        attr_reader ship_from: Peddler::Types::ShippingV2::Address?

        attr_reader ship_to: Peddler::Types::ShippingV2::Address?
        attr_reader shipment_type: String?
        attr_reader shipper_instruction: Peddler::Types::ShippingV2::ShipperInstruction?
        attr_reader tax_details: Array[Peddler::Types::ShippingV2::TaxDetail]?
        attr_reader value_added_services: Peddler::Types::ShippingV2::ValueAddedServiceDetails?

        def to_h: () -> { channel_details: Peddler::Types::ShippingV2::ChannelDetails?, packages: Array[Peddler::Types::ShippingV2::Package]?, ship_from: Peddler::Types::ShippingV2::Address?, carrier_accounts: Array[Peddler::Types::ShippingV2::CarrierAccount]?, client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, destination_access_point_details: Peddler::Types::ShippingV2::AccessPointDetails?, return_to: Peddler::Types::ShippingV2::Address?, ship_date: String?, ship_to: Peddler::Types::ShippingV2::Address?, shipment_type: String?, shipper_instruction: Peddler::Types::ShippingV2::ShipperInstruction?, tax_details: Array[Peddler::Types::ShippingV2::TaxDetail]?, value_added_services: Peddler::Types::ShippingV2::ValueAddedServiceDetails? }
      end

      class GetRatesResponse < Data
        def self.new: (?payload: Peddler::Types::ShippingV2::GetRatesResult?) -> Peddler::Types::ShippingV2::GetRatesResponse
                    | (Peddler::Types::ShippingV2::GetRatesResult?) -> Peddler::Types::ShippingV2::GetRatesResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetRatesResponse

        attr_reader payload: Peddler::Types::ShippingV2::GetRatesResult?

        def to_h: () -> { payload: Peddler::Types::ShippingV2::GetRatesResult? }
      end

      class GetRatesResult < Data
        def self.new: (rates: Array[Peddler::Types::ShippingV2::Rate]?, request_token: String?, ?ineligible_rates: Array[Peddler::Types::ShippingV2::IneligibleRate]?) -> Peddler::Types::ShippingV2::GetRatesResult
                    | (Array[Peddler::Types::ShippingV2::Rate]?, String?, Array[Peddler::Types::ShippingV2::IneligibleRate]?) -> Peddler::Types::ShippingV2::GetRatesResult

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetRatesResult

        attr_reader ineligible_rates: Array[Peddler::Types::ShippingV2::IneligibleRate]?
        attr_reader rates: Array[Peddler::Types::ShippingV2::Rate]?
        attr_reader request_token: String?

        def to_h: () -> { rates: Array[Peddler::Types::ShippingV2::Rate]?, request_token: String?, ineligible_rates: Array[Peddler::Types::ShippingV2::IneligibleRate]? }
      end

      class GetShipmentDocumentsResponse < Data
        def self.new: (?payload: Peddler::Types::ShippingV2::GetShipmentDocumentsResult?) -> Peddler::Types::ShippingV2::GetShipmentDocumentsResponse
                    | (Peddler::Types::ShippingV2::GetShipmentDocumentsResult?) -> Peddler::Types::ShippingV2::GetShipmentDocumentsResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetShipmentDocumentsResponse

        attr_reader payload: Peddler::Types::ShippingV2::GetShipmentDocumentsResult?

        def to_h: () -> { payload: Peddler::Types::ShippingV2::GetShipmentDocumentsResult? }
      end

      class GetShipmentDocumentsResult < Data
        def self.new: (package_document_detail: Peddler::Types::ShippingV2::PackageDocumentDetail?, shipment_id: String?, ?benefits: Peddler::Types::ShippingV2::Benefits?) -> Peddler::Types::ShippingV2::GetShipmentDocumentsResult
                    | (Peddler::Types::ShippingV2::PackageDocumentDetail?, String?, Peddler::Types::ShippingV2::Benefits?) -> Peddler::Types::ShippingV2::GetShipmentDocumentsResult

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetShipmentDocumentsResult

        attr_reader benefits: Peddler::Types::ShippingV2::Benefits?
        attr_reader package_document_detail: Peddler::Types::ShippingV2::PackageDocumentDetail?
        attr_reader shipment_id: String?

        def to_h: () -> { package_document_detail: Peddler::Types::ShippingV2::PackageDocumentDetail?, shipment_id: String?, benefits: Peddler::Types::ShippingV2::Benefits? }
      end

      class GetTrackingResponse < Data
        def self.new: (?payload: Peddler::Types::ShippingV2::GetTrackingResult?) -> Peddler::Types::ShippingV2::GetTrackingResponse
                    | (Peddler::Types::ShippingV2::GetTrackingResult?) -> Peddler::Types::ShippingV2::GetTrackingResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetTrackingResponse

        attr_reader payload: Peddler::Types::ShippingV2::GetTrackingResult?

        def to_h: () -> { payload: Peddler::Types::ShippingV2::GetTrackingResult? }
      end

      class GetTrackingResult < Data
        def self.new: (alternate_leg_tracking_id: String?, event_history: Array[Peddler::Types::ShippingV2::Event]?, promised_delivery_date: String?, summary: Peddler::Types::ShippingV2::TrackingSummary?, tracking_id: String?) -> Peddler::Types::ShippingV2::GetTrackingResult
                    | (String?, Array[Peddler::Types::ShippingV2::Event]?, String?, Peddler::Types::ShippingV2::TrackingSummary?, String?) -> Peddler::Types::ShippingV2::GetTrackingResult

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetTrackingResult

        attr_reader alternate_leg_tracking_id: String?
        attr_reader event_history: Array[Peddler::Types::ShippingV2::Event]?
        attr_reader promised_delivery_date: String?
        attr_reader summary: Peddler::Types::ShippingV2::TrackingSummary?
        attr_reader tracking_id: String?

        def to_h: () -> { alternate_leg_tracking_id: String?, event_history: Array[Peddler::Types::ShippingV2::Event]?, promised_delivery_date: String?, summary: Peddler::Types::ShippingV2::TrackingSummary?, tracking_id: String? }
      end

      class GetUnmanifestedShipmentsRequest < Data
        def self.new: (?client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?) -> Peddler::Types::ShippingV2::GetUnmanifestedShipmentsRequest
                    | (Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?) -> Peddler::Types::ShippingV2::GetUnmanifestedShipmentsRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetUnmanifestedShipmentsRequest

        attr_reader client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?

        def to_h: () -> { client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]? }
      end

      class GetUnmanifestedShipmentsResponse < Data
        def self.new: (?unmanifested_carrier_information_list: Array[Peddler::Types::ShippingV2::UnmanifestedCarrierInformation]?) -> Peddler::Types::ShippingV2::GetUnmanifestedShipmentsResponse
                    | (Array[Peddler::Types::ShippingV2::UnmanifestedCarrierInformation]?) -> Peddler::Types::ShippingV2::GetUnmanifestedShipmentsResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GetUnmanifestedShipmentsResponse

        attr_reader unmanifested_carrier_information_list: Array[Peddler::Types::ShippingV2::UnmanifestedCarrierInformation]?

        def to_h: () -> { unmanifested_carrier_information_list: Array[Peddler::Types::ShippingV2::UnmanifestedCarrierInformation]? }
      end

      class GoodsOwner < Data
        def self.new: (merchant_id: String?) -> Peddler::Types::ShippingV2::GoodsOwner
                    | (String?) -> Peddler::Types::ShippingV2::GoodsOwner

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::GoodsOwner

        attr_reader merchant_id: String?

        def to_h: () -> { merchant_id: String? }
      end

      class IncludedBenefits < Array[untyped]
        def self.parse: (Array[untyped]) -> IncludedBenefits
      end

      class IneligibilityReason < Data
        def self.new: (code: String?, message: String?) -> Peddler::Types::ShippingV2::IneligibilityReason
                    | (String?, String?) -> Peddler::Types::ShippingV2::IneligibilityReason

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::IneligibilityReason

        attr_reader code: String?
        attr_reader message: String?

        def to_h: () -> { code: String?, message: String? }
      end

      class IneligibleRate < Data
        def self.new: (carrier_id: String?, carrier_name: String?, ineligibility_reasons: Array[Peddler::Types::ShippingV2::IneligibilityReason]?, service_id: String?, service_name: String?) -> Peddler::Types::ShippingV2::IneligibleRate
                    | (String?, String?, Array[Peddler::Types::ShippingV2::IneligibilityReason]?, String?, String?) -> Peddler::Types::ShippingV2::IneligibleRate

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::IneligibleRate

        attr_reader carrier_id: String?
        attr_reader carrier_name: String?
        attr_reader ineligibility_reasons: Array[Peddler::Types::ShippingV2::IneligibilityReason]?
        attr_reader service_id: String?
        attr_reader service_name: String?

        def to_h: () -> { carrier_id: String?, carrier_name: String?, ineligibility_reasons: Array[Peddler::Types::ShippingV2::IneligibilityReason]?, service_id: String?, service_name: String? }
      end

      class IneligibleRateList < Array[IneligibleRate]
        def self.parse: (Array[untyped]) -> IneligibleRateList
      end

      class InvoiceDetails < Data
        def self.new: (?invoice_date: String?, ?invoice_number: String?) -> Peddler::Types::ShippingV2::InvoiceDetails
                    | (String?, String?) -> Peddler::Types::ShippingV2::InvoiceDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::InvoiceDetails

        attr_reader invoice_date: String?
        attr_reader invoice_number: String?

        def to_h: () -> { invoice_date: String?, invoice_number: String? }
      end

      class Item < Data
        def self.new: (quantity: Integer?, ?dangerous_goods_details: Peddler::Types::ShippingV2::DangerousGoodsDetails?, ?description: String?, ?direct_fulfillment_item_identifiers: Peddler::Types::ShippingV2::DirectFulfillmentItemIdentifiers?, ?invoice_details: Peddler::Types::ShippingV2::InvoiceDetails?, ?hazmat: bool?, ?item_identifier: String?, ?item_value: Peddler::Types::Money?, ?liquid_volume: Peddler::Types::ShippingV2::LiquidVolume?, ?product_type: String?, ?serial_numbers: Array[String]?, ?weight: Peddler::Types::ShippingV2::Weight?) -> Peddler::Types::ShippingV2::Item
                    | (Integer?, Peddler::Types::ShippingV2::DangerousGoodsDetails?, String?, Peddler::Types::ShippingV2::DirectFulfillmentItemIdentifiers?, Peddler::Types::ShippingV2::InvoiceDetails?, bool?, String?, Peddler::Types::Money?, Peddler::Types::ShippingV2::LiquidVolume?, String?, Array[String]?, Peddler::Types::ShippingV2::Weight?) -> Peddler::Types::ShippingV2::Item

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Item

        attr_reader dangerous_goods_details: Peddler::Types::ShippingV2::DangerousGoodsDetails?
        attr_reader description: String?
        attr_reader direct_fulfillment_item_identifiers: Peddler::Types::ShippingV2::DirectFulfillmentItemIdentifiers?

        attr_reader hazmat: bool?
        attr_reader invoice_details: Peddler::Types::ShippingV2::InvoiceDetails?

        attr_reader item_identifier: String?
        attr_reader item_value: Peddler::Types::Money?
        attr_reader liquid_volume: Peddler::Types::ShippingV2::LiquidVolume?
        attr_reader product_type: String?
        attr_reader quantity: Integer?

        attr_reader serial_numbers: Array[String]?
        attr_reader weight: Peddler::Types::ShippingV2::Weight?

        def hazmat?: () -> bool
        def to_h: () -> { quantity: Integer?, dangerous_goods_details: Peddler::Types::ShippingV2::DangerousGoodsDetails?, description: String?, direct_fulfillment_item_identifiers: Peddler::Types::ShippingV2::DirectFulfillmentItemIdentifiers?, invoice_details: Peddler::Types::ShippingV2::InvoiceDetails?, hazmat: bool?, item_identifier: String?, item_value: Peddler::Types::Money?, liquid_volume: Peddler::Types::ShippingV2::LiquidVolume?, product_type: String?, serial_numbers: Array[String]?, weight: Peddler::Types::ShippingV2::Weight? }
      end

      class ItemList < Array[Item]
        def self.parse: (Array[untyped]) -> ItemList
      end

      class LinkCarrierAccountRequest < Data
        def self.new: (carrier_account_attributes: Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]?, carrier_account_type: String?, ?client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, ?encrypted_carrier_account_attributes: Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]?) -> Peddler::Types::ShippingV2::LinkCarrierAccountRequest
                    | (Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]?, String?, Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]?) -> Peddler::Types::ShippingV2::LinkCarrierAccountRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::LinkCarrierAccountRequest

        attr_reader carrier_account_attributes: Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]?
        attr_reader carrier_account_type: String?
        attr_reader client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?
        attr_reader encrypted_carrier_account_attributes: Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]?

        def to_h: () -> { carrier_account_attributes: Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]?, carrier_account_type: String?, client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?, encrypted_carrier_account_attributes: Array[Peddler::Types::ShippingV2::CarrierAccountAttribute]? }
      end

      class LinkCarrierAccountResponse < Data
        def self.new: (?account_id: String?, ?registration_status: String?) -> Peddler::Types::ShippingV2::LinkCarrierAccountResponse
                    | (String?, String?) -> Peddler::Types::ShippingV2::LinkCarrierAccountResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::LinkCarrierAccountResponse

        attr_reader account_id: String?
        attr_reader registration_status: String?

        def to_h: () -> { account_id: String?, registration_status: String? }
      end

      class LinkableAccountType < Data
        def self.new: (?account_type: String?, ?carrier_account_inputs: Array[Peddler::Types::ShippingV2::CarrierAccountInput]?) -> Peddler::Types::ShippingV2::LinkableAccountType
                    | (String?, Array[Peddler::Types::ShippingV2::CarrierAccountInput]?) -> Peddler::Types::ShippingV2::LinkableAccountType

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::LinkableAccountType

        attr_reader account_type: String?
        attr_reader carrier_account_inputs: Array[Peddler::Types::ShippingV2::CarrierAccountInput]?

        def to_h: () -> { account_type: String?, carrier_account_inputs: Array[Peddler::Types::ShippingV2::CarrierAccountInput]? }
      end

      class LinkableAccountTypeList < Array[LinkableAccountType]
        def self.parse: (Array[untyped]) -> LinkableAccountTypeList
      end

      class LinkableCarrier < Data
        def self.new: (?carrier_id: String?, ?linkable_account_types: Array[Peddler::Types::ShippingV2::LinkableAccountType]?) -> Peddler::Types::ShippingV2::LinkableCarrier
                    | (String?, Array[Peddler::Types::ShippingV2::LinkableAccountType]?) -> Peddler::Types::ShippingV2::LinkableCarrier

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::LinkableCarrier

        attr_reader carrier_id: String?
        attr_reader linkable_account_types: Array[Peddler::Types::ShippingV2::LinkableAccountType]?

        def to_h: () -> { carrier_id: String?, linkable_account_types: Array[Peddler::Types::ShippingV2::LinkableAccountType]? }
      end

      class LinkableCarriersList < Array[LinkableCarrier]
        def self.parse: (Array[untyped]) -> LinkableCarriersList
      end

      class LiquidVolume < Data
        def self.new: (unit: String?, value: Float?) -> Peddler::Types::ShippingV2::LiquidVolume
                    | (String?, Float?) -> Peddler::Types::ShippingV2::LiquidVolume

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::LiquidVolume

        attr_reader unit: String?
        attr_reader value: Float?

        def to_h: () -> { unit: String?, value: Float? }
      end

      class Location < Data
        def self.new: (?city: String?, ?country_code: String?, ?postal_code: String?, ?state_or_region: String?) -> Peddler::Types::ShippingV2::Location
                    | (String?, String?, String?, String?) -> Peddler::Types::ShippingV2::Location

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Location

        attr_reader city: String?
        attr_reader country_code: String?
        attr_reader postal_code: String?
        attr_reader state_or_region: String?

        def to_h: () -> { city: String?, country_code: String?, postal_code: String?, state_or_region: String? }
      end

      class NdrRequestData < Data
        def self.new: (?additional_address_notes: String?, ?reschedule_date: String?) -> Peddler::Types::ShippingV2::NdrRequestData
                    | (String?, String?) -> Peddler::Types::ShippingV2::NdrRequestData

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::NdrRequestData

        attr_reader additional_address_notes: String?
        attr_reader reschedule_date: String?

        def to_h: () -> { additional_address_notes: String?, reschedule_date: String? }
      end

      class OneClickShipmentRequest < Data
        def self.new: (channel_details: Peddler::Types::ShippingV2::ChannelDetails?, label_specifications: Peddler::Types::ShippingV2::RequestedDocumentSpecification?, packages: Array[Peddler::Types::ShippingV2::Package]?, service_selection: Peddler::Types::ShippingV2::ServiceSelection?, ship_from: Peddler::Types::ShippingV2::Address?, ?destination_access_point_details: Peddler::Types::ShippingV2::AccessPointDetails?, ?goods_owner: Peddler::Types::ShippingV2::GoodsOwner?, ?return_to: Peddler::Types::ShippingV2::Address?, ?ship_date: String?, ?ship_to: Peddler::Types::ShippingV2::Address?, ?shipper_instruction: Peddler::Types::ShippingV2::ShipperInstruction?, ?tax_details: Array[Peddler::Types::ShippingV2::TaxDetail]?, ?value_added_services_details: Array[Peddler::Types::ShippingV2::OneClickShipmentValueAddedService]?) -> Peddler::Types::ShippingV2::OneClickShipmentRequest
                    | (Peddler::Types::ShippingV2::ChannelDetails?, Peddler::Types::ShippingV2::RequestedDocumentSpecification?, Array[Peddler::Types::ShippingV2::Package]?, Peddler::Types::ShippingV2::ServiceSelection?, Peddler::Types::ShippingV2::Address?, Peddler::Types::ShippingV2::AccessPointDetails?, Peddler::Types::ShippingV2::GoodsOwner?, Peddler::Types::ShippingV2::Address?, String?, Peddler::Types::ShippingV2::Address?, Peddler::Types::ShippingV2::ShipperInstruction?, Array[Peddler::Types::ShippingV2::TaxDetail]?, Array[Peddler::Types::ShippingV2::OneClickShipmentValueAddedService]?) -> Peddler::Types::ShippingV2::OneClickShipmentRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::OneClickShipmentRequest

        attr_reader channel_details: Peddler::Types::ShippingV2::ChannelDetails?

        attr_reader destination_access_point_details: Peddler::Types::ShippingV2::AccessPointDetails?
        attr_reader goods_owner: Peddler::Types::ShippingV2::GoodsOwner?
        attr_reader label_specifications: Peddler::Types::ShippingV2::RequestedDocumentSpecification?
        attr_reader packages: Array[Peddler::Types::ShippingV2::Package]?

        attr_reader return_to: Peddler::Types::ShippingV2::Address?
        attr_reader service_selection: Peddler::Types::ShippingV2::ServiceSelection?

        attr_reader ship_date: String?
        attr_reader ship_from: Peddler::Types::ShippingV2::Address?

        attr_reader ship_to: Peddler::Types::ShippingV2::Address?
        attr_reader shipper_instruction: Peddler::Types::ShippingV2::ShipperInstruction?
        attr_reader tax_details: Array[Peddler::Types::ShippingV2::TaxDetail]?
        attr_reader value_added_services_details: Array[Peddler::Types::ShippingV2::OneClickShipmentValueAddedService]?

        def to_h: () -> { channel_details: Peddler::Types::ShippingV2::ChannelDetails?, label_specifications: Peddler::Types::ShippingV2::RequestedDocumentSpecification?, packages: Array[Peddler::Types::ShippingV2::Package]?, service_selection: Peddler::Types::ShippingV2::ServiceSelection?, ship_from: Peddler::Types::ShippingV2::Address?, destination_access_point_details: Peddler::Types::ShippingV2::AccessPointDetails?, goods_owner: Peddler::Types::ShippingV2::GoodsOwner?, return_to: Peddler::Types::ShippingV2::Address?, ship_date: String?, ship_to: Peddler::Types::ShippingV2::Address?, shipper_instruction: Peddler::Types::ShippingV2::ShipperInstruction?, tax_details: Array[Peddler::Types::ShippingV2::TaxDetail]?, value_added_services_details: Array[Peddler::Types::ShippingV2::OneClickShipmentValueAddedService]? }
      end

      class OneClickShipmentResponse < Data
        def self.new: (?payload: Peddler::Types::ShippingV2::OneClickShipmentResult?) -> Peddler::Types::ShippingV2::OneClickShipmentResponse
                    | (Peddler::Types::ShippingV2::OneClickShipmentResult?) -> Peddler::Types::ShippingV2::OneClickShipmentResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::OneClickShipmentResponse

        attr_reader payload: Peddler::Types::ShippingV2::OneClickShipmentResult?

        def to_h: () -> { payload: Peddler::Types::ShippingV2::OneClickShipmentResult? }
      end

      class OneClickShipmentResult < Data
        def self.new: (carrier: Peddler::Types::ShippingV2::Carrier?, package_document_details: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?, promise: Peddler::Types::ShippingV2::Promise?, service: Peddler::Types::ShippingV2::Service?, shipment_id: String?, total_charge: Peddler::Types::Money?) -> Peddler::Types::ShippingV2::OneClickShipmentResult
                    | (Peddler::Types::ShippingV2::Carrier?, Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?, Peddler::Types::ShippingV2::Promise?, Peddler::Types::ShippingV2::Service?, String?, Peddler::Types::Money?) -> Peddler::Types::ShippingV2::OneClickShipmentResult

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::OneClickShipmentResult

        attr_reader carrier: Peddler::Types::ShippingV2::Carrier?
        attr_reader package_document_details: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?
        attr_reader promise: Peddler::Types::ShippingV2::Promise?
        attr_reader service: Peddler::Types::ShippingV2::Service?
        attr_reader shipment_id: String?
        attr_reader total_charge: Peddler::Types::Money?

        def to_h: () -> { carrier: Peddler::Types::ShippingV2::Carrier?, package_document_details: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?, promise: Peddler::Types::ShippingV2::Promise?, service: Peddler::Types::ShippingV2::Service?, shipment_id: String?, total_charge: Peddler::Types::Money? }
      end

      class OneClickShipmentValueAddedService < Data
        def self.new: (id: String?, ?amount: Peddler::Types::Money?) -> Peddler::Types::ShippingV2::OneClickShipmentValueAddedService
                    | (String?, Peddler::Types::Money?) -> Peddler::Types::ShippingV2::OneClickShipmentValueAddedService

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::OneClickShipmentValueAddedService

        attr_reader amount: Peddler::Types::Money?
        attr_reader id: String?

        def to_h: () -> { id: String?, amount: Peddler::Types::Money? }
      end

      class OneClickShipmentValueAddedServiceDetails < Array[OneClickShipmentValueAddedService]
        def self.parse: (Array[untyped]) -> OneClickShipmentValueAddedServiceDetails
      end

      class OperatingHours < Data
        def self.new: (?closing_time: Peddler::Types::ShippingV2::TimeOfDay?, ?mid_day_closures: Array[Peddler::Types::ShippingV2::TimeOfDay]?, ?opening_time: Peddler::Types::ShippingV2::TimeOfDay?) -> Peddler::Types::ShippingV2::OperatingHours
                    | (Peddler::Types::ShippingV2::TimeOfDay?, Array[Peddler::Types::ShippingV2::TimeOfDay]?, Peddler::Types::ShippingV2::TimeOfDay?) -> Peddler::Types::ShippingV2::OperatingHours

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::OperatingHours

        attr_reader closing_time: Peddler::Types::ShippingV2::TimeOfDay?
        attr_reader mid_day_closures: Array[Peddler::Types::ShippingV2::TimeOfDay]?
        attr_reader opening_time: Peddler::Types::ShippingV2::TimeOfDay?

        def to_h: () -> { closing_time: Peddler::Types::ShippingV2::TimeOfDay?, mid_day_closures: Array[Peddler::Types::ShippingV2::TimeOfDay]?, opening_time: Peddler::Types::ShippingV2::TimeOfDay? }
      end

      class Package < Data
        def self.new: (dimensions: Peddler::Types::ShippingV2::Dimensions?, insured_value: Peddler::Types::Money?, items: Array[Peddler::Types::ShippingV2::Item]?, package_client_reference_id: String?, weight: Peddler::Types::ShippingV2::Weight?, ?charges: Array[Peddler::Types::ShippingV2::ChargeComponent]?, ?hazmat: bool?, ?seller_display_name: String?) -> Peddler::Types::ShippingV2::Package
                    | (Peddler::Types::ShippingV2::Dimensions?, Peddler::Types::Money?, Array[Peddler::Types::ShippingV2::Item]?, String?, Peddler::Types::ShippingV2::Weight?, Array[Peddler::Types::ShippingV2::ChargeComponent]?, bool?, String?) -> Peddler::Types::ShippingV2::Package

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Package

        attr_reader charges: Array[Peddler::Types::ShippingV2::ChargeComponent]?
        attr_reader dimensions: Peddler::Types::ShippingV2::Dimensions?

        attr_reader hazmat: bool?
        attr_reader insured_value: Peddler::Types::Money?
        attr_reader items: Array[Peddler::Types::ShippingV2::Item]?
        attr_reader package_client_reference_id: String?

        attr_reader seller_display_name: String?
        attr_reader weight: Peddler::Types::ShippingV2::Weight?

        def hazmat?: () -> bool
        def to_h: () -> { dimensions: Peddler::Types::ShippingV2::Dimensions?, insured_value: Peddler::Types::Money?, items: Array[Peddler::Types::ShippingV2::Item]?, package_client_reference_id: String?, weight: Peddler::Types::ShippingV2::Weight?, charges: Array[Peddler::Types::ShippingV2::ChargeComponent]?, hazmat: bool?, seller_display_name: String? }
      end

      class PackageDocument < Data
        def self.new: (contents: String?, format: String?, type: String?) -> Peddler::Types::ShippingV2::PackageDocument
                    | (String?, String?, String?) -> Peddler::Types::ShippingV2::PackageDocument

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::PackageDocument

        attr_reader contents: String?
        attr_reader format: String?
        attr_reader type: String?

        def to_h: () -> { contents: String?, format: String?, type: String? }
      end

      class PackageDocumentDetail < Data
        def self.new: (package_client_reference_id: String?, package_documents: Array[Peddler::Types::ShippingV2::PackageDocument]?, ?tracking_id: String?) -> Peddler::Types::ShippingV2::PackageDocumentDetail
                    | (String?, Array[Peddler::Types::ShippingV2::PackageDocument]?, String?) -> Peddler::Types::ShippingV2::PackageDocumentDetail

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::PackageDocumentDetail

        attr_reader package_client_reference_id: String?
        attr_reader package_documents: Array[Peddler::Types::ShippingV2::PackageDocument]?
        attr_reader tracking_id: String?

        def to_h: () -> { package_client_reference_id: String?, package_documents: Array[Peddler::Types::ShippingV2::PackageDocument]?, tracking_id: String? }
      end

      class PackageDocumentDetailList < Array[PackageDocumentDetail]
        def self.parse: (Array[untyped]) -> PackageDocumentDetailList
      end

      class PackageDocumentList < Array[PackageDocument]
        def self.parse: (Array[untyped]) -> PackageDocumentList
      end

      class PackageList < Array[Package]
        def self.parse: (Array[untyped]) -> PackageList
      end

      class PrintOption < Data
        def self.new: (supported_document_details: Array[Peddler::Types::ShippingV2::SupportedDocumentDetail]?, supported_file_joining_options: Array[untyped]?, supported_page_layouts: Array[untyped]?, ?supported_dp_is: Array[untyped]?) -> Peddler::Types::ShippingV2::PrintOption
                    | (Array[Peddler::Types::ShippingV2::SupportedDocumentDetail]?, Array[untyped]?, Array[untyped]?, Array[untyped]?) -> Peddler::Types::ShippingV2::PrintOption

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::PrintOption

        attr_reader supported_document_details: Array[Peddler::Types::ShippingV2::SupportedDocumentDetail]?

        attr_reader supported_dp_is: Array[untyped]?
        attr_reader supported_file_joining_options: Array[untyped]?
        attr_reader supported_page_layouts: Array[untyped]?

        def to_h: () -> { supported_document_details: Array[Peddler::Types::ShippingV2::SupportedDocumentDetail]?, supported_file_joining_options: Array[untyped]?, supported_page_layouts: Array[untyped]?, supported_dp_is: Array[untyped]? }
      end

      class PrintOptionList < Array[PrintOption]
        def self.parse: (Array[untyped]) -> PrintOptionList
      end

      class Promise < Data
        def self.new: (?delivery_window: Peddler::Types::ShippingV2::TimeWindow?, ?pickup_window: Peddler::Types::ShippingV2::TimeWindow?) -> Peddler::Types::ShippingV2::Promise
                    | (Peddler::Types::ShippingV2::TimeWindow?, Peddler::Types::ShippingV2::TimeWindow?) -> Peddler::Types::ShippingV2::Promise

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Promise

        attr_reader delivery_window: Peddler::Types::ShippingV2::TimeWindow?
        attr_reader pickup_window: Peddler::Types::ShippingV2::TimeWindow?

        def to_h: () -> { delivery_window: Peddler::Types::ShippingV2::TimeWindow?, pickup_window: Peddler::Types::ShippingV2::TimeWindow? }
      end

      class PurchaseShipmentRequest < Data
        def self.new: (rate_id: String?, request_token: String?, requested_document_specification: Peddler::Types::ShippingV2::RequestedDocumentSpecification?, ?additional_inputs: Hash[untyped, untyped]?, ?requested_value_added_services: Array[Peddler::Types::ShippingV2::RequestedValueAddedService]?) -> Peddler::Types::ShippingV2::PurchaseShipmentRequest
                    | (String?, String?, Peddler::Types::ShippingV2::RequestedDocumentSpecification?, Hash[untyped, untyped]?, Array[Peddler::Types::ShippingV2::RequestedValueAddedService]?) -> Peddler::Types::ShippingV2::PurchaseShipmentRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::PurchaseShipmentRequest

        attr_reader additional_inputs: Hash[untyped, untyped]?
        attr_reader rate_id: String?
        attr_reader request_token: String?
        attr_reader requested_document_specification: Peddler::Types::ShippingV2::RequestedDocumentSpecification?

        attr_reader requested_value_added_services: Array[Peddler::Types::ShippingV2::RequestedValueAddedService]?

        def to_h: () -> { rate_id: String?, request_token: String?, requested_document_specification: Peddler::Types::ShippingV2::RequestedDocumentSpecification?, additional_inputs: Hash[untyped, untyped]?, requested_value_added_services: Array[Peddler::Types::ShippingV2::RequestedValueAddedService]? }
      end

      class PurchaseShipmentResponse < Data
        def self.new: (?payload: Peddler::Types::ShippingV2::PurchaseShipmentResult?) -> Peddler::Types::ShippingV2::PurchaseShipmentResponse
                    | (Peddler::Types::ShippingV2::PurchaseShipmentResult?) -> Peddler::Types::ShippingV2::PurchaseShipmentResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::PurchaseShipmentResponse

        attr_reader payload: Peddler::Types::ShippingV2::PurchaseShipmentResult?

        def to_h: () -> { payload: Peddler::Types::ShippingV2::PurchaseShipmentResult? }
      end

      class PurchaseShipmentResult < Data
        def self.new: (package_document_details: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?, promise: Peddler::Types::ShippingV2::Promise?, shipment_id: String?, ?benefits: Peddler::Types::ShippingV2::Benefits?) -> Peddler::Types::ShippingV2::PurchaseShipmentResult
                    | (Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?, Peddler::Types::ShippingV2::Promise?, String?, Peddler::Types::ShippingV2::Benefits?) -> Peddler::Types::ShippingV2::PurchaseShipmentResult

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::PurchaseShipmentResult

        attr_reader benefits: Peddler::Types::ShippingV2::Benefits?
        attr_reader package_document_details: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?
        attr_reader promise: Peddler::Types::ShippingV2::Promise?
        attr_reader shipment_id: String?

        def to_h: () -> { package_document_details: Array[Peddler::Types::ShippingV2::PackageDocumentDetail]?, promise: Peddler::Types::ShippingV2::Promise?, shipment_id: String?, benefits: Peddler::Types::ShippingV2::Benefits? }
      end

      class Rate < Data
        def self.new: (carrier_id: String?, carrier_name: String?, promise: Peddler::Types::ShippingV2::Promise?, rate_id: String?, requires_additional_inputs: bool?, service_id: String?, service_name: String?, supported_document_specifications: Array[Peddler::Types::ShippingV2::SupportedDocumentSpecification]?, total_charge: Peddler::Types::Money?, ?available_value_added_service_groups: Array[Peddler::Types::ShippingV2::AvailableValueAddedServiceGroup]?, ?benefits: Peddler::Types::ShippingV2::Benefits?, ?billed_weight: Peddler::Types::ShippingV2::Weight?, ?payment_type: String?, ?rate_item_list: Array[Peddler::Types::ShippingV2::RateItem]?) -> Peddler::Types::ShippingV2::Rate
                    | (String?, String?, Peddler::Types::ShippingV2::Promise?, String?, bool?, String?, String?, Array[Peddler::Types::ShippingV2::SupportedDocumentSpecification]?, Peddler::Types::Money?, Array[Peddler::Types::ShippingV2::AvailableValueAddedServiceGroup]?, Peddler::Types::ShippingV2::Benefits?, Peddler::Types::ShippingV2::Weight?, String?, Array[Peddler::Types::ShippingV2::RateItem]?) -> Peddler::Types::ShippingV2::Rate

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Rate

        attr_reader available_value_added_service_groups: Array[Peddler::Types::ShippingV2::AvailableValueAddedServiceGroup]?
        attr_reader benefits: Peddler::Types::ShippingV2::Benefits?
        attr_reader billed_weight: Peddler::Types::ShippingV2::Weight?
        attr_reader carrier_id: String?
        attr_reader carrier_name: String?

        attr_reader payment_type: String?
        attr_reader promise: Peddler::Types::ShippingV2::Promise?
        attr_reader rate_id: String?

        attr_reader rate_item_list: Array[Peddler::Types::ShippingV2::RateItem]?
        attr_reader requires_additional_inputs: bool?
        attr_reader service_id: String?
        attr_reader service_name: String?
        attr_reader supported_document_specifications: Array[Peddler::Types::ShippingV2::SupportedDocumentSpecification]?
        attr_reader total_charge: Peddler::Types::Money?

        def requires_additional_inputs?: () -> bool
        def to_h: () -> { carrier_id: String?, carrier_name: String?, promise: Peddler::Types::ShippingV2::Promise?, rate_id: String?, requires_additional_inputs: bool?, service_id: String?, service_name: String?, supported_document_specifications: Array[Peddler::Types::ShippingV2::SupportedDocumentSpecification]?, total_charge: Peddler::Types::Money?, available_value_added_service_groups: Array[Peddler::Types::ShippingV2::AvailableValueAddedServiceGroup]?, benefits: Peddler::Types::ShippingV2::Benefits?, billed_weight: Peddler::Types::ShippingV2::Weight?, payment_type: String?, rate_item_list: Array[Peddler::Types::ShippingV2::RateItem]? }
      end

      class RateItem < Data
        def self.new: (?rate_item_charge: Peddler::Types::Money?, ?rate_item_id: String?, ?rate_item_name_localization: String?, ?rate_item_type: String?) -> Peddler::Types::ShippingV2::RateItem
                    | (Peddler::Types::Money?, String?, String?, String?) -> Peddler::Types::ShippingV2::RateItem

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::RateItem

        attr_reader rate_item_charge: Peddler::Types::Money?
        attr_reader rate_item_id: String?
        attr_reader rate_item_name_localization: String?
        attr_reader rate_item_type: String?

        def to_h: () -> { rate_item_charge: Peddler::Types::Money?, rate_item_id: String?, rate_item_name_localization: String?, rate_item_type: String? }
      end

      class RateItemList < Array[RateItem]
        def self.parse: (Array[untyped]) -> RateItemList
      end

      class RateList < Array[Rate]
        def self.parse: (Array[untyped]) -> RateList
      end

      class RequestAttributes < Array[untyped]
        def self.parse: (Array[untyped]) -> RequestAttributes
      end

      class RequestedDocumentSpecification < Data
        def self.new: (format: String?, need_file_joining: bool?, requested_document_types: Array[untyped]?, size: Peddler::Types::ShippingV2::DocumentSize?, ?dpi: Integer?, ?page_layout: String?, ?requested_label_customization: Peddler::Types::ShippingV2::RequestedLabelCustomization?) -> Peddler::Types::ShippingV2::RequestedDocumentSpecification
                    | (String?, bool?, Array[untyped]?, Peddler::Types::ShippingV2::DocumentSize?, Integer?, String?, Peddler::Types::ShippingV2::RequestedLabelCustomization?) -> Peddler::Types::ShippingV2::RequestedDocumentSpecification

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::RequestedDocumentSpecification

        attr_reader dpi: Integer?
        attr_reader format: String?
        attr_reader need_file_joining: bool?

        attr_reader page_layout: String?
        attr_reader requested_document_types: Array[untyped]?

        attr_reader requested_label_customization: Peddler::Types::ShippingV2::RequestedLabelCustomization?
        attr_reader size: Peddler::Types::ShippingV2::DocumentSize?

        def need_file_joining?: () -> bool
        def to_h: () -> { format: String?, need_file_joining: bool?, requested_document_types: Array[untyped]?, size: Peddler::Types::ShippingV2::DocumentSize?, dpi: Integer?, page_layout: String?, requested_label_customization: Peddler::Types::ShippingV2::RequestedLabelCustomization? }
      end

      class RequestedLabelCustomization < Data
        def self.new: (?request_attributes: Array[untyped]?) -> Peddler::Types::ShippingV2::RequestedLabelCustomization
                    | (Array[untyped]?) -> Peddler::Types::ShippingV2::RequestedLabelCustomization

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::RequestedLabelCustomization

        attr_reader request_attributes: Array[untyped]?

        def to_h: () -> { request_attributes: Array[untyped]? }
      end

      class RequestedValueAddedService < Data
        def self.new: (id: String?) -> Peddler::Types::ShippingV2::RequestedValueAddedService
                    | (String?) -> Peddler::Types::ShippingV2::RequestedValueAddedService

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::RequestedValueAddedService

        attr_reader id: String?

        def to_h: () -> { id: String? }
      end

      class RequestedValueAddedServiceList < Array[RequestedValueAddedService]
        def self.parse: (Array[untyped]) -> RequestedValueAddedServiceList
      end

      class Service < Data
        def self.new: (id: String?, name: String?) -> Peddler::Types::ShippingV2::Service
                    | (String?, String?) -> Peddler::Types::ShippingV2::Service

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Service

        attr_reader id: String?
        attr_reader name: String?

        def to_h: () -> { id: String?, name: String? }
      end

      class ServiceIds < Array[untyped]
        def self.parse: (Array[untyped]) -> ServiceIds
      end

      class ServiceSelection < Data
        def self.new: (service_id: Array[String]?) -> Peddler::Types::ShippingV2::ServiceSelection
                    | (Array[String]?) -> Peddler::Types::ShippingV2::ServiceSelection

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ServiceSelection

        attr_reader service_id: Array[String]?

        def to_h: () -> { service_id: Array[String]? }
      end

      class ShipperInstruction < Data
        def self.new: (?delivery_notes: String?) -> Peddler::Types::ShippingV2::ShipperInstruction
                    | (String?) -> Peddler::Types::ShippingV2::ShipperInstruction

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ShipperInstruction

        attr_reader delivery_notes: String?

        def to_h: () -> { delivery_notes: String? }
      end

      class SubmitNdrFeedbackRequest < Data
        def self.new: (ndr_action: String?, tracking_id: String?, ?ndr_request_data: Peddler::Types::ShippingV2::NdrRequestData?) -> Peddler::Types::ShippingV2::SubmitNdrFeedbackRequest
                    | (String?, String?, Peddler::Types::ShippingV2::NdrRequestData?) -> Peddler::Types::ShippingV2::SubmitNdrFeedbackRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::SubmitNdrFeedbackRequest

        attr_reader ndr_action: String?

        attr_reader ndr_request_data: Peddler::Types::ShippingV2::NdrRequestData?
        attr_reader tracking_id: String?

        def to_h: () -> { ndr_action: String?, tracking_id: String?, ndr_request_data: Peddler::Types::ShippingV2::NdrRequestData? }
      end

      class SupportedDocumentDetail < Data
        def self.new: (mandatory: bool?, name: String?) -> Peddler::Types::ShippingV2::SupportedDocumentDetail
                    | (bool?, String?) -> Peddler::Types::ShippingV2::SupportedDocumentDetail

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::SupportedDocumentDetail

        attr_reader mandatory: bool?
        attr_reader name: String?

        def mandatory?: () -> bool
        def to_h: () -> { mandatory: bool?, name: String? }
      end

      class SupportedDocumentSpecification < Data
        def self.new: (format: String?, print_options: Array[Peddler::Types::ShippingV2::PrintOption]?, size: Peddler::Types::ShippingV2::DocumentSize?) -> Peddler::Types::ShippingV2::SupportedDocumentSpecification
                    | (String?, Array[Peddler::Types::ShippingV2::PrintOption]?, Peddler::Types::ShippingV2::DocumentSize?) -> Peddler::Types::ShippingV2::SupportedDocumentSpecification

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::SupportedDocumentSpecification

        attr_reader format: String?
        attr_reader print_options: Array[Peddler::Types::ShippingV2::PrintOption]?
        attr_reader size: Peddler::Types::ShippingV2::DocumentSize?

        def to_h: () -> { format: String?, print_options: Array[Peddler::Types::ShippingV2::PrintOption]?, size: Peddler::Types::ShippingV2::DocumentSize? }
      end

      class SupportedDocumentSpecificationList < Array[SupportedDocumentSpecification]
        def self.parse: (Array[untyped]) -> SupportedDocumentSpecificationList
      end

      class TaxDetail < Data
        def self.new: (tax_registration_number: String?, tax_type: String?) -> Peddler::Types::ShippingV2::TaxDetail
                    | (String?, String?) -> Peddler::Types::ShippingV2::TaxDetail

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::TaxDetail

        attr_reader tax_registration_number: String?
        attr_reader tax_type: String?

        def to_h: () -> { tax_registration_number: String?, tax_type: String? }
      end

      class TaxDetailList < Array[TaxDetail]
        def self.parse: (Array[untyped]) -> TaxDetailList
      end

      class TimeOfDay < Data
        def self.new: (?hour_of_day: Integer?, ?minute_of_hour: Integer?, ?second_of_minute: Integer?) -> Peddler::Types::ShippingV2::TimeOfDay
                    | (Integer?, Integer?, Integer?) -> Peddler::Types::ShippingV2::TimeOfDay

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::TimeOfDay

        attr_reader hour_of_day: Integer?
        attr_reader minute_of_hour: Integer?
        attr_reader second_of_minute: Integer?

        def to_h: () -> { hour_of_day: Integer?, minute_of_hour: Integer?, second_of_minute: Integer? }
      end

      class TimeWindow < Data
        def self.new: (?end: String?, ?start: String?) -> Peddler::Types::ShippingV2::TimeWindow
                    | (String?, String?) -> Peddler::Types::ShippingV2::TimeWindow

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::TimeWindow

        attr_reader end: String?
        attr_reader start: String?

        def to_h: () -> { end: String?, start: String? }
      end

      class TrackingDetailCodes < Data
        def self.new: (forward: Array[untyped]?, returns: Array[untyped]?) -> Peddler::Types::ShippingV2::TrackingDetailCodes
                    | (Array[untyped]?, Array[untyped]?) -> Peddler::Types::ShippingV2::TrackingDetailCodes

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::TrackingDetailCodes

        attr_reader forward: Array[untyped]?
        attr_reader returns: Array[untyped]?

        def to_h: () -> { forward: Array[untyped]?, returns: Array[untyped]? }
      end

      class TrackingSummary < Data
        def self.new: (?status: String?, ?tracking_detail_codes: Peddler::Types::ShippingV2::TrackingDetailCodes?) -> Peddler::Types::ShippingV2::TrackingSummary
                    | (String?, Peddler::Types::ShippingV2::TrackingDetailCodes?) -> Peddler::Types::ShippingV2::TrackingSummary

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::TrackingSummary

        attr_reader status: String?
        attr_reader tracking_detail_codes: Peddler::Types::ShippingV2::TrackingDetailCodes?

        def to_h: () -> { status: String?, tracking_detail_codes: Peddler::Types::ShippingV2::TrackingDetailCodes? }
      end

      class UnlinkCarrierAccountRequest < Data
        def self.new: (?account_id: String?, ?client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?) -> Peddler::Types::ShippingV2::UnlinkCarrierAccountRequest
                    | (String?, Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?) -> Peddler::Types::ShippingV2::UnlinkCarrierAccountRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::UnlinkCarrierAccountRequest

        attr_reader account_id: String?
        attr_reader client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]?

        def to_h: () -> { account_id: String?, client_reference_details: Array[Peddler::Types::ShippingV2::ClientReferenceDetail]? }
      end

      class UnlinkCarrierAccountResponse < Data
        def self.new: (?unlinked: bool?) -> Peddler::Types::ShippingV2::UnlinkCarrierAccountResponse
                    | (bool?) -> Peddler::Types::ShippingV2::UnlinkCarrierAccountResponse

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::UnlinkCarrierAccountResponse

        attr_reader unlinked: bool?

        def to_h: () -> { unlinked: bool? }
        def unlinked?: () -> bool
      end

      class UnmanifestedCarrierInformation < Data
        def self.new: (?carrier_id: String?, ?carrier_name: String?, ?unmanifested_shipment_location_list: Array[Peddler::Types::ShippingV2::UnmanifestedShipmentLocation]?) -> Peddler::Types::ShippingV2::UnmanifestedCarrierInformation
                    | (String?, String?, Array[Peddler::Types::ShippingV2::UnmanifestedShipmentLocation]?) -> Peddler::Types::ShippingV2::UnmanifestedCarrierInformation

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::UnmanifestedCarrierInformation

        attr_reader carrier_id: String?
        attr_reader carrier_name: String?
        attr_reader unmanifested_shipment_location_list: Array[Peddler::Types::ShippingV2::UnmanifestedShipmentLocation]?

        def to_h: () -> { carrier_id: String?, carrier_name: String?, unmanifested_shipment_location_list: Array[Peddler::Types::ShippingV2::UnmanifestedShipmentLocation]? }
      end

      class UnmanifestedCarrierInformationList < Array[UnmanifestedCarrierInformation]
        def self.parse: (Array[untyped]) -> UnmanifestedCarrierInformationList
      end

      class UnmanifestedShipmentLocation < Data
        def self.new: (?address: Peddler::Types::ShippingV2::Address?, ?last_manifest_date: String?) -> Peddler::Types::ShippingV2::UnmanifestedShipmentLocation
                    | (Peddler::Types::ShippingV2::Address?, String?) -> Peddler::Types::ShippingV2::UnmanifestedShipmentLocation

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::UnmanifestedShipmentLocation

        attr_reader address: Peddler::Types::ShippingV2::Address?
        attr_reader last_manifest_date: String?

        def to_h: () -> { address: Peddler::Types::ShippingV2::Address?, last_manifest_date: String? }
      end

      class UnmanifestedShipmentLocationList < Array[UnmanifestedShipmentLocation]
        def self.parse: (Array[untyped]) -> UnmanifestedShipmentLocationList
      end

      class ValidationMetadata < Data
        def self.new: (?error_message: String?, ?validation_strategy: String?, ?value: String?) -> Peddler::Types::ShippingV2::ValidationMetadata
                    | (String?, String?, String?) -> Peddler::Types::ShippingV2::ValidationMetadata

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ValidationMetadata

        attr_reader error_message: String?
        attr_reader validation_strategy: String?
        attr_reader value: String?

        def to_h: () -> { error_message: String?, validation_strategy: String?, value: String? }
      end

      class ValidationMetadataList < Array[ValidationMetadata]
        def self.parse: (Array[untyped]) -> ValidationMetadataList
      end

      class ValueAddedService < Data
        def self.new: (cost: Peddler::Types::Money?, id: String?, name: String?) -> Peddler::Types::ShippingV2::ValueAddedService
                    | (Peddler::Types::Money?, String?, String?) -> Peddler::Types::ShippingV2::ValueAddedService

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ValueAddedService

        attr_reader cost: Peddler::Types::Money?
        attr_reader id: String?
        attr_reader name: String?

        def to_h: () -> { cost: Peddler::Types::Money?, id: String?, name: String? }
      end

      class ValueAddedServiceDetails < Data
        def self.new: (?collect_on_delivery: Peddler::Types::ShippingV2::CollectOnDelivery?) -> Peddler::Types::ShippingV2::ValueAddedServiceDetails
                    | (Peddler::Types::ShippingV2::CollectOnDelivery?) -> Peddler::Types::ShippingV2::ValueAddedServiceDetails

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::ValueAddedServiceDetails

        attr_reader collect_on_delivery: Peddler::Types::ShippingV2::CollectOnDelivery?

        def to_h: () -> { collect_on_delivery: Peddler::Types::ShippingV2::CollectOnDelivery? }
      end

      class Weight < Data
        def self.new: (unit: String?, value: Float?) -> Peddler::Types::ShippingV2::Weight
                    | (String?, Float?) -> Peddler::Types::ShippingV2::Weight

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::ShippingV2::Weight

        attr_reader unit: String?
        attr_reader value: Float?

        def to_h: () -> { unit: String?, value: Float? }
      end
    end
  end
end
