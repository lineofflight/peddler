module Peddler
  module Types
    module NotificationsV1
      class CreateSubscriptionRequest < Data
        def self.new: (destination_id: String?, payload_version: String?, ?processing_directive: Peddler::Types::NotificationsV1::ProcessingDirective?) -> Peddler::Types::NotificationsV1::CreateSubscriptionRequest
                    | (String?, String?, Peddler::Types::NotificationsV1::ProcessingDirective?) -> Peddler::Types::NotificationsV1::CreateSubscriptionRequest

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::Types::NotificationsV1::CreateSubscriptionRequest

        attr_reader destination_id: String?
        attr_reader payload_version: String?
        attr_reader processing_directive: Peddler::Types::NotificationsV1::ProcessingDirective?

        def to_h: () -> { destination_id: String?, payload_version: String?, processing_directive: Peddler::Types::NotificationsV1::ProcessingDirective? }
      end
    end
  end
end
