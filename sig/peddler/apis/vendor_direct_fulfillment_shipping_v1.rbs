module Peddler
  module APIs
    class VendorDirectFulfillmentShippingV1 < API
      class Address < Data
        def self.new: (address_line1: String?, country_code: String?, name: String?, ?address_line2: String?, ?address_line3: String?, ?city: String?, ?county: String?, ?district: String?, ?phone: String?, ?postal_code: String?, ?state_or_region: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Address
                    | (String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Address
        def self.[]: (address_line1: String?, country_code: String?, name: String?, ?address_line2: String?, ?address_line3: String?, ?city: String?, ?county: String?, ?district: String?, ?phone: String?, ?postal_code: String?, ?state_or_region: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Address
                   | (String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Address

        def self.members: () -> [ :address_line1, :country_code, :name, :address_line2, :address_line3, :city, :county, :district, :phone, :postal_code, :state_or_region ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Address

        attr_reader address_line1: String?
        attr_reader address_line2: String?
        attr_reader address_line3: String?
        attr_reader city: String?
        attr_reader country_code: String?
        attr_reader county: String?
        attr_reader district: String?
        attr_reader name: String?
        attr_reader phone: String?
        attr_reader postal_code: String?
        attr_reader state_or_region: String?

        def members: () -> [ :address_line1, :country_code, :name, :address_line2, :address_line3, :city, :county, :district, :phone, :postal_code, :state_or_region ]
        def to_h: () -> { address_line1: String?, country_code: String?, name: String?, address_line2: String?, address_line3: String?, city: String?, county: String?, district: String?, phone: String?, postal_code: String?, state_or_region: String? }
      end

      class Container < Data
        def self.new: (container_identifier: String?, container_type: String?, packed_items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem]?, weight: Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight?, ?carrier: String?, ?container_sequence_number: Integer?, ?dimensions: Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions?, ?manifest_date: String?, ?manifest_id: String?, ?scac_code: String?, ?ship_method: String?, ?tracking_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Container
                    | (String?, String?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight?, String?, Integer?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions?, String?, String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Container
        def self.[]: (container_identifier: String?, container_type: String?, packed_items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem]?, weight: Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight?, ?carrier: String?, ?container_sequence_number: Integer?, ?dimensions: Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions?, ?manifest_date: String?, ?manifest_id: String?, ?scac_code: String?, ?ship_method: String?, ?tracking_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Container
                   | (String?, String?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight?, String?, Integer?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions?, String?, String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Container

        def self.members: () -> [ :container_identifier, :container_type, :packed_items, :weight, :carrier, :container_sequence_number, :dimensions, :manifest_date, :manifest_id, :scac_code, :ship_method, :tracking_number ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Container

        attr_reader carrier: String?
        attr_reader container_identifier: String?
        attr_reader container_sequence_number: Integer?
        attr_reader container_type: String?
        attr_reader dimensions: Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions?
        attr_reader manifest_date: String?
        attr_reader manifest_id: String?
        attr_reader packed_items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem]?
        attr_reader scac_code: String?
        attr_reader ship_method: String?
        attr_reader tracking_number: String?
        attr_reader weight: Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight?

        def members: () -> [ :container_identifier, :container_type, :packed_items, :weight, :carrier, :container_sequence_number, :dimensions, :manifest_date, :manifest_id, :scac_code, :ship_method, :tracking_number ]
        def to_h: () -> { container_identifier: String?, container_type: String?, packed_items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem]?, weight: Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight?, carrier: String?, container_sequence_number: Integer?, dimensions: Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions?, manifest_date: String?, manifest_id: String?, scac_code: String?, ship_method: String?, tracking_number: String? }
      end

      class CustomerInvoice < Data
        def self.new: (content: String?, purchase_order_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice
                    | (String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice
        def self.[]: (content: String?, purchase_order_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice
                   | (String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice

        def self.members: () -> [ :content, :purchase_order_number ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice

        attr_reader content: String?
        attr_reader purchase_order_number: String?

        def members: () -> [ :content, :purchase_order_number ]
        def to_h: () -> { content: String?, purchase_order_number: String? }
      end

      class CustomerInvoiceList < Data
        def self.new: (?customer_invoices: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice]?, ?pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList
        def self.[]: (?customer_invoices: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice]?, ?pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList

        def self.members: () -> [ :customer_invoices, :pagination ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList

        attr_reader customer_invoices: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice]?
        attr_reader pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?

        def members: () -> [ :customer_invoices, :pagination ]
        def to_h: () -> { customer_invoices: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice]?, pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination? }
      end

      class Dimensions < Data
        def self.new: (height: String?, length: String?, unit_of_measure: String?, width: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions
                    | (String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions
        def self.[]: (height: String?, length: String?, unit_of_measure: String?, width: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions
                   | (String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions

        def self.members: () -> [ :height, :length, :unit_of_measure, :width ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Dimensions

        attr_reader height: String?
        attr_reader length: String?
        attr_reader unit_of_measure: String?
        attr_reader width: String?

        def members: () -> [ :height, :length, :unit_of_measure, :width ]
        def to_h: () -> { height: String?, length: String?, unit_of_measure: String?, width: String? }
      end

      class Error < Data
        def self.new: (code: String?, message: String?, ?details: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Error
                    | (String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Error
        def self.[]: (code: String?, message: String?, ?details: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Error
                   | (String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Error

        def self.members: () -> [ :code, :message, :details ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Error

        attr_reader code: String?
        attr_reader details: String?
        attr_reader message: String?

        def members: () -> [ :code, :message, :details ]
        def to_h: () -> { code: String?, message: String?, details: String? }
      end

      class ErrorList < Array[Error]
        def self.parse: (Array[untyped]) -> ErrorList
      end

      class GetCustomerInvoiceResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoiceResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoiceResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoiceResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoiceResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoiceResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoice? }
      end

      class GetCustomerInvoicesResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoicesResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoicesResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoicesResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoicesResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetCustomerInvoicesResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::CustomerInvoiceList? }
      end

      class GetPackingSlipListResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipListResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipListResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipListResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipListResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipListResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList? }
      end

      class GetPackingSlipResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetPackingSlipResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip? }
      end

      class GetShippingLabelListResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelListResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelListResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelListResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelListResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelListResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList? }
      end

      class GetShippingLabelResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::GetShippingLabelResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel? }
      end

      class Item < Data
        def self.new: (item_sequence_number: Integer?, shipped_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, ?buyer_product_identifier: String?, ?vendor_product_identifier: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Item
                    | (Integer?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Item
        def self.[]: (item_sequence_number: Integer?, shipped_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, ?buyer_product_identifier: String?, ?vendor_product_identifier: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Item
                   | (Integer?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Item

        def self.members: () -> [ :item_sequence_number, :shipped_quantity, :buyer_product_identifier, :vendor_product_identifier ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Item

        attr_reader buyer_product_identifier: String?
        attr_reader item_sequence_number: Integer?
        attr_reader shipped_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?
        attr_reader vendor_product_identifier: String?

        def members: () -> [ :item_sequence_number, :shipped_quantity, :buyer_product_identifier, :vendor_product_identifier ]
        def to_h: () -> { item_sequence_number: Integer?, shipped_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, buyer_product_identifier: String?, vendor_product_identifier: String? }
      end

      class ItemQuantity < Data
        def self.new: (amount: Integer?, unit_of_measure: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity
                    | (Integer?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity
        def self.[]: (amount: Integer?, unit_of_measure: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity
                   | (Integer?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity

        def self.members: () -> [ :amount, :unit_of_measure ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity

        attr_reader amount: Integer?
        attr_reader unit_of_measure: String?

        def members: () -> [ :amount, :unit_of_measure ]
        def to_h: () -> { amount: Integer?, unit_of_measure: String? }
      end

      class LabelData < Data
        def self.new: (content: String?, ?package_identifier: String?, ?ship_method: String?, ?ship_method_name: String?, ?tracking_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData
                    | (String?, String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData
        def self.[]: (content: String?, ?package_identifier: String?, ?ship_method: String?, ?ship_method_name: String?, ?tracking_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData
                   | (String?, String?, String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData

        def self.members: () -> [ :content, :package_identifier, :ship_method, :ship_method_name, :tracking_number ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData

        attr_reader content: String?
        attr_reader package_identifier: String?
        attr_reader ship_method: String?
        attr_reader ship_method_name: String?
        attr_reader tracking_number: String?

        def members: () -> [ :content, :package_identifier, :ship_method, :ship_method_name, :tracking_number ]
        def to_h: () -> { content: String?, package_identifier: String?, ship_method: String?, ship_method_name: String?, tracking_number: String? }
      end

      class PackedItem < Data
        def self.new: (item_sequence_number: Integer?, packed_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, ?buyer_product_identifier: String?, ?vendor_product_identifier: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem
                    | (Integer?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem
        def self.[]: (item_sequence_number: Integer?, packed_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, ?buyer_product_identifier: String?, ?vendor_product_identifier: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem
                   | (Integer?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem

        def self.members: () -> [ :item_sequence_number, :packed_quantity, :buyer_product_identifier, :vendor_product_identifier ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackedItem

        attr_reader buyer_product_identifier: String?
        attr_reader item_sequence_number: Integer?
        attr_reader packed_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?
        attr_reader vendor_product_identifier: String?

        def members: () -> [ :item_sequence_number, :packed_quantity, :buyer_product_identifier, :vendor_product_identifier ]
        def to_h: () -> { item_sequence_number: Integer?, packed_quantity: Peddler::APIs::VendorDirectFulfillmentShippingV1::ItemQuantity?, buyer_product_identifier: String?, vendor_product_identifier: String? }
      end

      class PackingSlip < Data
        def self.new: (content: String?, purchase_order_number: String?, ?content_type: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip
                    | (String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip
        def self.[]: (content: String?, purchase_order_number: String?, ?content_type: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip
                   | (String?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip

        def self.members: () -> [ :content, :purchase_order_number, :content_type ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip

        attr_reader content: String?
        attr_reader content_type: String?
        attr_reader purchase_order_number: String?

        def members: () -> [ :content, :purchase_order_number, :content_type ]
        def to_h: () -> { content: String?, purchase_order_number: String?, content_type: String? }
      end

      class PackingSlipList < Data
        def self.new: (?packing_slips: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip]?, ?pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList
        def self.[]: (?packing_slips: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip]?, ?pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList

        def self.members: () -> [ :packing_slips, :pagination ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlipList

        attr_reader packing_slips: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip]?
        attr_reader pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?

        def members: () -> [ :packing_slips, :pagination ]
        def to_h: () -> { packing_slips: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::PackingSlip]?, pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination? }
      end

      class Pagination < Data
        def self.new: (?next_token: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination
                    | (String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination
        def self.[]: (?next_token: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination
                   | (String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination

        def self.members: () -> [ :next_token ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination

        attr_reader next_token: String?

        def members: () -> [ :next_token ]
        def to_h: () -> { next_token: String? }
      end

      class PartyIdentification < Data
        def self.new: (party_id: String?, ?address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, ?tax_registration_details: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification
                    | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification
        def self.[]: (party_id: String?, ?address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, ?tax_registration_details: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification
                   | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification

        def self.members: () -> [ :party_id, :address, :tax_registration_details ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification

        attr_reader address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?
        attr_reader party_id: String?
        attr_reader tax_registration_details: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails]?

        def members: () -> [ :party_id, :address, :tax_registration_details ]
        def to_h: () -> { party_id: String?, address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, tax_registration_details: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails]? }
      end

      class ShipmentConfirmation < Data
        def self.new: (items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Item]?, purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, shipment_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails?, ?containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Item]?, String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation
        def self.[]: (items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Item]?, purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, shipment_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails?, ?containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Item]?, String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation

        def self.members: () -> [ :items, :purchase_order_number, :selling_party, :ship_from_party, :shipment_details, :containers ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation

        attr_reader containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?
        attr_reader items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Item]?
        attr_reader purchase_order_number: String?
        attr_reader selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?
        attr_reader ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?
        attr_reader shipment_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails?

        def members: () -> [ :items, :purchase_order_number, :selling_party, :ship_from_party, :shipment_details, :containers ]
        def to_h: () -> { items: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Item]?, purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, shipment_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails?, containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]? }
      end

      class ShipmentDetails < Data
        def self.new: (shipment_status: String?, shipped_date: Time?, ?estimated_delivery_date: Time?, ?priority_shipment: bool?, ?vendor_order_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails
                    | (String?, Time?, Time?, bool?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails
        def self.[]: (shipment_status: String?, shipped_date: Time?, ?estimated_delivery_date: Time?, ?priority_shipment: bool?, ?vendor_order_number: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails
                   | (String?, Time?, Time?, bool?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails

        def self.members: () -> [ :shipment_status, :shipped_date, :estimated_delivery_date, :priority_shipment, :vendor_order_number ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentDetails

        attr_reader estimated_delivery_date: Time?
        attr_reader priority_shipment: bool?
        attr_reader shipment_status: String?
        attr_reader shipped_date: Time?
        attr_reader vendor_order_number: String?

        def members: () -> [ :shipment_status, :shipped_date, :estimated_delivery_date, :priority_shipment, :vendor_order_number ]
        def priority_shipment?: () -> bool
        def to_h: () -> { shipment_status: String?, shipped_date: Time?, estimated_delivery_date: Time?, priority_shipment: bool?, vendor_order_number: String? }
      end

      class ShipmentStatusUpdate < Data
        def self.new: (purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, status_update_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate
                    | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate
        def self.[]: (purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, status_update_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate
                   | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate

        def self.members: () -> [ :purchase_order_number, :selling_party, :ship_from_party, :status_update_details ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate

        attr_reader purchase_order_number: String?
        attr_reader selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?
        attr_reader ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?
        attr_reader status_update_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails?

        def members: () -> [ :purchase_order_number, :selling_party, :ship_from_party, :status_update_details ]
        def to_h: () -> { purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, status_update_details: Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails? }
      end

      class ShippingLabel < Data
        def self.new: (label_data: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData]?, label_format: String?, purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData]?, String?, String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel
        def self.[]: (label_data: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData]?, label_format: String?, purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData]?, String?, String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel

        def self.members: () -> [ :label_data, :label_format, :purchase_order_number, :selling_party, :ship_from_party ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel

        attr_reader label_data: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData]?
        attr_reader label_format: String?
        attr_reader purchase_order_number: String?
        attr_reader selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?
        attr_reader ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?

        def members: () -> [ :label_data, :label_format, :purchase_order_number, :selling_party, :ship_from_party ]
        def to_h: () -> { label_data: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::LabelData]?, label_format: String?, purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification? }
      end

      class ShippingLabelList < Data
        def self.new: (?pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?, ?shipping_labels: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList
                    | (Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList
        def self.[]: (?pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?, ?shipping_labels: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList
                   | (Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList

        def self.members: () -> [ :pagination, :shipping_labels ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelList

        attr_reader pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?
        attr_reader shipping_labels: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel]?

        def members: () -> [ :pagination, :shipping_labels ]
        def to_h: () -> { pagination: Peddler::APIs::VendorDirectFulfillmentShippingV1::Pagination?, shipping_labels: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabel]? }
      end

      class ShippingLabelRequest < Data
        def self.new: (purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ?containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest
                    | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest
        def self.[]: (purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ?containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest
                   | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest

        def self.members: () -> [ :purchase_order_number, :selling_party, :ship_from_party, :containers ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest

        attr_reader containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]?
        attr_reader purchase_order_number: String?
        attr_reader selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?
        attr_reader ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?

        def members: () -> [ :purchase_order_number, :selling_party, :ship_from_party, :containers ]
        def to_h: () -> { purchase_order_number: String?, selling_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, ship_from_party: Peddler::APIs::VendorDirectFulfillmentShippingV1::PartyIdentification?, containers: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Container]? }
      end

      class StatusUpdateDetails < Data
        def self.new: (reason_code: String?, status_code: String?, status_date_time: Time?, status_location_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, tracking_number: String?, ?shipment_schedule: Hash[untyped, untyped]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails
                    | (String?, String?, Time?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, String?, Hash[untyped, untyped]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails
        def self.[]: (reason_code: String?, status_code: String?, status_date_time: Time?, status_location_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, tracking_number: String?, ?shipment_schedule: Hash[untyped, untyped]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails
                   | (String?, String?, Time?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, String?, Hash[untyped, untyped]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails

        def self.members: () -> [ :reason_code, :status_code, :status_date_time, :status_location_address, :tracking_number, :shipment_schedule ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::StatusUpdateDetails

        attr_reader reason_code: String?
        attr_reader shipment_schedule: Hash[untyped, untyped]?
        attr_reader status_code: String?
        attr_reader status_date_time: Time?
        attr_reader status_location_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?
        attr_reader tracking_number: String?

        def members: () -> [ :reason_code, :status_code, :status_date_time, :status_location_address, :tracking_number, :shipment_schedule ]
        def to_h: () -> { reason_code: String?, status_code: String?, status_date_time: Time?, status_location_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, tracking_number: String?, shipment_schedule: Hash[untyped, untyped]? }
      end

      class SubmitShipmentConfirmationsRequest < Data
        def self.new: (?shipment_confirmations: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsRequest
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsRequest
        def self.[]: (?shipment_confirmations: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsRequest
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsRequest

        def self.members: () -> [ :shipment_confirmations ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsRequest

        attr_reader shipment_confirmations: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation]?

        def members: () -> [ :shipment_confirmations ]
        def to_h: () -> { shipment_confirmations: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentConfirmation]? }
      end

      class SubmitShipmentConfirmationsResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentConfirmationsResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference? }
      end

      class SubmitShipmentStatusUpdatesRequest < Data
        def self.new: (?shipment_status_updates: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesRequest
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesRequest
        def self.[]: (?shipment_status_updates: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesRequest
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesRequest

        def self.members: () -> [ :shipment_status_updates ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesRequest

        attr_reader shipment_status_updates: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate]?

        def members: () -> [ :shipment_status_updates ]
        def to_h: () -> { shipment_status_updates: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShipmentStatusUpdate]? }
      end

      class SubmitShipmentStatusUpdatesResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShipmentStatusUpdatesResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference? }
      end

      class SubmitShippingLabelsRequest < Data
        def self.new: (?shipping_label_requests: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsRequest
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsRequest
        def self.[]: (?shipping_label_requests: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsRequest
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest]?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsRequest

        def self.members: () -> [ :shipping_label_requests ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsRequest

        attr_reader shipping_label_requests: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest]?

        def members: () -> [ :shipping_label_requests ]
        def to_h: () -> { shipping_label_requests: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::ShippingLabelRequest]? }
      end

      class SubmitShippingLabelsResponse < Data
        def self.new: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsResponse
                    | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsResponse
        def self.[]: (?errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, ?payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsResponse
                   | (Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsResponse

        def self.members: () -> [ :errors, :payload ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::SubmitShippingLabelsResponse

        attr_reader errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?
        attr_reader payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference?

        def members: () -> [ :errors, :payload ]
        def to_h: () -> { errors: Array[Peddler::APIs::VendorDirectFulfillmentShippingV1::Error]?, payload: Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference? }
      end

      class TaxRegistrationDetails < Data
        def self.new: (tax_registration_number: String?, ?tax_registration_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, ?tax_registration_messages: String?, ?tax_registration_type: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails
                    | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails
        def self.[]: (tax_registration_number: String?, ?tax_registration_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, ?tax_registration_messages: String?, ?tax_registration_type: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails
                   | (String?, Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails

        def self.members: () -> [ :tax_registration_number, :tax_registration_address, :tax_registration_messages, :tax_registration_type ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TaxRegistrationDetails

        attr_reader tax_registration_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?
        attr_reader tax_registration_messages: String?
        attr_reader tax_registration_number: String?
        attr_reader tax_registration_type: String?

        def members: () -> [ :tax_registration_number, :tax_registration_address, :tax_registration_messages, :tax_registration_type ]
        def to_h: () -> { tax_registration_number: String?, tax_registration_address: Peddler::APIs::VendorDirectFulfillmentShippingV1::Address?, tax_registration_messages: String?, tax_registration_type: String? }
      end

      class TransactionReference < Data
        def self.new: (?transaction_id: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference
                    | (String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference
        def self.[]: (?transaction_id: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference
                   | (String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference

        def self.members: () -> [ :transaction_id ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::TransactionReference

        attr_reader transaction_id: String?

        def members: () -> [ :transaction_id ]
        def to_h: () -> { transaction_id: String? }
      end

      class Weight < Data
        def self.new: (unit_of_measure: String?, value: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight
                    | (String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight
        def self.[]: (unit_of_measure: String?, value: String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight
                   | (String?, String?) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight

        def self.members: () -> [ :unit_of_measure, :value ]

        def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Peddler::APIs::VendorDirectFulfillmentShippingV1::Weight

        attr_reader unit_of_measure: String?
        attr_reader value: String?

        def members: () -> [ :unit_of_measure, :value ]
        def to_h: () -> { unit_of_measure: String?, value: String? }
      end

      def get_customer_invoice: (String, ?rate_limit: Float) -> Peddler::Response
      def get_customer_invoices: (String, String, ?ship_from_party_id: String?, ?limit: Integer?, ?sort_order: String?, ?next_token: String?, ?rate_limit: Float) -> Peddler::Response

      def get_packing_slip: (String, ?rate_limit: Float) -> Peddler::Response
      def get_packing_slips: (String, String, ?ship_from_party_id: String?, ?limit: Integer?, ?sort_order: String?, ?next_token: String?, ?rate_limit: Float) -> Peddler::Response
      def get_shipping_label: (String, ?rate_limit: Float) -> Peddler::Response
      def get_shipping_labels: (String, String, ?ship_from_party_id: String?, ?limit: Integer?, ?sort_order: String?, ?next_token: String?, ?rate_limit: Float) -> Peddler::Response

      def submit_shipment_confirmations: (Hash[untyped, untyped], ?rate_limit: Float) -> Peddler::Response
      def submit_shipment_status_updates: (Hash[untyped, untyped], ?rate_limit: Float) -> Peddler::Response
      def submit_shipping_label_request: (Hash[untyped, untyped], ?rate_limit: Float) -> Peddler::Response
    end
  end
end
