module Generator
  class API
    include Formatter
    include Logger

    @model: Hash[String, untyped]?
    @name: String?
    @operations: Array[Operation]?

    attr_reader file: String

    def initialize: (String file) -> void

    def class_name: () -> String
    def description: () -> String

    def file_path: () -> String
    def generate: () -> void

    def github_model_filename: () -> String
    def has_helper?: () -> bool

    def helper_class_name: () -> String

    def helper_library_name: () -> String
    def library_name: () -> String

    def name: () -> String

    def name_with_version: () -> String

    def openapi_spec: () -> Hash[String, untyped]
    def operations: () -> Array[Operation]

    def paths: () -> Array[Path]
    def title: () -> String

    def type_names: () -> Array[String]
    def version: () -> String

    private

    def deduplicate_operations: (Array[Operation] ops) -> Array[Operation]

    def model: () -> Hash[String, untyped]
    def render: () -> String

    def template: () -> String
  end
end
