module Generator
  class TypeResolver
    MONEY_TYPES: Array[String]

    def self.money?: (String name) -> bool
    attr_reader specification: Hash[String, untyped]?
    attr_reader type_name: String

    def initialize: (String type_name, Hash[String, untyped]? specification) -> void

    def generated_type?: (String name) -> bool
    def resolve: (untyped prop_def, ?for_comment: bool, ?for_rbs: bool) -> String

    private

    def money?: (String name) -> bool

    def resolve_array_type: (Hash[String, untyped] prop_def, bool for_comment, ?bool for_rbs) -> String

    def resolve_array_with_ref: (String ref, bool for_comment, ?bool for_rbs) -> String

    def resolve_array_with_type: (String item_type, bool for_comment, ?bool for_rbs) -> String
    def resolve_inline_type: (Hash[String, untyped] prop_def, bool for_comment, ?bool for_rbs) -> String
    def resolve_ref_array: (Hash[String, untyped] ref_def, bool for_comment, ?bool for_rbs) -> String
    def resolve_ref_definition: (String ref_name, bool for_comment, ?bool for_rbs) -> String
    def resolve_ref_type: (String ref, bool for_comment, ?bool for_rbs) -> String
  end
end
