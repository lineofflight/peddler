# frozen_string_literal: true

module Generator
  extend Logger

  self.@apis: Array[API]?
  self.@types: Array[Type]?

  def self.generate: () -> void

  private

  def self.ensure_api_models_exist!: () -> void
  def self.initialize_directories!: () -> void
  def self.generate_apis!: () -> void
  def self.generate_types!: () -> void
  def self.generate_types_index_files!: () -> void
  def self.generate_entry_point!: () -> void
  def self.generate_api_signatures!: () -> void
  def self.generate_type_signatures!: () -> void
  def self.generate_entry_point_for_signatures!: () -> void
  def self.format_code!: () -> void
  def self.apis: () -> Array[API]
  def self.types: () -> Array[Type]
  def self.api_model_files: () -> Array[String]
end
