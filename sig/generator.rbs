module Generator
  extend Logger

  self.@api_filter: String?

  self.@apis: Array[API]?

  self.@types: Array[Type]?

  def self.generate: (?api_filter: String?) -> void

  private

  def self.api_model_files: () -> Array[String]

  def self.apis: () -> Array[API]

  def self.cleanup_filtered_api_types!: () -> void

  def self.clone_api_models: (String api_models_dir) -> void

  def self.ensure_api_models_exist!: () -> void

  def self.format_code!: () -> void

  def self.generate_api_signatures!: () -> void

  def self.generate_apis!: () -> void

  def self.generate_entry_point!: () -> void

  def self.generate_entry_point_for_signatures!: () -> void

  def self.generate_type_signatures!: () -> void

  def self.generate_types!: () -> void

  def self.generate_types_index_files!: () -> void

  def self.initialize_directories!: () -> void

  def self.models_older_than_one_day?: (String api_models_dir) -> bool

  def self.should_format?: (String file) -> bool

  def self.sort_rbs_files!: () -> void

  def self.types: () -> Array[Type]

  def self.update_api_models: (String api_models_dir) -> void
end
