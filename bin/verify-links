#!/usr/bin/env bash

# Enable strict error handling
set -euo pipefail

# Logger function
log_info() {
  printf "\e[32m✅ %s\e[0m\n" "$1"
}

log_warn() {
  printf "\e[33m👀 %s\e[0m\n" "$1"
}

log_error() {
  printf "\e[31m❌ %s\e[0m\n" "$1" >&2
}

matches=$(
  {
    # Output README.md
    cat README.md
    # Find comments in the lib directory, excluding .erb files
    grep -EhoR --exclude='*.erb' '# .*' lib
  } |
  # Extract URLs from the combined output
  grep -Eo 'https?://[^ )>,"]+' |
  # Remove trailing punctuation (period, single quote, closing tags)
  sed -E "s/[.'\`]+\$//; s/<\/a\$//; s/'\$//;" |
  uniq
)

tmpdir=$(mktemp -d)
trap 'rm -rf "$tmpdir"' EXIT

# Check each URL
while IFS= read -r url; do
  {
    response=$(curl -s -o /dev/null -w "%{http_code}" "$url")
    case $response in
      200)
        log_info "$response $url"
        ;;
      301|302)
        log_warn "$response $url"
        ;;
      *)
        touch "$tmpdir/failed"
        log_error "$response $url"
        ;;
    esac
  } &
done <<< "$matches"

# Wait for all background jobs to finish
wait

if [[ -f "$tmpdir/failed" ]]; then
  log_warn "Please fix broken documentation links."
  exit 1
fi
