name: build

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - run: bundle exec rubocop

  verify-links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
      - run: bin/verify-links

  test:
    strategy:
      matrix:
        ruby: ["3.2", "3.3"]
        appraisal: [http-5, http-github]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - run: bundle exec appraisal install
      - run: bundle exec appraisal ${{ matrix.appraisal }} rake test

  coverage:
    if: github.event_name == 'push'
    needs: [lint, verify-links, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          COVERAGE: true
        with:
          coverageCommand: bundle exec rake test

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract version from tag
        id: extract_version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: ${{ steps.extract_version.outputs.version }}
