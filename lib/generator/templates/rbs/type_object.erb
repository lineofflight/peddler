module Peddler
  module Types
    module <%= api_name.camelize %>
      class <%= class_name %> < Data
<% properties.each do |prop_name, prop_def| -%>
<% attr_name = attribute_name_for(prop_name, prop_def) -%>
<% is_required = required?(prop_name) -%>
        attr_reader <%= attr_name %>: <%= rbs_type_for(prop_def) %><%= is_required ? "" : "?" %>
<% end -%>

        def self.parse: (Hash[String, untyped] hash) -> instance

        def initialize: (
<% properties.each_with_index do |(prop_name, prop_def), index| -%>
<% attr_name = attribute_name_for(prop_name, prop_def) -%>
<% is_required = required?(prop_name) -%>
          <%= is_required ? "" : "?" %><%= attr_name %>: <%= rbs_type_for(prop_def) %><%= "," unless index == properties.size - 1 %>
<% end -%>
        ) -> void
      end
    end
  end
end
